<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Redis Documentation on Redis Documentation Center</title><link>/</link><description>Recent content in Redis Documentation on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>RedisInsight v2.16.0, December 2022</title><link>/ri/release-notes/v.2.16.0/</link><pubDate>Wed, 28 Dec 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v.2.16.0/</guid><description>2.16.0 (December 2022) This is the General Availability (GA) release of RedisInsight 2.16.
Highlights Bulk import database connections from a file Navigation enhancements for the Tree view Pre-populated host, port, and database alias in the form when adding a new Redis database Details Features and improvements
#1492, #1497, #1500, #1502 Migrate your database connections from other Redis GUIs, including RESP.app, with the new feature to bulk import database connections from a file.</description></item><item><title>RedisInsight v2.14.0, November 2022</title><link>/ri/release-notes/v.2.14.0/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v.2.14.0/</guid><description>2.14.0 (November 2022) This is the General Availability (GA) release of RedisInsight 2.14.
Highlights Support for search capabilities in Browser: Create secondary index via dedicated form, run queries and full-text search in Browser or Tree views Ability to resize the column width of key values when displaying hashes, lists, and sorted sets Command processing time displayed as part of the result in Workbench Details Features and improvements
#1345, #1346, #1376 Added support for search capabilities in Browser tool.</description></item><item><title>RedisInsight v2.18.0, January 2023</title><link>/ri/release-notes/v.2.18.0/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v.2.18.0/</guid><description>2.18.0 (January 2023) This is the General Availability (GA) release of RedisInsight 2.18.
Highlights Support for SSH tunnel to connect to your Redis database Ability to switch between database indexes while connected to your database Recommendations on how to optimize the usage of your database Details Features and improvements
#1567, #1576, #1577 Connect to your Redis database via SSH tunnel using a password or private key in PEM format. #1540, #1608 Switch between database indexes while connected to your database in Browser, Workbench, and Database Analysis.</description></item><item><title>RedisInsight v2.12.0, October 2022</title><link>/ri/release-notes/v2.12.0/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v2.12.0/</guid><description>2.12.0 (October 2022) This is the General Availability (GA) release of RedisInsight 2.12.
Highlights Database Analysis: Get insights and optimize the usage and performance of your Redis or Redis Stack based on the overview of the memory and data type distribution, big or complicated keys, and namespaces used Faster initial loading of the list of keys in Browser and Tree views Performance optimizations for large results in Workbench Details Features and improvements</description></item><item><title>Get started with Redis Enterprise Software</title><link>/rs/installing-upgrading/get-started-redis-enterprise-software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/get-started-redis-enterprise-software/</guid><description>This guide helps you install Redis Enterprise Software on a Linux host to test its capabilities.
When finished, you&amp;rsquo;ll have a simple cluster with a single node:
Step 1: Install Redis Enterprise Software Step 2: Set up a Redis Enterprise Software cluster Step 3: Create a new Redis database Step 4: Connect to your Redis database Note: This quick start is designed for local testing only. For production environments, the install and setup guide walks through deployment options appropriate for a production environment.</description></item><item><title>Modules quick start</title><link>/modules/modules-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/modules-quickstart/</guid><description>To quickly set up a Redis database with modules, you can sign up for a free Redis Enterprise Cloud subscription and create a Redis Stack database.
Redis Stack databases include the following modules:
RediSearch RedisJSON RedisGraph RedisTimeSeries RedisBloom Alternatively, you can use one of these methods to set up a Redis database with modules:
Redis Enterprise Software Redis Enterprise Software in a Docker container Other platforms for Redis Enterprise Software Set up a Redis Cloud database To set up a Redis Cloud database with modules enabled, follow these steps:</description></item><item><title>RedisInsight v2.10.0, September 2022</title><link>/ri/release-notes/v2.10.0/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v2.10.0/</guid><description>2.10.0 (September 2022) This is the General Availability (GA) release of RedisInsight 2.10.
Highlights Formatters: Additional support for values of keys with Protobuf, Binary, PHP unserialize (view and edit serialized PHP values as JSON), and Java serialized objects, save formatters selected when viewing other keys New overview for cluster databases displays memory and key allocation as well as database information per shards Configure Workbench to persist the Editor after commands have been run and group the results Complete an optional user survey Details Features and improvements</description></item><item><title>Get started with Redis Enterprise Software using Docker</title><link>/rs/installing-upgrading/get-started-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/get-started-docker/</guid><description>Warning - Docker containers are currently only supported for development and testing environments, not for production. For testing purposes, you can run Redis Enterprise Software (RS) on Docker containers on Linux, Windows, or MacOS. The Redis Enterprise Software container represents a node in an RS Cluster. When deploying RS using Docker, there are a couple of common topologies:
Topology #1: The simplest topology is to run a single-node RS Cluster with a single container in a single host machine.</description></item><item><title>RedisInsight v2.8.0, August 2022</title><link>/ri/release-notes/v2.8.0/</link><pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v2.8.0/</guid><description>2.8.0 (August 2022) This is the General Availability (GA) release of RedisInsight 2.8.0
Headlines Formatters: See formatted key values in JSON, MessagePack, Hex, Unicode, or ASCII in Browser/Tree view for an improved experience of working with different data formats. Clone existing database connection or connection details: Clone the database connection you previously added to have the same one, but with a different database index, username, or password. Raw mode in Workbench: Added support for the raw mode in Workbench results Details Features and improvements</description></item><item><title>RedisInsight v1.13, Aug 2022</title><link>/ri/release-notes/v1.13.0/</link><pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.13.0/</guid><description>1.13.1 (November 2022) This is the maintenance release of RedisInsight 1.13 (v1.13.1).
Fixes: Core: Fixed container vulnerabilities. Prevented healthcheck API from overloading RedisInsight DB. Earlier, a separate session was created for each healthcheck hit, which overloaded the database with too many session tokens. Now, healtcheck API doesn&amp;rsquo;t create any session tokens. Get Sentinel host using IP field. Memory Analysis: Added support for hashlistpack, zsetlistpack, quicklist2 and streamlistpack2, encoding types. 1.13.0 (August 2022) This is the General Availability Release of RedisInsight 1.</description></item><item><title>RedisInsight v2.6.0, July 2022</title><link>/ri/release-notes/v.2.6.0/</link><pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v.2.6.0/</guid><description>2.6.0 (July 2022) This is the General Availability (GA) release of RedisInsight 2.6.0
Headlines: Bulk actions: Delete the keys in bulk based on the filters set in Browser or Tree view Multiline support for key values in Browser and Tree View: Click the key value to see it in full Pipeline support in Workbench: Batch Redis commands in Workbench to optimize round-trip times In-app notifications: Receive messages about important changes, updates, or announcements inside the application.</description></item><item><title>RedisInsight v2.4.0, June 2022</title><link>/ri/release-notes/v.2.4.0/</link><pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v.2.4.0/</guid><description>2.4.0 (June 2022) This is the General Availability (GA) release of RedisInsight 2.4.0
Headlines: Pub/Sub: Added support for Redis pub/sub enabling subscription to channels and posting messages to channels. Consumer groups: Added support for streams consumer groups enabling provision of different subsets of messages from the same stream to many clients for inspection and processing. Database search: Search the list of databases added to RedisInsight to quickly find the required database.</description></item><item><title>Install the RedisInsight Desktop Client</title><link>/ri/installing/install-redis-desktop/</link><pubDate>Fri, 20 Jul 2018 03:49:29 +0530</pubDate><guid>/ri/installing/install-redis-desktop/</guid><description>The RedisInsight desktop client allows you to download and use the RedisInsight UI locally. The desktop client is supported on Windows, MacOS, and Ubuntu operating systems and works with all variants of Redis.
System Requirements Requirement Ubuntu MacOS Windows Operating System Ubuntu 18.04 LTS or later MacOS 10.13 or later Windows 10 Memory (RAM) 8GB 8GB 8GB Processor 64 bit 64 bit 32 bit or 64 bit Note: For unsupported operating systems, you can still install RedisInsight.</description></item><item><title>Active-Active Redis</title><link>/rc/databases/active-active-redis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/active-active-redis/</guid><description>Active-Active databases store data across multiple regions and availability zones. This improves scalability, performance, and availability, especially when compared to standalone databases. To create Active-Active databases, you need a Flexible (or Annual) Redis Enterprise Cloud subscription that enables Active-Active Redis and defines the regions for each copy of your databases. This is defined when you create a new subscription.
Active-Active databases are distributed across multiple regions (geo-distribution). This improves performance by reducing latency for nearby users and improves availability by protecting against data loss in case of network or resource failure.</description></item><item><title>Manage Redis Enterprise databases for Kubernetes</title><link>/kubernetes/re-databases/db-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-databases/db-controller/</guid><description>Redis Enterprise database (REDB) lifecycle A Redis Enterprise database (REDB) is created with a custom resource file. The custom resource defines the size, name, and other specifications for the REDB. The database is created when you apply the custom resource file.
The database controller in Redis Enterprise for Kubernetes:
Discovers the custom resource Makes sure the REDB is created in the same namespace as the Redis Enterprise cluster (REC) Maintains consistency between the custom resource and the REDB The database controller recognizes the new custom resource and validates the specification.</description></item><item><title>RedisInsight v2.2.0, May 2022</title><link>/ri/release-notes/v2.2.0/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v2.2.0/</guid><description>2.2.0 (May 2022) This is the General Availability (GA) release of RedisInsight 2.2.0
Headlines: SlowLog: New tool based on results of the Slowlog command to analyze slow operations in Redis instances Streams: Added support for Redis Streams Open the list of keys or key details in full screen Automatically refresh the list of keys and key values with a timer Details Features and improvements:
#621 , #645 , #649 Added SlowLog, a tool that displays the list of logs captured by the Slowlog command to analyze all commands that exceed a specified runtime, which helps in troubleshooting performance issues.</description></item><item><title>RedisInsight v1.12, May 2022</title><link>/ri/release-notes/v1.12.0/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.12.0/</guid><description>1.12.1 (July 2022) This is the maintenance release of RedisInsight 1.12 (v1.12.1)!
Critical Bug Fix: Core: When you add or remove a Redis Enterprise Software or Redis Enterprise Cloud database in RedisInsight v1 that has the RediSearch module loaded, all hashes within that database are deleted. Fixes: Core: Added curl command to container. Fixed container vulnerabilities (CVE-2022-1292, CVE-2022-2068). RediSearch: Fixed index info to report correct information for RediSearch v2. Profiling: Added support for profiling module commands.</description></item><item><title>Module lifecycle</title><link>/modules/modules-lifecycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/modules-lifecycle/</guid><description>Redis Enterprise Software follows the Redis Enterprise lifecycle. (For complete details, see the Redis Enterprise Software subscription agreement.)
Redis modules also follow a release lifecycle and schedule. Here, you&amp;rsquo;ll find the &amp;ldquo;end-of-life&amp;rdquo; dates for each module and release.
Module release numbering Redis modules use a three-place numbering scheme to identify released versions.
The format is “Major1.Major2.Minor”.
Major sections of the version number represent fundamental changes to functionality and feature capabilities. The Major1 and Major2 part of the version number are incremented according to the size and scale of the changes in each release.</description></item><item><title>RedisInsight v2.0, Nov 2021</title><link>/ri/release-notes/v2.0/</link><pubDate>Tue, 23 Nov 2021 00:00:00 +0000</pubDate><guid>/ri/release-notes/v2.0/</guid><description>2.0.6 (April 2022) This is the General Availability (GA) release of RedisInsight 2.0.6
Headlines: SNI support - added SNI support to indicate a hostname in the TLS handshake Save Profiler logs into a file - now you can save and download Profiler logs into a .TXT file Customize delimiters in Tree view - added support for custom delimiters in Tree view Support for node grouping and pulsing in RedisGraph visualizations in Workbench Details Features and improvements:</description></item><item><title>Enterprise feature compatibility for Redis modules</title><link>/modules/enterprise-capabilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/enterprise-capabilities/</guid><description>This article describes Redis Enterprise feature compatibility for Redis modules. Version numbers indicate the minimum module version required for feature support. Footnotes provide additional information as needed.
Redis Enterprise module support The following table shows which modules are supported by Redis Enterprise Software and Redis Enterprise Cloud.
Module Redis EnterpriseSoftware Redis EnterpriseCloud RediSearch ✅ Yes ✅ Yes RedisJSON ✅ Yes ✅ Yes RedisGraph ✅ Yes ✅ Yes RedisTimeSeries ✅ Yes ✅ Yes RedisBloom ✅ Yes ✅ Yes RedisGears ✅ Yes ❌ No RedisAI ✅ Yes ❌ No Module feature support The following tables show feature support for each Redis module.</description></item><item><title>Redis Stack and Redis Enterprise</title><link>/modules/redis-stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redis-stack/</guid><description>Redis Stack simplifies installation and deployment of multiple modules with open source Redis databases.
Redis Enterprise Cloud and Redis Enterprise Software support all capabilities of Redis Stack.
For Fixed or Free subscriptions, Redis Enterprise Cloud supports Redis Stack through the Create database workflow.
When you create a new database in a Fixed or Free Redis Enterprise Cloud subscription, you can set the Type property to Redis Stack.
This automatically adds the following modules to the new database:</description></item><item><title>Add a Redis database</title><link>/ri/using-redisinsight/add-instance/</link><pubDate>Fri, 20 Jul 2018 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/add-instance/</guid><description>Before using any of the tools to work with your database, you must first add the database so RedisInsight can connect to it.
Each of these database configurations requires specific steps to add them to RedisInsight:
Standalone Redis Redis cluster Redis Sentinel Redis with TLS authentication Elasticache Note: Currently, RedisInsight supports Redis versions 4 and newer. Add a standalone Redis database This is the simplest setup of a Redis database with just a single Redis server.</description></item><item><title>Automatically Discovering Databases</title><link>/ri/using-redisinsight/auto-discover-databases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ri/using-redisinsight/auto-discover-databases/</guid><description>RedisInsight lets you automatically add Redis Enterprise Software and Redis Enterprise Cloud databases.
Note: For Redis Cloud, auto-discovery is supported only for Flexible or Annual subscriptions. Auto-discovery for Redis Software To automatically discover and add Redit Software databases to RedisInsight:
In RedisInsight, select ADD REDIS DATABASE.
Select Automatically Discover Databases.
Select Redis Enterprise.
Enter the connection details and then select DISCOVER DATABASES.
From the list of databases, choose the databases that you want to add and then select ADD SELECTED DATABASES.</description></item><item><title>Cluster management commands compatibility</title><link>/rs/references/compatibility/commands/cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/commands/cluster/</guid><description>Clustering in Redis Enterprise Software and Redis Enterprise Cloud differs from the open source Redis cluster and works with all standard Redis clients.
Redis Enterprise blocks most cluster commands. If you try to use a blocked cluster command, it returns an error.
Command Redis
Enterprise Redis
Cloud Notes ASKING ❌ Standard
❌ Active-Active ❌ Standard
❌ Active-Active CLUSTER ADDSLOTS ❌ Standard
❌ Active-Active ❌ Standard
❌ Active-Active CLUSTER BUMPEPOCH ❌ Standard</description></item><item><title>Cluster settings</title><link>/rs/clusters/configure/cluster-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/configure/cluster-settings/</guid><description>You can view and set various cluster settings such as cluster name, email service, time zone, and license in the Settings &amp;gt; General page.
Entering a cluster key After purchasing a cluster key and if your account has the &amp;ldquo;Admin&amp;rdquo; role, you can enter the key in the Cluster Key field, either during initial
cluster creation or at any time afterward. The key defines various cluster settings, such as the maximum number of shards you can have in the cluster.</description></item><item><title>Database clustering</title><link>/rs/databases/durability-ha/clustering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/durability-ha/clustering/</guid><description>Open source Redis is a single-threaded process to provide speed and simplicity. A single Redis process is bound by the CPU core that it is running on and available memory on the server.
Redis Enterprise Software (RS) supports database clustering to allow customers to spread the load of a Redis process over multiple cores and the RAM of multiple servers. A database cluster is a set of Redis processes where each process manages a subset of the database keyspace.</description></item><item><title>Connect to the admin console</title><link>/kubernetes/re-clusters/connect-to-admin-console/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-clusters/connect-to-admin-console/</guid><description>The username and password for the Redis Enterprise Software admin console are stored in a Kubernetes secret. After retrieving your credentials, you can use port forwarding to connect to the admin console.
Note: There are several methods for accessing the admin console. Port forwarding is the simplest, but not the most efficient method for long-term use. You could also use a load balancer service or ingress. Switch to the namespace with your Redis Enterprise cluster (REC).</description></item><item><title>Connection management commands compatibility</title><link>/rs/references/compatibility/commands/connection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/commands/connection/</guid><description>The following tables show which open source Redis connection management commands are compatible with standard and Active-Active databases in Redis Enterprise Software and Redis Enterprise Cloud.
Command Redis
Enterprise Redis
Cloud Notes AUTH ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active CLIENT CACHING ❌ Standard
❌ Active-Active ❌ Standard
❌ Active-Active CLIENT GETNAME ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active CLIENT GETREDIR ❌ Standard
❌ Active-Active ❌ Standard
❌ Active-Active CLIENT ID ✅ Standard</description></item><item><title>Create a Redis Enterprise Software database</title><link>/rs/databases/create/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/create/</guid><description>Redis Enterprise Software lets you create databases and distribute them across a cluster of nodes. These databases can use Redis Enterprise features like:
Redis on Flash High availability Data persistence Redis modules Note: For databases with Active-Active replication for geo-distributed locations, create an Active-Active database. Create a database To create a new database:
In your web browser, open the admin console of the cluster that you want to connect to in order to create the database .</description></item><item><title>Create and manage subscriptions</title><link>/rc/api/examples/manage-subscriptions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/examples/manage-subscriptions/</guid><description>The Redis Enterprise Cloud REST API lets you create and manage a subscription.
Create a subscription Use POST /v1/subscriptions to create a subscription.
POST &amp;#34;https://[host]/v1/subscriptions&amp;#34; { &amp;#34;name&amp;#34;: &amp;#34;Basic subscription example&amp;#34;, &amp;#34;paymentMethodId&amp;#34;: &amp;lt;payment_id&amp;gt;, &amp;#34;cloudProviders&amp;#34;: [ { &amp;#34;cloudAccountId&amp;#34;: &amp;lt;account_id&amp;gt;, &amp;#34;regions&amp;#34;: [ { &amp;#34;region&amp;#34;: &amp;#34;us-east-1&amp;#34;, &amp;#34;networking&amp;#34;: { &amp;#34;deploymentCIDR&amp;#34;: &amp;#34;10.0.0.0/24&amp;#34; } } ] } ], &amp;#34;databases&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;Redis-database-example&amp;#34;, &amp;#34;memoryLimitInGb&amp;#34;: 1.1 } ] } Modify the following parameters in the sample JSON document to create a subscription on your own account:</description></item><item><title>Create certificates</title><link>/rs/security/certificates/create-certificates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/certificates/create-certificates/</guid><description>Follow these instructions to create your own certificates to install on your Redis Enterprise cluster. Note that you can install a separate certificate per cluster component.
Create a private key:
openssl genrsa -out &amp;lt;key-file-name&amp;gt;.pem 2048 Create a certificate signing request:
openssl req -new -key &amp;lt;key-file-name&amp;gt;.pem -out &amp;lt;key-file-name&amp;gt;.csr Note: You will be prompted for a Country Name, State or Province Name, Locality Name, Organization Name, Organizational Unit, and Common Name.
You will need to check with your security team or certificate authority for the right values for your organization.</description></item><item><title>Create a database</title><link>/rc/databases/create-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/create-database/</guid><description>To create a database in your Redis Enterprise Cloud subscription:
Sign in to the Redis Cloud admin portal. (Create an account if you don&amp;rsquo;t already have one.)
If you have more than one subscription, select the target subscription from the list. This displays the Databases tab for the selected subscription.
Select the New database button.
This displays the New database screen, which varies according to your subscription plan.
The New database screen is divided into sections, each dedicated to a specific category of settings.</description></item><item><title>Create a database with Replica Of</title><link>/rs/databases/import-export/replica-of/create/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/replica-of/create/</guid><description>Replica databases copy data from source databases (previously known as master), which enable read-only connections from apps and clients located in different geographic locations.
To create a replica connection, you define a database as a replica of a source database. Replica Of databases (also known as Active-Passive databases) synchronize in the background.
Sources databases can be:
Located in the same Redis Enterprise Software cluster Located in a different Redis Enterprise cluster Hosted by a different deployment, e.</description></item><item><title>Data type commands compatibility</title><link>/rs/references/compatibility/commands/data-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/commands/data-types/</guid><description>The following tables show which open source Redis data type commands are compatible with standard and Active-Active databases in Redis Enterprise Software and Redis Enterprise Cloud.
Bitmap commands Command Redis
Enterprise Redis
Cloud Notes BITCOUNT ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active BITFIELD ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active BITFIELD_RO ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active BITOP ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active BITPOS ✅ Standard</description></item><item><title>Develop applications with Active-Active databases</title><link>/rs/databases/active-active/develop/develop-for-aa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/develop-for-aa/</guid><description>Developing geo-distributed, multi-master applications can be difficult. Application developers may have to understand a large number of race conditions between updates to various sites, network, and cluster failures that could reorder the events and change the outcome of the updates performed across geo-distributed writes.
Active-Active databases (formerly known as CRDB) are geo-distributed databases that span multiple Redis Enterprise Software (RS) clusters. Active-Active databases depend on multi-master replication (MMR) and Conflict-free Replicated Data Types (CRDTs) to power a simple development experience for geo-distributed applications.</description></item><item><title>Enable the API</title><link>/rc/api/get-started/enable-the-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/get-started/enable-the-api/</guid><description>If you have a Flexible (or Annual) Redis Enterprise Cloud subscription, you can use a REST API to manage your subscription programmatically.
Note: The Redis Cloud REST API is available only to Flexible or Annual subscriptions. It is not supported for Fixed or Free subscriptions. For security reasons, the Redis Cloud API is disabled by default.
To enable the API:
Sign in to your Redis Cloud subscription as an account owner.</description></item><item><title>Eviction policy</title><link>/rs/databases/memory-performance/eviction-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/memory-performance/eviction-policy/</guid><description>The eviction policy determines what happens when a database reaches its memory limit.
To make room for new data, older data is evicted (removed) according to the selected policy.
To prevent this from happening, make sure your database is large enough to hold all desired keys.
Eviction Policy Description noeviction New values aren&amp;rsquo;t saved when memory limit is reachedWhen a database uses replication, this applies to the primary database allkeys-lru Keeps most recently used keys; removes least recently used (LRU) keys allkeys-lfu Keeps frequently used keys; removes least frequently used (LFU) keys allkeys-random Randomly removes keys volatile-lru Removes least recently used keys with expire field set to true volatile-lfu Removes least frequently used keys with expire field set to true volatile-random Randomly removes keys with expire field set to true volatile-ttl Removes least frequently used keys with expire field set to true and the shortest remaining time-to-live (TTL) value Eviction policy defaults volatile-lru is the default eviction policy for most databases.</description></item><item><title>Import data into a database</title><link>/rs/databases/import-export/import-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/import-data/</guid><description>You can import, export, or backup files of a specific Redis Enterprise Software database to restore data. You can either import from a single file or from multiple files, such as when you want to import from a backup of a clustered database.
Warning - Importing data erases all existing content in the database. Import data into a database To import data into a database:
Sign in to the admin console and then select Databases from the main menu.</description></item><item><title>Establish external routing with an ingress controller</title><link>/kubernetes/re-databases/set-up-ingress-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-databases/set-up-ingress-controller/</guid><description>Every time a Redis Enterprise database (REDB) is created with the Redis Enterprise operator, a service is created that allows requests to be routed to that database. Redis Enterprise supports three types of services for accessing databases: ClusterIP, headless, or LoadBalancer.
By default, REDB creates a ClusterIP type service, which exposes a cluster-internal IP and can only be accessed from within the K8s cluster. For requests to be routed to the REDB from outside the K8s cluster, you need an ingress controller.</description></item><item><title>Install a module on a cluster</title><link>/modules/install/add-module-to-cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/install/add-module-to-cluster/</guid><description>Redis Enterprise comes packaged with several modules. You can view the installed modules and their versions from settings &amp;gt; redis modules in the Redis Enterprise admin console.
To use other modules or upgrade an existing module to a more recent version, you need to install the new module package on your cluster.
Note: Modules are not supported in Redis Enterprise Software on RHEL/CentOS 6.x. Get packaged modules To install or upgrade a module on a Redis Enterprise cluster, you need a module package.</description></item><item><title>Key commands compatibility</title><link>/rs/references/compatibility/commands/generic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/commands/generic/</guid><description>The following table shows which open source Redis key (generic) commands are compatible with standard and Active-Active databases in Redis Enterprise Software and Redis Enterprise Cloud.
Command Redis
Enterprise Redis
Cloud Notes COPY ✅ Standard
✅ Active-Active* ✅ Standard
✅ Active-Active* *Not supported for stream consumer group info. DEL ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active DUMP ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active EXISTS ✅ Standard
✅ Active-Active ✅ Standard</description></item><item><title>Deploy Redis Enterprise Software for Kubernetes</title><link>/kubernetes/deployment/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/deployment/quick-start/</guid><description>To deploy Redis Enterprise Software for Kubernetes and start your Redis Enterprise cluster (REC), you need to do the following:
Create a new namespace in your Kubernetes cluster. Download the operator bundle. Apply the operator bundle and verify it&amp;rsquo;s running. Create a Redis Enterprise cluster (REC). This guide works with most supported Kubernetes distributions. If you&amp;rsquo;re using OpenShift, see Redis Enterprise on OpenShift. For details on what is currently supported, see supported distributions.</description></item><item><title>Redis with Node.js (node_redis)</title><link>/rs/references/client_references/client_nodejs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_nodejs/</guid><description>To use Redis with Node.js, you need to install a Node.js Redis client. The following sections explain how to use node_redis, a community-recommended Redis client for Node.js.
Another community-recommended client for Node.js developers is ioredis. You can find additional Node.js clients for Redis in the Node.js section of the Redis Clients page.
Install node_redis See the node_redis README file for installation instructions.
To install node_redis, run:
npm install redis Connect to Redis There are several ways that you can connect to Redis, each with different security considerations.</description></item><item><title>Passwords, users, and roles</title><link>/rc/security/database-security/passwords-users-roles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/database-security/passwords-users-roles/</guid><description>All Redis Cloud databases require either password-based authentication or role-based access control. Role-based access control lets you define multiple users with fine-grained authorization features.
Prerequisites To use role-based access control, your Redis Cloud database needs to support Redis version 6.0.0 or later.
The Redis version of a database is displayed in the General section of the Configuration tab of the database detail screen.
Password-based authentication Password-based authentication is a basic but essential Redis security feature.</description></item><item><title>Pub/sub commands compatibility</title><link>/rs/references/compatibility/commands/pub-sub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/commands/pub-sub/</guid><description>The following table shows which open source Redis pub/sub commands are compatible with standard and Active-Active databases in Redis Enterprise Software and Redis Enterprise Cloud.
Command Redis
Enterprise Redis
Cloud Notes PSUBSCRIBE ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active PUBLISH ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active PUBSUB CHANNELS ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active PUBSUB NUMPAT ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active PUBSUB NUMSUB ✅ Standard</description></item><item><title>RedisGears JVM quick start</title><link>/modules/redisgears/jvm/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/quickstart/</guid><description>Prerequisites For this quick start, you need:
A Redis Enterprise cluster with the RedisGears module and JVM plugin installed and enabled on a database redis-cli with connectivity to a Redis database Tutorial Create a Maven project Create a new Maven project.
Add the following sections to the pom.xml file:
&amp;lt;repositories&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;snapshots-repo&amp;lt;/id&amp;gt; &amp;lt;url&amp;gt;https://oss.sonatype.org/content/repositories/snapshots&amp;lt;/url&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;/repositories&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.redislabs&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;gear_runtime&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.0.3-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; Add example code for either batch processing or event processing to your project&amp;rsquo;s main function.</description></item><item><title>RedisGears Python quick start</title><link>/modules/redisgears/python/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/python/quickstart/</guid><description>For this tutorial, you need:
Either: A Redis Enterprise cluster with the RedisGears module and Python plugin installed and enabled on a database An OSS Redis database with the RedisGears module redis-cli with connectivity to a Redis database RedisGears basics In this quick start guide, we&amp;rsquo;ll see how to use RedisGears to perform batch processing and event processing.
With RedisGears, batch processing means processing the data already stored in a Redis database.</description></item><item><title>Redis Cloud quick start</title><link>/rc/rc-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/rc-quickstart/</guid><description>If you&amp;rsquo;re new to Redis Enterprise Cloud, this quick start helps you get up and running.
You&amp;rsquo;ll learn how to:
Create an account, a free subscription, and a database
Connect to your database
If you already have an account, see Create a Fixed subscription to create a Free 30MB subscription. Free plans are a tier of fixed plans; this provides an easy upgrade path when you need it.
If you already have a subscription, see Manage subscriptions and Manage databases.</description></item><item><title>Scripting commands compatibility</title><link>/rs/references/compatibility/commands/scripting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/commands/scripting/</guid><description>The following table shows which open source Redis scripting commands are compatible with standard and Active-Active databases in Redis Enterprise Software and Redis Enterprise Cloud.
Scripting commands Command Redis
Enterprise Redis
Cloud Notes EVAL ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active EVALSHA ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active SCRIPT DEBUG ❌ Standard
❌ Active-Active ❌ Standard
❌ Active-Active SCRIPT EXISTS ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active SCRIPT FLUSH ✅ Standard</description></item><item><title>Server management commands compatibility</title><link>/rs/references/compatibility/commands/server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/commands/server/</guid><description>The following tables show which open source Redis server management commands are compatible with standard and Active-Active databases in Redis Enterprise Software and Redis Enterprise Cloud.
Access control commands Several access control list (ACL) commands are not available in Redis Enterprise. Instead, you can manage access controls from the admin consoles for Redis Enterprise Software and Redis Cloud.
Command Redis
Enterprise Redis
Cloud Notes ACL CAT ✅ Standard
✅ Active-Active ✅ Standard</description></item><item><title>Set up a new cluster</title><link>/rs/clusters/new-cluster-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/new-cluster-setup/</guid><description>A Redis Enterprise Software cluster typically consists of several nodes. For production deployments, we recommend an uneven number of nodes, with a minimum of three.
Note: In a cluster that consists of only one node, some features and capabilities are not enabled, such as database replication that provides high availability. To set up a new cluster, you must first install the Redis Enterprise Software package and then set up the cluster as described below.</description></item><item><title>Redis Cloud shared responsibility model</title><link>/rc/security/shared-responsibility-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/shared-responsibility-model/</guid><description>The security of all Redis Enterprise Cloud deployments is a shared responsibility. Redis, the public cloud providers (Amazon Web Services [AWS], Google Cloud Platform [GCP], and Microsoft Azure), and our customers all help ensure the security of these deployments.
Redis responsibility Redis Enterprise Cloud&amp;rsquo;s offerings are managed by Redis and deployed on AWS, Azure, and Google Cloud infrastructure.
Redis is responsible for the software that runs Redis Enterprise Cloud. This includes the patching and maintenance of the operating systems that Redis is deployed on as well as the patching and maintenance of Redis Enterprise Cloud.</description></item><item><title>Supported connection clients</title><link>/rs/databases/connect/supported-clients-browsers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/connect/supported-clients-browsers/</guid><description>You can connect to Redis Enterprise Software databases programmatically using client libraries.
Redis client libraries To connect an application to a Redis database hosted by Redis Enterprise Software, use a client library appropriate for your programming language.
You can also use the redis-cli utility to connect to a database from the command line.
For examples of each approach, see Get started with Redis Enterprise Software.
Note: You cannot use client libraries to configure Redis Enterprise Software.</description></item><item><title>Supported platforms</title><link>/rs/installing-upgrading/supported-platforms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/supported-platforms/</guid><description>Redis Enterprise Software is supported on several operating systems, cloud environments, and virtual environments.
System requirements Make sure your system meets these requirements:
Only 64-bit operating systems are supported. You must install Redis Enterprise Software directly on the host, not through system cloning. You must install on a clean host with no other applications running so that all RAM is allocated to the operating system and Redis Enterprise Software only.</description></item><item><title>Transaction commands compatibility</title><link>/rs/references/compatibility/commands/transactions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/commands/transactions/</guid><description>The following table shows which open source Redis transaction commands are compatible with standard and Active-Active databases in Redis Enterprise Software and Redis Enterprise Cloud.
Command Redis
Enterprise Redis
Cloud Notes DISCARD ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active EXEC ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active MULTI ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active UNWATCH ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active WATCH ✅ Standard</description></item><item><title>Flexible deployment options</title><link>/kubernetes/deployment/deployment-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/deployment/deployment-options/</guid><description>You can deploy Redis Enterprise for Kubernetes in several different ways depending on your database needs.
Multiple Redis Enterprise database resources (REDB) can be associated with single Redis Enterprise cluster resource (REC) even if they reside in different namespaces.
Note: The Redis Enterprise cluster (REC) custom resource must reside in the same namespace as the Redis Enterprise operator. Single REC and single namespace (one-to-one) The standard and simplest deployment deploys your Redis Enterprise databases (REDB) in the same namespace as the Redis Enterprise cluster (REC).</description></item><item><title>Adding Databases Programmatically</title><link>/ri/using-redisinsight/api/</link><pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate><guid>/ri/using-redisinsight/api/</guid><description>If you have a lot of Redis databases or you are using RedisInsight as part of some automated workflow, you might want to add databases programmatically.
Now this is possible using our experimental REST API. Below is the documentation for the endpoints required to add databases.
Note that this API should not be considered stable at this point and might change or break entirely in future releases. Do not rely on this API for production.</description></item><item><title>Access management</title><link>/rc/security/access-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/access-management/</guid><description>The Access management screen helps you manage:
The team of users allowed to access your subscription and its databases The API keys that authenticate application access to your account Single sign-on (SSO) with SAML Here, you learn how to manage your team&amp;rsquo;s users and to control their level of access.
For help managing API keys, see Manage API keys.
Manage team access The Team tab lets you manage the people allowed to access your account.</description></item><item><title>Audit connection events</title><link>/rs/security/audit-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/audit-events/</guid><description>Starting with version 6.2.18, Redis Enterprise Software lets you audit database connection and authentication events. This helps you track and troubleshoot connection activity.
The following events are tracked:
Database connection attempts Authentication requests, including requests for new and existing connections Database disconnects When tracked events are triggered, notifications are sent via TCP to an address and port defined when auditing is enabled. Notifications appear in near real time and are intended to be consumed by an external listener, such as a TCP listener, third-party service, or related utility.</description></item><item><title>Create Active-Active databases on Kubernetes</title><link>/kubernetes/re-clusters/create-aa-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-clusters/create-aa-database/</guid><description>On Kubernetes, Redis Enterprise Active-Active databases provide read and write access to the same dataset from different Kubernetes clusters. For more general information about Active-Active, see the Redis Enterprise Software docs.
Creating an Active-Active database requires routing network access between two Redis Enterprise clusters residing in two different Kubernetes clusters. Without the proper access configured for each cluster, syncing between the databases instances will fail.
This process consists of:
Documenting values to be used in later steps.</description></item><item><title>Internode encryption</title><link>/rs/security/internode-encryption/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/internode-encryption/</guid><description>As of v6.2.4, Redis Enterprise Software supports internode encryption, which encrypts internal communication between nodes. This improves the security of data as it travels within a cluster.
Internode encryption is enabled for the control plane, which manages the cluster and its databases.
Internode encryption is supported for the data plane, which encrypts communication used to replicate shards between nodes and proxy communication with shards located on different nodes.
The following diagram shows how this works.</description></item><item><title>Use OpenShift routes for external database access</title><link>/kubernetes/re-databases/routes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-databases/routes/</guid><description>Every time the Redis Enterprise operator creates a Redis Enterprise database (REDB), it creates a service that allows requests to be routed to that database. Redis Enterprise supports three types of services for accessing databases: ClusterIP, headless, or LoadBalancer.
By default, REDB creates a ClusterIP type service, which exposes a cluster-internal IP and can only be accessed from within the cluster. OpenShift routes allow requests to be routed to the REDB from outside the cluster.</description></item><item><title>Adding Databases via GET URL</title><link>/ri/using-redisinsight/api-get/</link><pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate><guid>/ri/using-redisinsight/api-get/</guid><description>If you want to automate adding a Redis database without filling the database form, you might want to add database via GET URL.
Below is the documentation for the URL required to add databases.
Add Redis database Used to add Redis databases to RedisInsight.
URL : /add/
Method : GET
Query Parameters These are the required query parameters for any type of database.
Parameter Type Required/Optional Description host string required Hostname of your Redis database.</description></item><item><title>Use Redis on Flash on Kubernetes</title><link>/kubernetes/re-clusters/redis-on-flash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-clusters/redis-on-flash/</guid><description>Prerequisites Redis Enterprise Software for Kubernetes supports using Redis on Flash, which extends your node memory to use both RAM and flash storage. SSDs (solid state drives) can store infrequently used (warm) values while your keys and frequently used (hot) values are still stored in RAM. This improves performance and lowers costs for large datasets.
Note: NVMe (non-volatile memory express) SSDs are strongly recommended to achieve the best performance. Before creating your Redis clusters or databases, these SSDs must be:</description></item><item><title>Authenticate database users</title><link>/ri/using-redisinsight/auth-database/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>/ri/using-redisinsight/auth-database/</guid><description>You can enforce authentication of users who share your databases by running Redisinsight with variables RIAUTHPROMPT, RIAUTHTIMER, and RILOGLEVEL. For more information on variables, see Configure RedisInsight.
By setting the variables, enforce the prompt for username and password each time the database is opened and at a specific time interval while users work with the database. You can maintain multiple tabs with the same database without having to enter username and password in each one.</description></item><item><title>Manage databases in multiple namespaces</title><link>/kubernetes/re-clusters/multi-namespace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-clusters/multi-namespace/</guid><description>Multiple Redis Enterprise database resources (REDBs) can be associated with a single Redis Enterprise cluster resource (REC) even if they reside in different namespaces.
To learn more about designing a multi-namespace Redis Enterprise cluster, see flexible deployment options.
Prerequisites Before configuring a multi-namespace deployment, you must have a running Redis Enterprise cluster (REC). See more information in the deployment section.
Create role and role binding for managed namespaces Both the operator and the RedisEnterpriseCluster (REC) resource need access to each namespace the REC will manage.</description></item><item><title>Upgrade a Redis Enterprise cluster (REC) on Kubernetes</title><link>/kubernetes/re-clusters/upgrade-redis-cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-clusters/upgrade-redis-cluster/</guid><description>Redis implements rolling updates for software upgrades in Kubernetes deployments. The upgrade process consists of two steps:
Upgrade the Redis Enterprise operator Upgrade the Redis Enterprise cluster (REC) Warning - When upgrading existing Redis Enterprise clusters running on RHEL7-based images, make sure to select a RHEL7-based image for the new version. See release notes for more info. Upgrade the operator Download the bundle Make sure you pull the correct version of the bundle.</description></item><item><title>Proxy</title><link>/ri/using-redisinsight/proxy/</link><pubDate>Wed, 24 Aug 2022 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/proxy/</guid><description>Trusted origins By default, RedisInsight trusts only the origin to which RedisInsight binds to. If RedisInsight is run behind a proxy, the origin where the requests come from is not trusted if the proxy&amp;rsquo;s origin is not the origin where RedisInsight binds to. While RedisInsight does start and is reachable, no operations are allowed. Because the origin of requests/proxy is always known, the trusted origins must be manually set via the RITRUSTEDORIGINS environment variable.</description></item><item><title>Performance Metrics</title><link>/ri/using-redisinsight/overview/</link><pubDate>Thu, 14 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/overview/</guid><description>RedisInsight Overview provides you the quick overview about your Redis instance through graphical representation. It displays the total memory and keys for your instance. Number of connections received, clients connected, Network input and output and various other information.</description></item><item><title>Add a cluster node</title><link>/rs/clusters/add-node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/add-node/</guid><description>When you install Redis Enterprise Software on the first node of a cluster, you create the new cluster. After you install the first node, you can add more nodes to the cluster.
Note: Before you add a node to the cluster:
The clocks on all nodes must always be synchronized.
If the clock in the node you are trying to join to the cluster is not synchronized with the nodes already in the cluster, the action fails and an error message is shown indicating that you must synchronize the clocks first.</description></item><item><title>Add users</title><link>/rs/security/access-control/manage-users/add-users/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/manage-users/add-users/</guid><description>To add a user to the cluster:
From the access control tab in the admin console, select .
Enter the name, email, and password of the new user and select a role to assign to the user.
Select internal for Authentication.
For Email Alerts, select Edit and then choose the alerts that the user should receive. You can select:
Receive alerts for databases - The alerts that are enabled for the selected databases will be sent to the user.</description></item><item><title>Configure ACLs</title><link>/rs/security/access-control/configure-acl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/configure-acl/</guid><description>Redis ACL command syntax Redis ACLs are defined by a Redis syntax where you specify the commands or command categories that are allowed for specific keys.
Note: Redis Enterprise modules do not have a command category. Redis Enterprise lets you:
Include commands and categories with the &amp;ldquo;+&amp;rdquo; prefix for commands or &amp;ldquo;+@&amp;rdquo; prefix for command categories. Exclude commands and categories with the &amp;ldquo;-&amp;rdquo; prefix for commands or &amp;ldquo;-@&amp;rdquo; prefix for command categories.</description></item><item><title>Consistency during replication</title><link>/rs/databases/durability-ha/consistency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/durability-ha/consistency/</guid><description>Redis Enterprise Software comes with the ability to replicate data to another database instance for high availability and persist in-memory data on disk permanently for durability. With the WAIT command, you can control the consistency and durability guarantees for the replicated and persisted database.
Any updates that are issued to the database are typically performed with the following flow shown below;
Application issues a write Proxy communicates with the correct primary (also known as master) &amp;ldquo;shard&amp;rdquo; in the system that contains the given key The shard writes the data and sends an acknowledgment to the proxy The proxy sends the acknowledgment back to the application The write is communicated from master to replica Replica acknowledges the write back to the master The write to a replica is persisted to disk The write is acknowledged within the replica With the WAIT command, applications can ask to wait for acknowledgments only after replication or persistence is confirmed on the replica.</description></item><item><title>Metrics in the admin console</title><link>/rs/clusters/monitoring/console-metrics-definitions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/monitoring/console-metrics-definitions/</guid><description>The Redis Enterprise Software admin console shows performance metrics for clusters, nodes, databases, and shards.
Standard metrics Metric Components measured Description More information Connections Cluster, Node, Database Number of connections used to access the database CPU usage Cluster, Node Percent usage of the CPU Evicted objects/sec1 Database, Shard Number of objects evicted per second Objects are evicted if:
The database reaches its memory_limitThe eviction policy is not configured to no-evictionThe dataset keys are compliant with the selected eviction policy.</description></item><item><title>Create and manage databases</title><link>/rc/api/examples/create-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/examples/create-database/</guid><description>You can use the Redis Enterprise Cloud REST API to create databases.
These examples use the cURL utility; you can use any REST client to work with the Redis Cloud REST API.
Create a database To create a database, use POST /subscriptions/{subscription-id}/databases
The database is created in an existing or a newly created subscription.
When a subscription is created, it is created with at least one database.
You can add databases to the subscription; you can also update or delete existing databases.</description></item><item><title>Create roles</title><link>/rs/security/access-control/create-roles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/create-roles/</guid><description>From access control &amp;gt; roles, you can configure user roles with:
Management roles - Management roles define user access to the cluster&amp;rsquo;s admin console and API. Data access controls - Data access controls define the permissions each role has for each database in the cluster. Default management roles Redis Enterprise Software includes five predefined roles that determine a user&amp;rsquo;s level of access to the admin console and REST API.
None - Cannot access the admin console or use the REST API DB Viewer - Read database settings DB Member - Administer databases Cluster Viewer - Read cluster settings Cluster Member - Administer the cluster Admin - Full cluster access For more details about the privileges granted by each of these roles, see admin console permissions or REST API permissions.</description></item><item><title>View and edit databases</title><link>/rc/databases/view-edit-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/view-edit-database/</guid><description>Use the Databases menu of the admin console to manage your subscription databases.
To view the details of a database:
Sign in to the Redis Cloud admin console. (Create an account if you don&amp;rsquo;t already have one.)
Locate the database in the list.
Select the database name to open the Database page.
The Database screen lets you review:
Configuration details of a database Graphs showing performance metrics Recent activity via a &amp;ldquo;slowlog,&amp;rdquo; which lists queries that exceed a certain execution time.</description></item><item><title>Export data from a database</title><link>/rs/databases/import-export/export-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/export-data/</guid><description>You can export the data from a specific database at any time. The following destinations are supported:
FTP server SFTP server Amazon AWS S3 Local mount point Azure Blob Storage Google Cloud Storage If you export a database configured for database clustering, export files are created for each shard.
Storage space requirements Before exporting data, verify that you have enough space available in the storage destination and on the local storage associated with the node hosting the database.</description></item><item><title>File locations</title><link>/rs/installing-upgrading/file-locations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/file-locations/</guid><description>To make sure that Redis Enterprise Software functions properly, make sure that you handle the files in the application directories with care.
Application directories The directories that Redis Enterprise Software installs into are:
Path Description /opt/redislabs Main installation directory for all Redis Enterprise Software binaries /opt/redislabs/bin Binaries for all the utilities for command line access and managements such as &amp;ldquo;rladmin&amp;rdquo; or &amp;ldquo;redis-cli&amp;rdquo; /opt/redislabs/config System configuration files /opt/redislabs/lib System library files /opt/redislabs/sbin System binaries for tweaking provisioning Configuration and data directories The default directories that Redis Enterprise Software uses for data and metadata are:</description></item><item><title>Get started with Redis Enterprise Active-Active databases</title><link>/rs/databases/active-active/get-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/get-started/</guid><description>To get you started, this article will help you set up a Active-Active database, formerly known as CRDB (conflict-free replicated database) spanning across two Redis Enterprise Software clusters for test and development environments. Here are the steps:
Step 1: Run two Redis Enterprise Software (RS) Docker containers Step 2: Set up each container as a cluster Step 3: Create a new Redis Enterprise Active-Active database Step 4: Test connectivity to the Active-Active database To run an Active-Active database on installations from the RS download package, set up two RS installations and continue from Step 2.</description></item><item><title>Install RedisGears and the JVM plugin</title><link>/modules/redisgears/jvm/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/install/</guid><description>Before you can use RedisGears with the JVM, you need to install the RedisGears module and JVM plugin on your Redis Enterprise cluster and enable them for a database.
Prerequisites Redis Enterprise v6.0.12 or later
Created a Redis Enterprise cluster
Added nodes to the cluster
Installed RedisGears and the JVM plugin
Enable RedisGears for a database From the Redis Enterprise admin console&amp;rsquo;s databases page, select the Add button to create a new database:</description></item><item><title>Install RedisGears and the Python plugin</title><link>/modules/redisgears/python/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/python/install/</guid><description>Before you can use RedisGears with Python, you need to install the RedisGears module and Python plugin on your Redis Enterprise cluster and enable them for a database.
Prerequisites Redis Enterprise v6.0.12 or later
Created a Redis Enterprise cluster
Added nodes to the cluster
Installed RedisGears and the Python plugin
Enable RedisGears for a database From the Redis Enterprise admin console&amp;rsquo;s databases page, select the Add button to create a new database:</description></item><item><title>Configure Istio for external routing</title><link>/kubernetes/re-databases/ingress_routing_with_istio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-databases/ingress_routing_with_istio/</guid><description>Redis Enterprise for Kubernetes version 6.2.8-11 introduces the ability to use an Istio ingress gateway as an alternative to NGINX or HaProxy ingress controllers.
Istio can also understand ingress resources, but using that mechanism takes away the advantages and options that the native Istio resources provide. Istio offers its own configuration methods using custom resources.
To configure Istio to work with the Redis Kubernetes operator, we will use two custom resources: a Gateway and a VirtualService.</description></item><item><title>Cluster license keys</title><link>/rs/clusters/configure/license-keys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/configure/license-keys/</guid><description>The cluster key (or license) enables features and capacity within Redis Enterprise Software (RS). You can add or update a cluster key at any time in a cluster lifecycle. When the cluster does not have a cluster key, the cluster is in trial mode.
Trial mode Trial mode is limited to thirty days and a total of four shards, including master and replica shards. Any new installation starts its thirty-day clock from the day the cluster setup was done (with the first cluster node provisioned).</description></item><item><title>Manage API keys</title><link>/rc/api/get-started/manage-api-keys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/get-started/manage-api-keys/</guid><description>Every REST API request must include the following API keys:
The Account key identifies the account associated with the Redis Enterprise Cloud subscription.
The User key identifies the user and (optionally) the context of a request. Generated by account owners.
Use the API Keys tab of the Access Management screen to manage your keys:
Sign in to your Redis Cloud subscription as an account owner.
From the menu, choose Access Management and then select the API Keys tab.</description></item><item><title>Database memory limits</title><link>/rs/databases/memory-performance/memory-limit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/memory-performance/memory-limit/</guid><description>When you set a database&amp;rsquo;s memory limit, you define the maximum size the database can reach in the cluster, across all database replicas and shards, including both primary and replica shards.
If the total size of the database in the cluster reaches the memory limit, the data eviction policy is applied.
Factors for sizing Factors to consider when sizing your database:
dataset size: you want your limit to be above your dataset size to leave room for overhead.</description></item><item><title>Redis with Node.js (ioredis)</title><link>/rs/references/client_references/client_ioredis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_ioredis/</guid><description>In order to use Redis with Node.js, you need to install a Node.js Redis client. The following sections demonstrate the use of ioredis, a community-recommended Redis client for Node.js with build-in support for promises.
Another community-recommended client for Node.js developers is node_redis. Additional Node.js clients for Redis can be found under the Node.js section of the Redis Clients page.
Install ioredis See the ioredis README file for installation instructions.
To install ioredis, run:</description></item><item><title>Enable OSS Cluster API</title><link>/rs/databases/configure/oss-cluster-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/oss-cluster-api/</guid><description>Redis OSS Cluster API reduces access times and latency with near-linear scalability. The Redis OSS Cluster API provides a simple mechanism for Redis clients to know the cluster topology.
Clients must first connect to the master node to get the cluster topology, and then they connect directly to the Redis proxy on each node that hosts a master shard.
Note: You must use a client that supports the OSS cluster API to connect to a database that has the OSS cluster API enabled.</description></item><item><title>RedisAI quick start</title><link>/modules/redisai/redisai-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisai/redisai-quickstart/</guid><description>For this quick start tutorial, we recommend that you use:
Either: A Redis Enterprise Software database with the RedisAI module Contact support if you want to try out RedisAI on Redis Cloud redis-cli with connectivity to a Redis database Getting started You can connect to RedisAI using any Redis client. Better yet, some languages already have client implementations for RedisAI - the list can be found at the Clients page. RedisAI clients wrap the core API and simplify the interaction with the module.</description></item><item><title>RedisBloom quick start</title><link>/modules/redisbloom/redisbloom-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisbloom/redisbloom-quickstart/</guid><description>For this quick start tutorial, you need:
Either: A Redis Cloud database with the RedisBloom module
You can set up a free Redis Cloud database to see the module in action.
A Redis Enterprise Software database with the RedisBloom module
redis-cli with connectivity to a Redis database Trying it out You can play with it a bit using redis-cli:
Connect to redis.
$ redis-cli -p 12543 127.0.0.1:12543&amp;gt; Run these commands:</description></item><item><title>RediSearch quick start</title><link>/modules/redisearch/redisearch-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/redisearch-quickstart/</guid><description>This quick start shows you how to index documents stored as Redis hashes and run search queries against the index. To learn how to index and search JSON documents, see the Search JSON quick start.
Prerequisites For this tutorial, you need:
A Redis database with the RediSearch module enabled. You can use either:
A Redis Cloud database
A Redis Enterprise Software database
redis-cli command-line tool
redis-py client library v4.0.0 or later</description></item><item><title>RedisGraph quick start</title><link>/modules/redisgraph/redisgraph-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/redisgraph-quickstart/</guid><description>Prerequisites For this quick start tutorial, you need:
A Redis database with the RedisGraph module enabled. You can use either:
A Redis Cloud database
A Redis Enterprise Software database
redis-cli command-line tool
redis-py client library v4.1.0 or later
RedisGraph with redis-cli To begin, connect to your database with redis-cli.
Create a graph When you create a graph, you can define nodes and the relationships between them with this format:
(:&amp;lt;node 1&amp;gt;)-[:&amp;lt;relationship&amp;gt;]-&amp;gt;(:&amp;lt;node 2&amp;gt;)</description></item><item><title>RedisJSON quick start</title><link>/modules/redisjson/redisjson-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisjson/redisjson-quickstart/</guid><description>Prerequisites For this quick start tutorial, you need:
A Redis database with the RedisJSON module enabled. You can use either:
A Redis Cloud database
A Redis Enterprise Software database
redis-cli command-line tool
redis-py client library v4.0.0 or greater
RedisJSON with redis-cli The redis-cli command-line tool comes packaged with Redis. You can use it to connect to your Redis database and test RedisJSON commands.
Connect to a database $ redis-cli --raw -h &amp;lt;endpoint&amp;gt; -p &amp;lt;port&amp;gt; -a &amp;lt;password&amp;gt; 127.</description></item><item><title>RedisTimeSeries quick start</title><link>/modules/redistimeseries/redistimeseries-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redistimeseries/redistimeseries-quickstart/</guid><description>Prerequisites For this quick start tutorial, you need:
A Redis database with the RedisTimeSeries module enabled. You can use either:
A Redis Cloud database
A Redis Enterprise Software database
redis-cli command-line tool
redis-py client library v4.0.0 or later
RedisTimeSeries with redis-cli The following examples show you how to create a time series that represents weather measurements.
To begin, connect to your database with redis-cli.
Create a time series Use TS.CREATE to create a new time series.</description></item><item><title>Redis Enterprise Software REST API quick start</title><link>/rs/references/rest-api/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/quick-start/</guid><description>Redis Enterprise Software includes a REST API that allows you to automate certain tasks. This article shows you how to send a request to the Redis Enterprise Software REST API.
Fundamentals No matter which method you use to send API requests, there are a few common concepts to remember.
Type Description Authentication Use Basic Auth with your cluster username (email) and password Ports All calls are made to port 9443 by default Versions Specify the version in the request URI Headers Accept and Content-Type should be application/json Response types and error codes A response of 200 OK means success; otherwise, the request failed due to an error For more information, see Redis Enterprise Software REST API.</description></item><item><title>Recover a Redis Enterprise cluster on Kubernetes</title><link>/kubernetes/re-clusters/cluster-recovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-clusters/cluster-recovery/</guid><description>When a Redis Enterprise cluster loses contact with more than half of its nodes either because of failed nodes or network split, the cluster stops responding to client connections. When this happens, you must recover the cluster to restore the connections.
You can also perform cluster recovery to reset cluster nodes, to troubleshoot issues, or in a case of active/passive failover.
The Redis Enterprise for Kubernetes automates these recovery steps:</description></item><item><title>Test client connection</title><link>/rs/databases/connect/test-client-connectivity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/connect/test-client-connectivity/</guid><description>In various scenarios, such as after creating a new cluster or upgrading the cluster, it is highly advisable to verify client connectivity to the database.
To test client connectivity:
Create a Redis database and get the database endpoint, which contains the cluster name (FQDN). Try to connect to the database endpoint from your client of choice, and execute commands against the database. If the database does not respond, try to connect to the database endpoint by using the IP address rather than the FQDN; if you succeed, it means that the DNS is not properly configured.</description></item><item><title>Transport Layer Security (TLS)</title><link>/rc/security/database-security/tls-ssl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/database-security/tls-ssl/</guid><description>Transport Layer Security (TLS) uses encryption to secure network communications.
Redis Cloud Fixed, Flexible, and Annual subscriptions can use TLS to encrypt data communications between applications and Redis databases.
Use TLS with Redis Cloud TLS is not enabled by default.
TLS recommendations Because TLS has an impact on performance, you need to determine whether the security benefits of TLS are worth the performance impact. TLS recommendations depend on the subscription plan and whether clients connect to your database using public or private endpoints.</description></item><item><title>Replica Of Repeatedly Fails</title><link>/rs/databases/import-export/replica-of/replicaof-repeatedly-fails/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/replica-of/replicaof-repeatedly-fails/</guid><description>Problem: The Replica Of process repeatedly fails and restarts
Diagnostic: A log entry in the Redis log of the source database shows repeated failures and restarts.
Cause: The Redis &amp;ldquo;client-output-buffer-limit&amp;rdquo; setting on the source database is configured to a relatively small value, which causes the connection drop.
Resolution: Reconfigure the buffer on the source database to a bigger value:
If the source is a Redis database on a Redis Enterprise Software cluster, increase the replica buffer size of the source database with:</description></item><item><title>Update certificates</title><link>/rs/security/certificates/updating-certificates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/certificates/updating-certificates/</guid><description>Warning - When you update the certificates, the new certificate replaces the same certificates on all nodes in the cluster. How to update certificates You can use either the rladmin command-line interface (CLI) or the REST API to update certificates.
The new certificates are used the next time the clients connect to the database.
When you upgrade Redis Enterprise Software, the upgrade process copies the certificates that are on the first upgraded node to all of the nodes in the cluster.</description></item><item><title>Considerations for planning Active-Active databases</title><link>/rs/databases/active-active/planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/planning/</guid><description>In Redis Enterprise, Active-Active geo-distribution is based on conflict-free replicated data type (CRDT) technology. Compared to databases without geo-distribution, Active-Active databases have more complex replication and networking, as well as a different data type.
Because of the complexities of Active-Active databases, there are special considerations to keep in mind while planning your Active-Active database.
See Active-Active Redis for more information about geo-distributed replication. For more info on other high availability features, see Durability and high availability.</description></item><item><title>Search JSON quick start</title><link>/modules/redisearch/search-json-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/search-json-quickstart/</guid><description>This quick start shows you how to index JSON documents and run search queries against the index.
Prerequisites For this quick start tutorial, you need:
Either:
A Redis Cloud database with Redis Stack
A Redis Enterprise Software database with RediSearch (v2.2 or later) and RedisJSON (v2.0 or later)
And:
redis-cli command-line tool
redis-py client library v4.0.0 or later
Search JSON with redis-cli To begin, connect to your database with redis-cli.</description></item><item><title>RedisBloom commands</title><link>/modules/redisbloom/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisbloom/commands/</guid><description>The following tables list RedisBloom commands. See the command links for more information about each command&amp;rsquo;s syntax, arguments, and examples.
Bloom filter commands Command Redis
Enterprise Redis
Cloud Description BF.ADD ✅ Supported
✅ Flexible &amp;amp; Annual
✅ Free &amp;amp; Fixed Adds an item to the filter. BF.EXISTS ✅ Supported
✅ Flexible &amp;amp; Annual
✅ Free &amp;amp; Fixed Checks if an item exists in the filter. BF.INFO ✅ Supported
✅ Flexible &amp;amp; Annual</description></item><item><title>RediSearch commands</title><link>/modules/redisearch/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/commands/</guid><description>The following table lists RediSearch commands. See the command links for more information about each command&amp;rsquo;s syntax, arguments, and examples.
Command Redis
Enterprise Redis
Cloud Description FT.AGGREGATE ✅ Supported
✅ Flexible &amp;amp; Annual
✅ Free &amp;amp; Fixed Runs a search query on an index and groups, sorts, transforms, limits, and/or filters the results. FT.ALIASADD ✅ Supported
✅ Flexible &amp;amp; Annual
✅ Free &amp;amp; Fixed Adds an alias to an index. FT.</description></item><item><title>RedisGraph commands</title><link>/modules/redisgraph/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/commands/</guid><description>The following table lists RedisGraph commands. See the command links for more information about each command&amp;rsquo;s syntax, arguments, and examples.
Command Redis
Enterprise Redis
Cloud Description GRAPH.CONFIG GET ✅ Supported
❌ Flexible &amp;amp; Annual
❌ Free &amp;amp; Fixed Returns the current value of a RedisGraph configuration parameter. GRAPH.CONFIG SET ✅ Supported
❌ Flexible &amp;amp; Annual
❌ Free &amp;amp; Fixed Changes the value of a RedisGraph configuration parameter. GRAPH.DELETE ✅ Supported</description></item><item><title>RedisJSON commands</title><link>/modules/redisjson/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisjson/commands/</guid><description>The following table lists RedisJSON commands. See the command links for more information about each command&amp;rsquo;s syntax, arguments, and examples.
Command Redis
Enterprise Redis
Cloud Description JSON.ARRAPPEND ✅ Supported
✅ Flexible &amp;amp; Annual
✅ Free &amp;amp; Fixed Appends an element to a JSON array. JSON.ARRINDEX ✅ Supported
✅ Flexible &amp;amp; Annual
✅ Free &amp;amp; Fixed Returns the index of a value&amp;rsquo;s first occurrence in a JSON array. JSON.ARRINSERT ✅ Supported</description></item><item><title>RedisTimeSeries commands</title><link>/modules/redistimeseries/commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redistimeseries/commands/</guid><description>The following table lists RedisTimeSeries commands. See the command links for more information about each command&amp;rsquo;s syntax, arguments, and examples.
Command Redis
Enterprise Redis
Cloud Description TS.ADD ✅ Supported
✅ Flexible &amp;amp; Annual
✅ Free &amp;amp; Fixed Appends a sample to a time series. TS.ALTER ✅ Supported
✅ Flexible &amp;amp; Annual
✅ Free &amp;amp; Fixed Updates the retention, chunk size, duplicate policy, or labels for an existing time series. TS.CREATE ✅ Supported</description></item><item><title>Create an Active-Active geo-replicated database</title><link>/rs/databases/active-active/create/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/create/</guid><description>Active-Active geo-replicated databases (formerly known as CRDBs) give applications write access to replicas of the dataset in different geographical locations.
The participating Redis Enterprise Software clusters that host the instances can be in distributed geographic locations. Every instance of an Active-Active database can receive write operations, and all operations are synchronized to all of the instances without conflict.
Steps to create an Active-Active database Create a service account - On each participating cluster, create a dedicated user account with the Admin role.</description></item><item><title>Enable role-based LDAP</title><link>/rs/security/access-control/ldap/enable-role-based-ldap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/ldap/enable-role-based-ldap/</guid><description>Redis Enterprise Software uses a role-based mechanism to enable LDAP authentication and authorization.
When a user attempts to access Redis Enterprise resources using LDAP credentials, the credentials are passed to the LDAP server in a bind request. If the request succeeds, the user’s groups are searched for a group that authorizes access to the original resource.
Role-based LDAP lets you authorize admin console admins (previously known as external users) as well as database users.</description></item><item><title>Connect to your Active-Active databases</title><link>/rs/databases/active-active/connect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/connect/</guid><description>With the Redis database created, you are ready to connect to your database to store data. You can use one of the following ways to test connectivity to your database:
Connect with redis-cli, the built-in command-line tool Connect with a Hello World application written in Python Remember we have two member Active-Active databases that are available for connections and concurrent reads and writes. The member Active-Active databases are using bi-directional replication to for the global Active-Active database.</description></item><item><title>Cluster Management</title><link>/ri/using-redisinsight/cluster-management/</link><pubDate>Fri, 12 Oct 2018 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/cluster-management/</guid><description>RedisInsight Cluster Management provides a graphical user interface (GUI) to manage your Redis Cluster. Cluster Management comes with three different views to analyze your cluster architecture.
Master Layout - This view only contains information about the masters present in the Redis Cluster. The information present is - slot ranges, host, port and few metrics gathered from redis INFO Command. Master-Replica Layout - This view contains masters along with their replicas. This view contains information about slots ranges, host, port, etc for both master and replica.</description></item><item><title>Redis with .NET</title><link>/rs/references/client_references/client_csharp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_csharp/</guid><description>In order to use Redis with .NET, you need a .NET Redis client. This article shows how to use StackExchange.Redis, a general purpose Redis client. More .NET Redis clients can be found in the C# section of the Redis Clients page.
Install StackExchange.Redis There are several ways to install this package including:
With the .NET CLI: dotnet add package StackExchange.Redis With the package manager console: PM&amp;gt; Install-Package StackExchange.Redis With the NuGet GUI in Visual Studio Connect to Redis The following code creates a connection to Redis using StackExchange.</description></item><item><title>Configure AWS EC2 instances for Redis Enterprise Software</title><link>/rs/installing-upgrading/configuring/configuring-aws-instances/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/configuring/configuring-aws-instances/</guid><description>There are some special considerations for installing and running Redis Enterprise Software on Amazon Elastic Cloud Compute (EC2) instances.
These include:
Storage considerations Instance types Security group configuration Storage considerations AWS EC2 instances are ephemeral, but your persistent database storage should not be. If you require a persistent storage location for your database, the storage must be located outside of the instance. Therefore, when you set up an instance make sure that it has a properly sized EBS backed volume connected.</description></item><item><title>Configure CIDR allow list</title><link>/rc/security/cidr-whitelist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/cidr-whitelist/</guid><description>The CIDR allow list lets you restrict traffic to your Redis Cloud database. When you configure an allow list, only the IP addresses defined in the list can connect to the database. Traffic from all other IP addresses is blocked.
Database allow list You can configure your database&amp;rsquo;s CIDR allow list to restrict client connections to a specific range of IP addresses.
Define CIDR allow list To define the CIDR allow list for a database:</description></item><item><title>RedisBloom configuration compatibility with Redis Enterprise</title><link>/modules/redisbloom/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisbloom/config/</guid><description>Redis Enterprise Software lets you manually change any RedisBloom configuration setting.
Redis Enterprise Cloud does not let you configure RedisBloom manually. However, if you have a Flexible or Annual subscription, you can contact support to request a configuration change. You cannot change RedisBloom configuration for Free or Fixed subscriptions.
Setting Redis
Enterprise Redis
Cloud Notes CF_MAX_EXPANSIONS ✅ Supported
✅ Flexible &amp;amp; Annual
❌ Free &amp;amp; Fixed Default: 32 ERROR_RATE ✅ Supported</description></item><item><title>RediSearch configuration compatibility with Redis Enterprise</title><link>/modules/redisearch/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/config/</guid><description>You cannot use FT.CONFIG SET to configure RediSearch in Redis Enterprise Software or Redis Enterprise Cloud. Instead, use one of the following methods.
For Redis Cloud:
Flexible or Annual subscriptions: contact support to request a configuration change.
Free or Fixed subscriptions: you cannot change RediSearch configuration.
For Redis Enterprise Software, use either:
rladmin tune db:
$ rladmin tune db db:&amp;lt;ID|name&amp;gt; module_name search \ module_config_params &amp;#34;setting-name setting-value&amp;#34; Configure module REST API request:</description></item><item><title>RedisGraph configuration compatibility with Redis Enterprise</title><link>/modules/redisgraph/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/config/</guid><description>Redis Enterprise Software lets you manually change any RedisGraph configuration setting with the GRAPH.CONFIG SET command.
Redis Enterprise Cloud does not let you use GRAPH.CONFIG SET to configure RedisGraph. However, if you have a Flexible or Annual subscription, you can contact support to request a configuration change. You cannot change RedisGraph configuration for Free or Fixed subscriptions.
Setting Redis
Enterprise Redis
Cloud Notes CACHE_SIZE ✅ Supported
✅ Flexible &amp;amp; Annual</description></item><item><title>RedisTimeSeries configuration compatibility with Redis Enterprise</title><link>/modules/redistimeseries/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redistimeseries/config/</guid><description>Redis Enterprise Software lets you manually change any RedisTimeSeries configuration setting.
Redis Enterprise Cloud does not let you configure RedisTimeSeries manually. However, if you have a Flexible or Annual subscription, you can contact support to request a configuration change. You cannot change RedisTimeSeries configuration for Free or Fixed subscriptions.
Setting Redis
Enterprise Redis
Cloud Notes CHUNK_SIZE_BYTES ✅ Supported
✅ Flexible &amp;amp; Annual
❌ Free &amp;amp; Fixed Default: 4096 COMPACTION_POLICY ✅ Supported</description></item><item><title>Create a Fixed subscription</title><link>/rc/subscriptions/create-fixed-subscription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/subscriptions/create-fixed-subscription/</guid><description>Fixed Size subscription plans support low throughput workflows. Several tiers are available, each designed for different memory sizes and integration requirements.
When creating your subscription, you&amp;rsquo;ll need to know which tier to choose.
(If you&amp;rsquo;re new to Redis Enterprise Cloud, the quick start helps you create an account with a free subscription and an initial database. You also learn how to connect to your database.)
Fixed plan subscription tiers Fixed plan pricing scales according to the memory size of all databases defined in the subscription.</description></item><item><title>Create a Flexible subscription</title><link>/rc/subscriptions/create-flexible-subscription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/subscriptions/create-flexible-subscription/</guid><description>Flexible subscriptions support any dataset size or throughput. Pricing is based on your workload requirements (database size and throughput.)
When you create a Flexible subscription, a cost estimate is provided to help you understand the impact of your requirements.
Create a Flexible subscription To create a Flexible subscription:
From the admin console menu, select the New Subscription button.
When the New subscription page appears, select Flexible plans and then scroll to the cloud vendor options.</description></item><item><title>Customize installation directories</title><link>/rs/installing-upgrading/customize-install-directories/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/customize-install-directories/</guid><description>When installing Redis Enterprise Software, you can customize the installation directories.
The files are installed in the redislabs directory located in the path that you specify.
Note: Custom installation directories are supported on RedHat Enterprise Linux version 7 and 8. When you install with custom directories, the installation does not run as an RPM file. If a redislabs directory already exists in the path that you specify, the installation fails. All nodes in a cluster must be installed with the same file locations.</description></item><item><title>Customize system user and group</title><link>/rs/installing-upgrading/customize-user-and-group/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/customize-user-and-group/</guid><description>By default, Redis Enterprise Software is installed with the user:group redislabs:redislabs.
During the installation, you can specify the user and group that own all Redis Enterprise Software processes.
If you specify the user only, then installation is run with the primary group that the user belongs to.
Note: Custom installation user is supported on RedHat Enterprise Linux. When you install with custom directories, the installation does not run as an RPM file.</description></item><item><title>Delete database</title><link>/rc/databases/delete-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/delete-database/</guid><description>To delete a database, use the Delete button. It&amp;rsquo;s located in the Danger zone section of the database&amp;rsquo;s Configuration tab.
Databases must be empty before they can be deleted. Deleted databases cannot be recovered. (We recommend making a backup, just in case.)
This command requires the account owner role.
Step-by-step Sign in to the Redis Cloud admin portal.
If you have more than one subscription, select the target subscription from the list.</description></item><item><title>Discovery service</title><link>/rs/databases/durability-ha/discovery-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/durability-ha/discovery-service/</guid><description>The Discovery Service provides an IP-based connection management service used when connecting to Redis Enterprise Software databases. When used in conjunction with Redis Enterprise Software&amp;rsquo;s other high availability features, the Discovery Service assists an application scope with topology changes such as adding, removing of nodes, node failovers and so on. It does this by providing your application with the ability to easily discover which node hosts the database endpoint. The API used for discovery service is compliant with the Redis Sentinel API.</description></item><item><title>Enable a module for a database</title><link>/modules/install/add-module-to-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/install/add-module-to-database/</guid><description>Modules add additional functionality to Redis databases for specific use cases. You can enable modules when you create a database.
Prerequisites Installed the module on the cluster Upgraded the module to the latest version Create a database with a module Note: You can only add modules to a database when you first create it. You cannot add modules to an existing database. In the Redis Enterprise admin console, follow these steps to add modules to a database:</description></item><item><title>Encrypt REST API requests</title><link>/rs/security/admin-console-security/encryption/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/admin-console-security/encryption/</guid><description>This section details how you can configure encryption for Redis Enterprise Software.
Require HTTPS for API endpoints By default, the Redis Enterprise Software API supports communication over HTTP and HTTPS. However, you can turn off support for HTTP to ensure that API requests are encrypted.
Before you turn off HTTP support, be sure to migrate any scripts or proxy configurations that use HTTP to the encrypted API endpoint to prevent broken connections.</description></item><item><title>Manage Active-Active databases</title><link>/rs/databases/active-active/manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/manage/</guid><description>You can configure and manage your Active-Active database from either the admin console or the command line.
To change the global configuration of the Active-Active database, use the crdb-cli.
If you need to apply changes locally to one database instance, you use the admin console or the rladmin CLI.
Database settings The following table shows a list of database settings, tools you can use to change those settings, and links to more information.</description></item><item><title>Manage installation questions</title><link>/rs/installing-upgrading/manage-installation-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/manage-installation-questions/</guid><description>Several questions are displayed during the Redis Software installation process.
Here, you&amp;rsquo;ll find a list of these questions and learn how to automatically answer these questions to perform a silent install.
Installation questions Several questions appear during installation:
Linux swap file - Swap is enabled. Do you want to proceed? [Y/N]?
We recommend that you disable Linux swap in the operating system configuration to give Redis Software control of the memory allocation.</description></item><item><title>Manage passwords</title><link>/rs/security/access-control/manage-users/manage-passwords/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/manage-users/manage-passwords/</guid><description>Redis Enterprise Software provides several ways to manage the passwords of local accounts, including:
Password complexity rules
Password expiration
Password rotation policies
You can also manage a user&amp;rsquo;s ability to sign in and control session timeout.
To enforce more advanced password policies, we recommend using LDAP integration with an external identity provider, such as Active Directory.
Password complexity rules Redis Enterprise Software provides optional password complexity rules that meet common requirements.</description></item><item><title>Network security</title><link>/rc/security/database-security/network-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/database-security/network-security/</guid><description>Redis Enterprise Cloud supports two types of network security: database-level CIDR allow lists and VPC-wide CIDR allow lists.
These features are available in most Redis Cloud configurations, as shown here:
Cloud provider VPC peering IP restrictions AWS Flexible and Annual Fixed (paid), Flexible, and Annual GCP Flexible and Annual Fixed (paid), Flexible, and Annual Azure Annual Annual IP and subnet restrictions You can restrict database access to a configurable set of source IP addresses and subnets.</description></item><item><title>Configure database persistence</title><link>/rs/databases/configure/database-persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/database-persistence/</guid><description>All data is stored and managed exclusively in either RAM or RAM + flash Memory (Redis on Flash) and therefore, is at risk of being lost upon a process or server failure. As Redis Enterprise Software is not just a caching solution, but also a full-fledged database, persistence to disk is critical. Therefore, Redis Enterprise Software supports persisting data to disk on a per-database basis and in multiple ways.
Persistence can be configured either during database creation or by editing an existing database&amp;rsquo;s configuration.</description></item><item><title>Prometheus integration with Redis Enterprise Software</title><link>/rs/clusters/monitoring/prometheus-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/monitoring/prometheus-integration/</guid><description>To collect and display metrics data from your databases and other cluster components, you can connect your Prometheus or Grafana server to your Redis Enterprise Software cluster. Metrics are exposed at the node, database, shard and proxy levels.
Prometheus is an open-source systems monitoring and alerting toolkit that can scrape metrics from different sources. Grafana is an open-source, feature-rich metrics dashboard and graph editor that can process Prometheus data. You can use Prometheus and Grafana to:</description></item><item><title>RediSearch in Active-Active databases</title><link>/modules/redisearch/redisearch-active-active/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/redisearch-active-active/</guid><description>Starting with RediSearch 2.x, supported in Redis Enterprise Software (RS) 6.0 and later, you can add the RediSearch module to an Active-Active database at the time of creation.
You can run search operations on any instance of an Active-Active database.
How it works Create an Active-Active database with RediSearch 2.x enabled. Create the index on each instance of the database. If you are using synonyms, you need to add them to each replica.</description></item><item><title>Shard placement policy</title><link>/rs/databases/memory-performance/shard-placement-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/memory-performance/shard-placement-policy/</guid><description>In Redis Enterprise Software, the location of master and replica shards on the cluster nodes can impact the database and node performance. Master shards and their corresponding replica shards are always placed on separate nodes for data resiliency. The shard placement policy helps to maintain optimal performance and resiliency.
In addition to the shard placement policy, considerations that determine shard placement are:
Separation of master and replica shards Available persistence and Redis on Flash (RoF) storage Rack awareness Memory available to host the database when fully populated The shard placement policies are:</description></item><item><title>Supported distributions</title><link>/kubernetes/reference/supported_k8s_distributions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/reference/supported_k8s_distributions/</guid><description>Each release of Redis Enterprise for Kubernetes is thoroughly tested against a set of Kubernetes distributions. The table below lists the current release&amp;rsquo;s support status for each distribution.
&amp;ldquo;supported&amp;rdquo; indicates this distribution is supported for this release. &amp;ldquo;deprecated&amp;rdquo; indicates this distribution is supported for this release, but will be dropped in a future release. Any distribution not listed below is not supported for production workloads. Kubernetes version 1.21 1.22 1.23 1.</description></item><item><title>Synchronize cluster node clocks</title><link>/rs/clusters/configure/sync-clocks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/configure/sync-clocks/</guid><description>To avoid problems with internal cluster communications that can impact your data integrity, make sure that the clocks on all of the cluster nodes are synchronized using Chrony and/or NTP.
When you install Redis Enterprise Software, the install script checks if Chrony or NTP is running. If they are not, the installation process asks for permission to configure a scheduled Cron job. This should make sure that the node&amp;rsquo;s clock is always synchronized.</description></item><item><title>Update databases</title><link>/rc/api/examples/update-database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/examples/update-database/</guid><description>The API operation that updates an existing database is: PUT /subscriptions/{subscription-id}/databases/{database-id}
This API operation uses the same provisioning lifecycle as the create database operation.
Database update request JSON body The primary component of a database update request is the JSON request body that contains the details of the requested database changes.
You can see the complete set of JSON elements accepted by the database update API operation in the Swagger UI.</description></item><item><title>Upgrade a database to RediSearch 2.x</title><link>/modules/redisearch/redisearch-2-upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/redisearch-2-upgrade/</guid><description>RediSearch 2.x includes some significant architectural changes that improve functionality. The main change is that RediSearch 2.x stores indexes outside of the Redis database that contains the data. This makes commands more efficient and improves replication between clusters because the index changes are managed by the participating clusters rather than being synchronized with the data.
This change allows databases with RediSearch to support:
Active-Active databases Database cluster re-sharding Replica Of to a sharded destination database EXPIRE of documents reflected in the index In addition, RediSearch 2.</description></item><item><title>Redis Enterprise for Kubernetes operator-based architecture</title><link>/kubernetes/architecture/operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/architecture/operator/</guid><description>Redis Enterprise is the fastest, most efficient way to deploy and maintain a Redis Enterprise cluster in Kubernetes.
What is an operator? An operator is a Kubernetes custom controller which extends the native K8s API.
Operators were developed to handle sophisticated, stateful applications that the default K8s controllers aren’t able to handle. While stock Kubernetes controllers—for example, StatefulSets—are ideal for deploying, maintaining and scaling simple stateless applications, they are not equipped to handle access to stateful resources, upgrade, resize and backup of more elaborate, clustered applications such as databases.</description></item><item><title>Create an Active-Active subscription</title><link>/rc/subscriptions/create-active-active-subscription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/subscriptions/create-active-active-subscription/</guid><description>To deploy Active-Active databases in Redis Enterprise Cloud, you need to create a Flexible or Annual subscription with Active-Active enabled.
Overall, the process is similar to creating a traditional subscription. However, there are some differences; you need to:
Define the regions for each database instance Define unique CIDR addresses for each instance Define throughput (read and write operations) for each region Active-Active databases consist of multiple copies (also called instances) deployed to different regions throughout the world.</description></item><item><title>REC custom resource options</title><link>/kubernetes/reference/cluster-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/reference/cluster-options/</guid><description>A Redis Enterprise cluster (REC) is defined in a custom resource definition (CRD). The REC options are specified in the spec section of the custom resource. Any field not specified in the custom resource will be set to default values by the operator. Changes made to the custom resource will override changes made to the cluster via the admin console or rladmin commands.
The most common options you might specify are listed below.</description></item><item><title>Back up a database</title><link>/rc/databases/back-up-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/back-up-data/</guid><description>The backup options for Redis Enterprise Cloud databases depend on your plan:
Flexible and Annual subscriptions can perform backups on-demand and schedule daily backups that occur during a set hour.
Paid Fixed plans can perform backups on-demand and schedule backups that occur every 24 hours.
Free plans cannot perform backups through the Redis Cloud console.
Backups are saved to predefined storage locations available to your subscription.
Backup locations need to be available before you turn on database backups.</description></item><item><title>Delete Active-Active databases</title><link>/rs/databases/active-active/delete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/delete/</guid><description>When you delete an Active-Active database (formerly known as CRDB), all instances of the Active-Active database are deleted from all participating clusters.
Warning - This action is immediate, non-reversible, and has no rollback. Because Active-Active databases are made up of instances on multiple participating clusters, to restore a deleted Active-Active database you must create the database again with all of its instances and then restore the data to the database from backup.</description></item><item><title>Flush data</title><link>/rc/databases/flush-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/flush-data/</guid><description>The FLUSHALL command provides a fast way to remove all data from a database.
To use it, connect your database and then issue the command.
There are several ways to do this, depending on your circumstances and environment.
Note: When you flush a database, you remove all data. This is a prerequisite to deleting a database.
This permanently removes all data from the database. The data cannot be recovered, except by restoring from earlier backups.</description></item><item><title>Import data into a database</title><link>/rc/databases/import-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/import-data/</guid><description>You can import an existing dataset into your Redis Cloud instance from an existing Redis server or an RDB file.
Note: Expired keys are not imported. As a result, the number of keys in the source and destination databases can be different after the import is complete. Import from a Redis server To import a dataset from any publicly available Redis server:
Select Databases from the admin console menu and then select the target database from the database list.</description></item><item><title>Map LDAP groups to roles</title><link>/rs/security/access-control/ldap/map-ldap-groups-to-roles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/ldap/map-ldap-groups-to-roles/</guid><description>Redis Enterprise Software uses a role-based mechanism to enable LDAP authentication and authorization.
Once LDAP is enabled, you need to map LDAP groups to Redis Enterprise access control roles.
Map LDAP groups to roles To map LDAP groups to access control roles:
From the admin console menu, select Access control &amp;gt; LDAP mappings.
If you see an &amp;ldquo;LDAP configuration is disabled&amp;rdquo; message, go to Settings &amp;gt; LDAP to enable role-based LDAP.</description></item><item><title>Migrate data to new subscription</title><link>/rc/databases/migrate-databases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/migrate-databases/</guid><description>There are times when you need to migrate data from one database to another.
Here are two common ways to do this.
Each approach is suitable for different situations and the steps can vary according to your needs.
Transfer via import The most common way to transfer data to a new database is to import a copy of the data into it.
Here&amp;rsquo;s how it works:
Select an export storage destination and verify that it&amp;rsquo;s ready for use and has sufficient space.</description></item><item><title>Monitor database performance</title><link>/rc/databases/monitor-performance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/monitor-performance/</guid><description>Redis Enterprise Cloud provides a variety of metrics to help you monitor database performance. You can view graphs of performance data at any time and receive emails when performance crosses defined threshholds.
View database metrics The Metrics tab of the View Database screen provides a series of graphs showing performance data for your database.
Performance data provides insight into how your database is being used and how well it is performing.</description></item><item><title>Recover a failed database</title><link>/rs/databases/recover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/recover/</guid><description>When a cluster fails or a database is corrupted, you must:
Restore the cluster configuration from the CCS files Recover the databases with their previous configuration and data To restore the data that was in the databases to databases in the new cluster you must restore the database persistence files (backup, AOF, or snapshot files) to the databases. These files are stored in the persistence storage location.
The database recovery process includes:</description></item><item><title>REDB custom resource options</title><link>/kubernetes/reference/db-options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/reference/db-options/</guid><description>The database options are specified in the spec section of the database custom resource. These options include options that you can change and options that are created by the controller for applications or developers. Changes made to the REDB custom resource will override changes made to the database via the admin console or rladmin commands.
The most common options are listed below. For a complete list of options, see Redis Enterprise Database API.</description></item><item><title>System logs</title><link>/rc/databases/system-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/system-logs/</guid><description>The Logs page contains events, alerts, and logs from the activities, databases, and subscriptions associated with your account.
You can:
Sort the list by a specific field in descending or ascending order. Supported fields include Time, Originator, Database name, and Activity.
Select the arrow icon to change the sort order. You can only sort by one field at a time.
Use the Export all button to export all logs as a comma-separated values (CSV) file for use in other systems and programs.</description></item><item><title>Delete databases</title><link>/rs/databases/delete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/delete/</guid><description>When you delete a database, the database configuration and data are deleted.
Use the admin console to delete a database:
Click the relevant database row in the Databases page. The selected database page appears. Select the Configuration tab. Click Delete at the bottom of the page. Confirm the deletion.</description></item><item><title>Billing &amp; payments</title><link>/rc/billing-and-payments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/billing-and-payments/</guid><description>The Billing &amp;amp; Payments screen:
Shows recent transactions for your account Helps you manage your payment methods Applies coupon credits to your account The following tabs are available:
The Billing History tab displays recent charges and payments. Each transaction includes the following details:
Detail Description Date Date the transaction was recorded Description Description of the transaction Reference Reference number Amount Transaction amount Billing details may vary between regions.
When you select a billing transaction, a Download icon appears to the right of the amount.</description></item><item><title>Browser</title><link>/ri/using-redisinsight/browser/</link><pubDate>Tue, 17 Nov 2020 12:33:02 +0530</pubDate><guid>/ri/using-redisinsight/browser/</guid><description>RedisInsight Browser lets you explore keys in your redis server. You can add, edit and delete a key. You can even update the key expiry and copy the key name to be used in different places of the application.
Note: RedisInsight restricts visualization of keys that are greater than 2GB in size.</description></item><item><title>CLI</title><link>/ri/using-redisinsight/cli/</link><pubDate>Thu, 14 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/cli/</guid><description>RedisInsight CLI lets you run commands against a redis server. You don&amp;rsquo;t need to remember the syntax - the integrated help shows you all the arguments and validates your command as you type.
Key Bindings Emacs and Vim keybindings are supported.
Action Emacs Vim Previous history item C-p k Next history item C-n j Move cursor to the begining C-a 0 Move cursor to the end C-e $ Move cursor to the right by one character C-f h Move cursor to the left by one character C-b l Enter insert mode - i Enter normal mode - ESC</description></item><item><title>Install RedisInsight on Docker</title><link>/ri/installing/install-docker/</link><pubDate>Tue, 05 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/installing/install-docker/</guid><description>This tutorial shows how to install RedisInsight on Docker so you can use RedisInsight in development. See a separate guide for installing RedisInsight on AWS.
Install Docker The first step is to install Docker for your operating system. On Windows and Mac, install Docker version 18.03 or higher. To check which Docker version you have, run docker version.
Run RedisInsight Docker image Next, run the RedisInsight container.
docker run -v redisinsight:/db -p 8001:8001 redislabs/redisinsight:latest Then, point your browser to http://localhost:8001.</description></item><item><title>Install RedisInsight on Kubernetes</title><link>/ri/installing/install-k8s/</link><pubDate>Tue, 05 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/installing/install-k8s/</guid><description>In this walkthrough, we will install RedisInsight on Kubernetes. This is an easy way to use RedisInsight with a Redis Enterprise K8s deployment.
Create the RedisInsight deployment and service Below is an annotated YAML file that will create a RedisInsight deployment and a service in a k8s cluster.
Create a new file redisinsight.yaml with the content below # RedisInsight service with name &amp;#39;redisinsight-service&amp;#39; apiVersion: v1 kind: Service metadata: name: redisinsight-service # name should not be &amp;#39;redisinsight&amp;#39; # since the service creates # environment variables that # conflicts with redisinsight # application&amp;#39;s environment # variables `REDISINSIGHT_HOST` and # `REDISINSIGHT_PORT` spec: type: LoadBalancer ports: - port: 80 targetPort: 8001 selector: app: redisinsight --- # RedisInsight deployment with name &amp;#39;redisinsight&amp;#39; apiVersion: apps/v1 kind: Deployment metadata: name: redisinsight #deployment name labels: app: redisinsight #deployment label spec: replicas: 1 #a single replica pod selector: matchLabels: app: redisinsight #which pods is the deployment managing, as defined by the pod template template: #pod template metadata: labels: app: redisinsight #label for pod/s spec: containers: - name: redisinsight #Container name (DNS_LABEL, unique) image: redislabs/redisinsight:latest #repo/image imagePullPolicy: IfNotPresent #Always pull image volumeMounts: - name: db #Pod volumes to mount into the container&amp;#39;s filesystem.</description></item><item><title>Database backup and import</title><link>/rc/api/examples/back-up-and-import-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/examples/back-up-and-import-data/</guid><description>Back up a database When you create or update a database in a Flexible or Annual account, you can specify the (optional) periodicBackupPath parameter with a backup path. This parameter enables periodic and on-demand backup operations for the specified database.
The API operation for on-demand backups is POST /subscriptions/{subscriptionId}/databases/{databaseId}/backup. On-demand database backup is an asynchronous operation.
POST &amp;#34;https://[host]/v1/subscriptions/&amp;lt;subscriptionId&amp;gt;/databases/&amp;lt;databaseId&amp;gt;/backup&amp;#34; The backup database API does not require a body. Instead, the periodicBackupPath must be set to a valid path with available storage capacity to store the backup files for the specific database.</description></item><item><title>Enable TLS</title><link>/rs/security/tls/enable-tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/tls/enable-tls/</guid><description>You can use TLS authentication for one or more of the following types of communication:
Communication from clients (applications) to your database Communication from your database to other clusters for replication using Replica Of Communication to and from your database to other clusters for synchronization using Active-Active Enable TLS for client connections You can enable TLS by editing the configuration of an existing database (as shown below) or by selecting Advanced Options when you are creating a new database.</description></item><item><title>Encryption at rest</title><link>/rc/security/encryption-at-rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/encryption-at-rest/</guid><description>Redis Cloud databases write their data to disk whenever persistence is enabled.
Redis Cloud deployments are always encrypted at rest.
Encryption at rest on AWS Persistent data is written to encrypted EBS volumes.
When Redis on Flash is enabled, the flash memory data is written to encrypted NVMe SSD volumes.
Disk encryption on GCP All data written to disk on GCP-based Redis Cloud deployments is encrypted by default. When deploying a Redis Cloud database on GCP, you don&amp;rsquo;t need to take any actions to enable this encryption.</description></item><item><title>Flush database data</title><link>/rs/databases/import-export/flush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/flush/</guid><description>To delete the data in a database without deleting the database configuration, you can flush the data from the database.
You can use the admin console to flush data from Active-Active databases.
Warning - The flush command deletes ALL in-memory and persistence data in the database. We recommend that you back up your database before you flush the data. Flush data from a database From the command line, you can flush a database with the redis-cli command or with your favorite Redis client.</description></item><item><title>Manage user login</title><link>/rs/security/access-control/manage-users/login-lockout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/manage-users/login-lockout/</guid><description>Redis Enterprise Software secures user access in a few different ways, including automatically:
Locking user accounts after a series of authentication failures (invalid passwords)
Signing sessions out after a period of inactivity
Here, you learn how to configure the relevant settings.
User login lockout The parameters for the user login lockout are:
Login Lockout Threshold - The number of failed login attempts allowed before the user account is locked. (Default: 5 minutes) Login Lockout Counter Reset - The amount of time during which failed login attempts are counted.</description></item><item><title>Multi-factor authentication</title><link>/rc/security/multi-factor-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/multi-factor-authentication/</guid><description>To reduce the chances of unauthorized access, Redis Enterprise Cloud allows users to enable multi-factor authentication (MFA).
When MFA is enabled, users must enter their username, password, and an authentication code when signing in. MFA requires a mobile device that can receive these authentication codes over text messaging. In addition, you may use an authenticator app such as Google Authenticator as one of your factors.
To further increase the security of the account, the account owner can require MFA enforcement for all users.</description></item><item><title>Offline Installation</title><link>/rs/installing-upgrading/offline-installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/offline-installation/</guid><description>By default, the installation process requires an Internet connection to enable installing dependency packages and for synchronizing the operating system clock against an NTP server.
If you install Redis Enterprise Software (RS) on a machine with no Internet connection, you need to perform these two tasks manually, as follows:
First, you need to install the required dependency packages. When RS is installed on a machine that is not connected to the Internet, the installation process fails and displays an error message informing you it failed to automatically install dependencies.</description></item><item><title>Use persistent volumes in Redis Enterprise clusters</title><link>/kubernetes/memory/persistent-volumes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/memory/persistent-volumes/</guid><description>To deploy a Redis Enterprise cluster with Redis Enterprise operator the spec should include a persistentSpec section, in the redis-enterprise-cluster.yaml file:
spec: nodes: 3 persistentSpec: enabled: true storageClassName: &amp;quot;standard&amp;quot; volumeSize: &amp;quot;23Gi” #optional Persistence storage is a requirement for this deployment type.
Note: For production deployments of Redis Enterprise Cluster on Kubenetes, the Redis Enterprise Cluster (REC) must be deployed with persistence enabled. The REC deployment files in the Kubernetes documentation contain this declaration by default.</description></item><item><title>Configure proxy policy</title><link>/rs/databases/configure/proxy-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/proxy-policy/</guid><description>Redis Enterprise Software (RS) provides high-performance data access through a proxy process that manages and optimizes access to shards within the RS cluster. Each node contains a single proxy process. Each proxy can be active and take incoming traffic or it can be passive and wait for failovers.
Proxy policies A database can have one of these proxy policies:
Proxy Policy Description Single There is only a single proxy that is bound to the database.</description></item><item><title>Redis with Python</title><link>/rs/references/client_references/client_python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_python/</guid><description>To use Redis with Python, you need a Python Redis client. The following sections demonstrate the use of redis-py, a Redis Python Client. Additional Python clients for Redis can be found under the Python section of the Redis Clients page.
Install redis-py See redis-py&amp;rsquo;s README file for installation instructions.
Use pip to install redis-py:
pip install redis You can also download the latest redis-py release from the GitHub repository. To install it, extract the source and run the following commands:</description></item><item><title>Database replication</title><link>/rs/databases/durability-ha/replication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/durability-ha/replication/</guid><description>Database replication helps ensure high availability. When replication is enabled, your dataset is replicated to a replica shard, which is constantly synchronized with the primary shard. If the primary shard fails, an automatic failover happens and the replica shard is promoted. That is, it becomes the new primary shard.
When the old primary shard recovers, it becomes the replica shard of the new primary shard. This auto-failover mechanism guarantees that data is served with minimal interruption.</description></item><item><title>RG.JDUMPSESSIONS</title><link>/modules/redisgears/jvm/commands/rg-jdumpsessions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/commands/rg-jdumpsessions/</guid><description>RG.JDUMPSESSIONS [VERBOSE] [SESSIONS s1 s2 ...] Outputs information about existing Java sessions.
Note: When you run the RG.JEXECUTE command, it creates a Java session. Arguments Name Description VERBOSE Output more details about registrations. SESSIONS Only output information about sessions that appears in the given list. Can only be the last argument. Returns Returns information about existing Java sessions.
Examples Get information for all sessions:
&amp;gt; redis-cli RG.JDUMPSESSIONS 1) 1) &amp;#34;mainClass&amp;#34; 2) &amp;#34;gears_experiments.</description></item><item><title>RG.JEXECUTE</title><link>/modules/redisgears/jvm/commands/rg-jexecute/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/commands/rg-jexecute/</guid><description>RG.JEXECUTE &amp;lt;path.to.main.class&amp;gt; [UPGRADE] &amp;lt;JAR file&amp;gt; Executes a Java function.
The code runs immediately if it uses GearsBuilder.run(). Code that uses GearsBuilder.register() will run later, every time certain events occur in the database.
Arguments Name Description path.to.main.class The path to the main class in the JAR JAR file A JAR file that contains the RedisGears code to run or register UPGRADE Upgrades registered code to a new version Returns If the executed code calls GearsBuilder.</description></item><item><title>Schedule periodic backups</title><link>/rs/databases/import-export/schedule-backups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/schedule-backups/</guid><description>Periodic backups provide a way to restore data with minimal data loss. With Redis Enterprise Software, you can schedule periodic backups to occur once a day (every 24 hours), twice a day (every twelve hours), every four hours, or every hour.
As of v6.2.8, you can specify the start time for twenty-four or twelve hour backups.
To make an on-demand backup, export your data.
You can schedule backups to a variety of locations, including:</description></item><item><title>Use the REST API</title><link>/rc/api/get-started/use-rest-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/get-started/use-rest-api/</guid><description>You can access and use the API endpoint URI (https://api.redislabs.com/v1) with any of the following tools:
The Swagger user interface The cURL HTTP client An HTTP client in any programming language Swagger user interface The Swagger UI is useful for initial introduction and for learning about API operations, models, and simulated usage.
Authenticate to Swagger To authenticate to the Swagger UI:
Open the Swagger UI page in a browser.
Select Authorize.</description></item><item><title>View or change a Fixed subscription</title><link>/rc/subscriptions/view-fixed-subscription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/subscriptions/view-fixed-subscription/</guid><description>To view the details of a Fixed subscription:
Sign in to the admin console.
If you have more than one subscription, select the target subscription from the subscription list.
Your subscription details appear, along with a summary of your database details.
From here, you can:
Select the Change Plan button to update the subscription plan tier, high availability settings, or payment method.
Select the New Database button to create a new database for your subscription.</description></item><item><title>View Flexible subscription details</title><link>/rc/subscriptions/view-flexible-subscription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/subscriptions/view-flexible-subscription/</guid><description>To view the details of a Flexible subscription:
Sign in to the admin console.
If you have more than one subscription, select the target subscription from the subscription list.
Your subscription details appear, along with a summary of your database details.
From here, you can:
Select the New database button to add a database to your subscription.
View the Status icon to learn the status of your subscription. Active subscriptions display a green circle with a check mark.</description></item><item><title>Create replica databases on Kubernetes</title><link>/kubernetes/re-databases/replica-redb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-databases/replica-redb/</guid><description>You can configure a replica of a database by creating an item in the replicaSources section of the Redis Enterprise database specification. The value of replicaSourceType must be &amp;lsquo;SECRET&amp;rsquo;; replicaSourceName must be the name of a secret that contains the replica source url.
A secret must be created using a stringData section containing the replica source URL as follows:
apiVersion: v1 kind: Secret metadata: name: my-replica-source stringData: url: replica-source-url-goes-here The replica source URL can be retrieved by going to &amp;ldquo;UI &amp;gt; database &amp;gt; configuration &amp;gt; Press the button Get Replica of source URL&amp;rdquo; in the administrative UI.</description></item><item><title>Metrics in Prometheus</title><link>/rs/clusters/monitoring/prometheus-metrics-definitions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/monitoring/prometheus-metrics-definitions/</guid><description>The integration with Prometheus lets you create dashboards that highlight the metrics that are important to you.
Here are the metrics available to Prometheus:
Database metrics Metric Description bdb_avg_latency Average latency of operations on the DB (seconds); returned only when there is traffic bdb_avg_latency_max Highest value of average latency of operations on the DB (seconds); returned only when there is traffic bdb_avg_read_latency Average latency of read operations (seconds); returned only when there is traffic bdb_avg_read_latency_max Highest value of average latency of read operations (seconds); returned only when there is traffic bdb_avg_write_latency Average latency of write operations (seconds); returned only when there is traffic bdb_avg_write_latency_max Highest value of average latency of write operations (seconds); returned only when there is traffic bdb_conns Number of client connections to DB bdb_egress_bytes Rate of outgoing network traffic from the DB (bytes/sec) bdb_egress_bytes_max Highest value of rate of outgoing network traffic from the DB (bytes/sec) bdb_evicted_objects Rate of key evictions from DB (evictions/sec) bdb_evicted_objects_max Highest value of rate of key evictions from DB (evictions/sec) bdb_expired_objects Rate keys expired in DB (expirations/sec) bdb_expired_objects_max Highest value of rate keys expired in DB (expirations/sec) bdb_fork_cpu_system % cores utilization in system mode for all redis shard fork child processes of this database bdb_fork_cpu_system_max Highest value of % cores utilization in system mode for all redis shard fork child processes of this database bdb_fork_cpu_user % cores utilization in user mode for all redis shard fork child processes of this database bdb_fork_cpu_user_max Highest value of % cores utilization in user mode for all redis shard fork child processes of this database bdb_ingress_bytes Rate of incoming network traffic to DB (bytes/sec) bdb_ingress_bytes_max Highest value of rate of incoming network traffic to DB (bytes/sec) bdb_instantaneous_ops_per_sec Request rate handled by all shards of DB (ops/sec) bdb_main_thread_cpu_system % cores utilization in system mode for all redis shard main threas of this database bdb_main_thread_cpu_system_max Highest value of % cores utilization in system mode for all redis shard main threas of this database bdb_main_thread_cpu_user % cores utilization in user mode for all redis shard main threads of this database bdb_main_thread_cpu_user_max Highest value of % cores utilization in user mode for all redis shard main threads of this database bdb_mem_frag_ratio RAM fragmentation ratio (RSS / allocated RAM) bdb_mem_size_lua Redis lua scripting heap size (bytes) bdb_memory_limit Configured RAM limit for the database bdb_monitor_sessions_count Number of client connected in monitor mode to the DB bdb_no_of_keys Number of keys in DB bdb_other_req Rate of other (non read/write) requests on DB (ops/sec) bdb_other_req_max Highest value of rate of other (non read/write) requests on DB (ops/sec) bdb_other_res Rate of other (non read/write) responses on DB (ops/sec) bdb_other_res_max Highest value of rate of other (non read/write) responses on DB (ops/sec) bdb_pubsub_channels Count the pub/sub channels with subscribed clients bdb_pubsub_channels_max Highest value of count the pub/sub channels with subscribed clients bdb_pubsub_patterns Count the pub/sub patterns with subscribed clients bdb_pubsub_patterns_max Highest value of count the pub/sub patterns with subscribed clients bdb_read_hits Rate of read operations accessing an existing key (ops/sec) bdb_read_hits_max Highest value of rate of read operations accessing an existing key (ops/sec) bdb_read_misses Rate of read operations accessing a non-existing key (ops/sec) bdb_read_misses_max Highest value of rate of read operations accessing a non-existing key (ops/sec) bdb_read_req Rate of read requests on DB (ops/sec) bdb_read_req_max Highest value of rate of read requests on DB (ops/sec) bdb_read_res Rate of read responses on DB (ops/sec) bdb_read_res_max Highest value of rate of read responses on DB (ops/sec) bdb_shard_cpu_system % cores utilization in system mode for all redis shard processes of this database bdb_shard_cpu_system_max Highest value of % cores utilization in system mode for all redis shard processes of this database bdb_shard_cpu_user % cores utilization in user mode for the redis shard process bdb_shard_cpu_user_max Highest value of % cores utilization in user mode for the redis shard process bdb_total_connections_received Rate of new client connections to DB (connections/sec) bdb_total_connections_received_max Highest value of rate of new client connections to DB (connections/sec) bdb_total_req Rate of all requests on DB (ops/sec) bdb_total_req_max Highest value of rate of all requests on DB (ops/sec) bdb_total_res Rate of all responses on DB (ops/sec) bdb_total_res_max Highest value of rate of all responses on DB (ops/sec) bdb_up Database is up and running bdb_used_memory Memory used by db (in bigredis this includes flash) (bytes) bdb_write_hits Rate of write operations accessing an existing key (ops/sec) bdb_write_hits_max Highest value of rate of write operations accessing an existing key (ops/sec) bdb_write_misses Rate of write operations accessing a non-existing key (ops/sec) bdb_write_misses_max Highest value of rate of write operations accessing a non-existing key (ops/sec) bdb_write_req Rate of write requests on DB (ops/sec) bdb_write_req_max Highest value of rate of write requests on DB (ops/sec) bdb_write_res Rate of write responses on DB (ops/sec) bdb_write_res_max Highest value of rate of write responses on DB (ops/sec) no_of_expires Current number of volatile keys in the database Node metrics Metric Description node_available_flash Available flash in node (bytes) node_available_flash_no_overbooking Available flash in node (bytes), without taking into account overbooking node_available_memory Amount of free memory in node (bytes) that is available for database provisioning node_available_memory_no_overbooking Available ram in node (bytes) without taking into account overbooking node_avg_latency Average latency of requests handled by endpoints on node (seconds); returned only when there is traffic node_bigstore_free Sum of free space of back-end flash (used by flash DB&amp;rsquo;s [BigRedis]) on all cluster nodes (bytes); returned only when BigRedis is enabled node_bigstore_iops Rate of i/o operations against back-end flash for all shards which are part of a flash based DB (BigRedis) in cluster (ops/sec); returned only when BigRedis is enabled node_bigstore_kv_ops Rate of value read/write operations against back-end flash for all shards which are part of a flash based DB (BigRedis) in cluster (ops/sec); returned only when BigRedis is enabled node_bigstore_throughput Throughput i/o operations against back-end flash for all shards which are part of a flash based DB (BigRedis) in cluster (bytes/sec); returned only when BigRedis is enabled node_conns Number of clients connected to endpoints on node node_cpu_idle CPU idle time portion (0-1, multiply by 100 to get percent) node_cpu_idle_max Highest value of CPU idle time portion (0-1, multiply by 100 to get percent) node_cpu_idle_median Average value of CPU idle time portion (0-1, multiply by 100 to get percent) node_cpu_idle_min Lowest value of CPU idle time portion (0-1, multiply by 100 to get percent) node_cpu_system CPU time portion spent in kernel (0-1, multiply by 100 to get percent) node_cpu_system_max Highest value of CPU time portion spent in kernel (0-1, multiply by 100 to get percent) node_cpu_system_median Average value of CPU time portion spent in kernel (0-1, multiply by 100 to get percent) node_cpu_system_min Lowest value of CPU time portion spent in kernel (0-1, multiply by 100 to get percent) node_cpu_user CPU time portion spent by users-pace processes (0-1, multiply by 100 to get percent) node_cpu_user_max Highest value of CPU time portion spent by users-pace processes (0-1, multiply by 100 to get percent) node_cpu_user_median Average value of CPU time portion spent by users-pace processes (0-1, multiply by 100 to get percent) node_cpu_user_min Lowest value of CPU time portion spent by users-pace processes (0-1, multiply by 100 to get percent) node_cur_aof_rewrites Number of aof rewrites that are currently performed by shards on this node node_egress_bytes Rate of outgoing network traffic to node (bytes/sec) node_egress_bytes_max Highest value of rate of outgoing network traffic to node (bytes/sec) node_egress_bytes_median Average value of rate of outgoing network traffic to node (bytes/sec) node_egress_bytes_min Lowest value of rate of outgoing network traffic to node (bytes/sec) node_ephemeral_storage_avail Disk space available to RLEC processes on configured ephemeral disk (bytes) node_ephemeral_storage_free Free disk space on configured ephemeral disk (bytes) node_free_memory Free memory in node (bytes) node_ingress_bytes Rate of incoming network traffic to node (bytes/sec) node_ingress_bytes_max Highest value of rate of incoming network traffic to node (bytes/sec) node_ingress_bytes_median Average value of rate of incoming network traffic to node (bytes/sec) node_ingress_bytes_min Lowest value of rate of incoming network traffic to node (bytes/sec) node_persistent_storage_avail Disk space available to RLEC processes on configured persistent disk (bytes) node_persistent_storage_free Free disk space on configured persistent disk (bytes) node_provisional_flash Amount of flash available for new shards on this node, taking into account overbooking, max redis servers, reserved flash and provision and migration thresholds (bytes) node_provisional_flash_no_overbooking Amount of flash available for new shards on this node, without taking into account overbooking, max redis servers, reserved flash and provision and migration thresholds (bytes) node_provisional_memory Amount of RAM that is available for provisioning to databases out of the total RAM allocated for databases node_provisional_memory_no_overbooking Amount of RAM that is available for provisioning to databases out of the total RAM allocated for databases, without taking into account overbooking node_total_req Request rate handled by endpoints on node (ops/sec) node_up Node is part of the cluster and is connected Proxy metrics Metric Description listener_acc_latency Accumulative latency (sum of the latencies) of all types of commands on DB.</description></item><item><title>Update database ACLs</title><link>/rs/security/access-control/ldap/update-database-acls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/ldap/update-database-acls/</guid><description>To grant LDAP users access to a database, assign the mapped access role to the access control list (ACL) for the database.
From the admin console menu, select Databases and then select the database from the list.
Select the Configuration tab to display the database details.
Select the Edit button.
Locate the Access Control List setting and select its Add button.
Select the appropriate roles and then save your changes.</description></item><item><title>RDBTools v0.9.42, 22 July 2019</title><link>/ri/release-notes/archive/v0.9.42/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.42/</guid><description>Bug fixes Error message while adding an instance mentioned db number as well. It has been removed now Streams: Adding new stream via the UI did not update the stream list Browser: Adding a new hash key with empty values would default to the values in the last added hash Browser: Scores for sorted set elements were being truncated to integers</description></item><item><title>Memory analysis</title><link>/ri/using-redisinsight/memory-analysis/</link><pubDate>Thu, 14 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/memory-analysis/</guid><description>RedisInsight Memory analysis helps you analyze your Redis database, which can reduce memory use and improve application performance.
Analysis can be done in two ways:
online mode - In this mode, RedisInsight downloads an rdb file from your connected Redis instance and analyzes it to create a temp file with all the keys and metadata required for analysis. In case there is a master-replica connection, RedisInsight downloads the dump from the replica instead of the master in order to avoid affecting the performance of the master.</description></item><item><title>Install RedisInsight on AWS EC2</title><link>/ri/installing/install-ec2/</link><pubDate>Tue, 05 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/installing/install-ec2/</guid><description>This tutorial shows how to install RedisInsight on an AWS EC2 instance and manage ElastiCache Redis instances using RedisInsight. To complete this tutorial you must have access to the AWS Console and permissions to launch EC2 instances.
Step 1: Create a new IAM Role (Optional) RedisInsight needs read-only access to S3 and ElastiCache APIs. This is an optional step.
Login to AWS Console, and navigate to IAM screen Create a new IAM Role Under Select type of trusted entity, choose EC2.</description></item><item><title>Accumulate</title><link>/modules/redisgears/jvm/classes/gearsbuilder/accumulate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/accumulate/</guid><description>public &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; accumulate​( gears.operations.AccumulateOperation&amp;lt;T,​I&amp;gt; accumulator) public &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; accumulate​( I initialValue, gears.operations.AccumulateOperation&amp;lt;T,​I&amp;gt; accumulator) Accumulate is a many-to-one function that iterates through the records in the pipe and reduces them to a single record.
You can provide a parameter to set the initial accumulator value. Otherwise, the initial accumulator object is null.
Parameters Type parameters:
Name Description I The template type of the returned builder Function parameters:</description></item><item><title>AccumulateBy</title><link>/modules/redisgears/jvm/classes/gearsbuilder/accumulateby/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/accumulateby/</guid><description>public &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; accumulateBy​( gears.operations.ExtractorOperation&amp;lt;T&amp;gt; extractor, gears.operations.AccumulateByOperation&amp;lt;T,​I&amp;gt; accumulator) public &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; accumulateBy​( gears.operations.ValueInitializerOperation&amp;lt;I&amp;gt; valueInitializer, gears.operations.ExtractorOperation&amp;lt;T&amp;gt; extractor, gears.operations.AccumulateByOperation&amp;lt;T,​I&amp;gt; accumulator) Iterates through the records in the pipe, groups them based on the provided extractor, and then reduces each group to a single record per group with the accumulator function.
The initial value of the accumulator is null unless you provide a value initializer operation as a parameter.
Parameters Type parameters:</description></item><item><title>RedisJSON in Active-Active databases</title><link>/modules/redisjson/active-active/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisjson/active-active/</guid><description>RedisJSON v2.2 adds support for RedisJSON in Active-Active Redis Enterprise databases.
The design is based on A Conflict-Free Replicated JSON Datatype by Kleppmann and Beresford, but the implementation includes some changes. Several conflict resolution rule examples were adapted from this paper as well.
Command differences Some RedisJSON commands work differently for Active-Active databases.
JSON.CLEAR JSON.CLEAR resets JSON arrays and objects. It supports concurrent updates to JSON documents from different instances in an Active-Active database and allows the results to be merged.</description></item><item><title>AsyncFilter</title><link>/modules/redisgears/jvm/classes/gearsbuilder/asyncfilter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/asyncfilter/</guid><description>public GearsBuilder&amp;lt;T&amp;gt; asyncFilter​( gears.operations.AsyncFilterOperation&amp;lt;T&amp;gt; filter) The asyncFilter function allows you to use a GearsFuture object to asynchronously filter out records in the pipe based on a given condition.
The filter operation should contain a conditional statement and return a boolean for each record:
If true, the record will continue through the pipe. If false, it filters out the record. Parameters Name Type Description filter AsyncFilterOperation A function that checks a condition for each record in the pipe.</description></item><item><title>AsyncForeach</title><link>/modules/redisgears/jvm/classes/gearsbuilder/asyncforeach/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/asyncforeach/</guid><description>public GearsBuilder&amp;lt;T&amp;gt; asyncForeach​( gears.operations.AsyncForeachOperation&amp;lt;T&amp;gt; foreach) The asyncForeach function allows you to use a GearsFuture object to define a set of operations and run them asynchronously for each record in the pipe.
Parameters Name Type Description foreach AsyncForeachOperation The set of operations to run for each record Returns Returns a GearsBuilder object with a new template type.
Example GearsBuilder.CreateGearsBuilder(reader).map(r-&amp;gt;r.getKey()). asyncForeach(r-&amp;gt;{ GearsFuture&amp;lt;Serializable&amp;gt; f = new GearsFuture&amp;lt;Serializable&amp;gt;(); new Thread(new Runnable() { @Override public void run() { try { Thread.</description></item><item><title>AsyncMap</title><link>/modules/redisgears/jvm/classes/gearsbuilder/asyncmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/asyncmap/</guid><description>public &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; asyncMap​( gears.operations.AsyncMapOperation&amp;lt;T,​I&amp;gt; mapper) The asyncMap function allows you to use a GearsFuture object to asynchronously map each input record in the pipe to an output record, one-to-one.
Parameters Type parameters:
Name Description I The template type of the returned builder Function parameters:
Name Type Description mapper AsyncMapOperation&amp;lt;T,​I&amp;gt; For each input record, returns a new output record Returns Returns a GearsBuilder object with a new template type.</description></item><item><title>CallNext</title><link>/modules/redisgears/jvm/classes/gearsbuilder/callnext/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/callnext/</guid><description>public static java.lang.Object callNext(java.lang.String... args) When you override a Redis command with the CommandOverrider, use callNext to run the next execution that overrides the command or the original command itself.
It is a more flexible version of callNextArray since the list of string arguments does not have to be an explicit String[] object. This allows function calls like: callNext(&amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;).
Parameters Name Type Description args string Redis command arguments Returns Returns the command result.</description></item><item><title>CallNextArray</title><link>/modules/redisgears/jvm/classes/gearsbuilder/callnextarray/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/callnextarray/</guid><description>public static native java.lang.Object callNextArray( java.lang.String[] command) When you override a Redis command with the CommandOverrider, use callNextArray to run the next execution that overrides the command or the original command itself.
It accepts an array of strings, which represents the command arguments.
Parameters Name Type Description args array of strings Redis command arguments Returns Returns the command result. It could be a string or an array of strings, depending on the command.</description></item><item><title>Cluster alert and event logs</title><link>/rs/clusters/logging/rsyslog-logging/cluster-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/logging/rsyslog-logging/cluster-events/</guid><description>The following cluster alerts and events can appear in syslog.
UI alerts Logged alerts that appear in the UI
Alert code name Alert as shown in the UI Severity Notes even_node_count True high availability requires an odd number of nodes with a minimum of three nodes true: warning
false: info inconsistent_redis_sw Not all databases are running the same open source version true: warning
false: info inconsistent_rl_sw Not all nodes in the cluster are running the same Redis Enterprise Cluster version true: warning</description></item><item><title>Collect</title><link>/modules/redisgears/jvm/classes/gearsbuilder/collect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/collect/</guid><description>public GearsBuilder&amp;lt;T&amp;gt; collect() Collects all of the records to the shard where the RedisGears job started.
Parameters None
Returns Returns a GearsBuilder object with the same template type as the input builder.
Example GearsBuilder.CreateGearsBuilder(reader).collect();</description></item><item><title>ConfigGet</title><link>/modules/redisgears/jvm/classes/gearsbuilder/config-get/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/config-get/</guid><description>public static java.lang.String configGet​(java.lang.String key) Gets the value of a RedisGears configuration setting.
Note: You can set configuration values when you load the module or use the RG.CONFIGSET command. Parameters Name Type Description key string The configuration setting to get Returns Returns the configuration value of a RedisGears configuration setting.
Example GearsBuilder.configGet(&amp;#34;ExecutionMaxIdleTime&amp;#34;);</description></item><item><title>Configure TLS protocol</title><link>/rs/security/tls/tls-protocols/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/tls/tls-protocols/</guid><description>You can change TLS protocols to improve the security of your Redis Enterprise cluster and databases. The default settings are in line with industry best practices, but you can customize them to match the security policy of your organization.
Configure TLS protocol The communications for which you can modify TLS protocols are:
Control plane - The TLS configuration for cluster administration. Data plane - The TLS configuration for the communication between applications and databases.</description></item><item><title>Count</title><link>/modules/redisgears/jvm/classes/gearsbuilder/count/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/count/</guid><description>public GearsBuilder&amp;lt;java.lang.Integer&amp;gt; count() Counts the number of records in the pipe and returns the total as a single record.
Parameters None
Returns Returns a GearsBuilder object with a new template type of Integer.
Example GearsBuilder.CreateGearsBuilder(reader).count();</description></item><item><title>CreateGearsBuilder</title><link>/modules/redisgears/jvm/classes/gearsbuilder/creategearsbuilder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/creategearsbuilder/</guid><description>public static &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; CreateGearsBuilder​( gears.readers.BaseReader&amp;lt;I&amp;gt; reader) public static &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; CreateGearsBuilder​( gears.readers.BaseReader&amp;lt;I&amp;gt; reader, java.lang.String desc) Creates a new GearsBuilder object. Use this function instead of a GearsBuilder constructor to avoid type warnings.
Parameters Type Parameters:
Name Description I The template type of the returned builder. The reader determines the type. Parameters:
Name Type Description desc string The description reader BaseReader The pipe reader Returns Returns a new GearsBuilder object.</description></item><item><title>Database alert and event logs</title><link>/rs/clusters/logging/rsyslog-logging/bdb-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/logging/rsyslog-logging/bdb-events/</guid><description>The following database (BDB) alerts and events can appear in syslog.
UI alerts Logged alerts that appear in the UI
Alert code name Alert as shown in the UI Severity Notes backup_delayed Periodic backup has been delayed for longer than minutes true: warning
false: info Has threshold parameter in the data section of the log entry. high_latency Latency is higher than msec true: warning
false: info Has threshold parameter in the key/value section of the log entry.</description></item><item><title>Delete a subscription</title><link>/rc/subscriptions/delete-subscription/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/subscriptions/delete-subscription/</guid><description>To delete a subscription:
Delete all databases from the subscription.
The number of databases for the subscription is shown in the subscription list. You can not delete a subscription until there are zero databases in the subscription.
View the subscription details.
If you have more than one subscription, select the target subscription from the subscription list.
Select the Overview tab.
Locate and then select the Cancel subscription button near the bottom, right corner of the Overview details.</description></item><item><title>Enable OCSP stapling</title><link>/rs/security/certificates/ocsp-stapling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/certificates/ocsp-stapling/</guid><description>OCSP (Online Certificate Status Protocol) lets a client or server verify the status (GOOD, REVOKED, or UNKNOWN) of a certificate maintained by a third-party certificate authority (CA).
To check whether a certificate is still valid or has been revoked, a client or server can send a request to the CA&amp;rsquo;s OCSP server (also called an OCSP responder). The OCSP responder checks the certificate&amp;rsquo;s status in the CA&amp;rsquo;s certificate revocation list and sends the status back as a signed and timestamped response.</description></item><item><title>Estimate cost</title><link>/rc/api/examples/dryrun-cost-estimates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/examples/dryrun-cost-estimates/</guid><description>When you change your subscriptions and databases, you also change the cost of your deployment. With a dry-run request, you can evaluate the impact and obtain a new cost estimate before you deploy these changes:
Create subscription Create a database Update a database Defining a dry-run request API operations that support dry-run requests accept the dryRun boolean parameter in the JSON request body.
For example, the JSON body of a create subscription request body can include the dryRun=true parameter:</description></item><item><title>Execute</title><link>/modules/redisgears/jvm/classes/gearsbuilder/execute/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/execute/</guid><description>public static java.lang.Object execute​(java.lang.String... command) Runs a Redis command, similar to executeArray. However, the execute function is more flexible. Unlike executeArray, the list of string arguments does not have to be an explicit String[] object. It allows function calls like this: execute(&amp;quot;SET&amp;quot;, &amp;quot;key&amp;quot;, &amp;quot;value&amp;quot;).
Parameters Name Type Description command string A Redis command Returns Returns the command result. It could be a string or an array of strings, depending on the command.</description></item><item><title>ExecuteArray</title><link>/modules/redisgears/jvm/classes/gearsbuilder/executearray/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/executearray/</guid><description>public static native java.lang.Object executeArray( java.lang.String[] command) Runs a Redis command. It accepts an array of strings, which represents the command to execute.
Parameters Name Type Description command array of strings A Redis command Returns Returns the command result. It could be a string or an array of strings, depending on the command.
Example GearsBuilder.executeArray(new String[]{&amp;#34;SET&amp;#34;, &amp;#34;age:maximum&amp;#34;, &amp;#34;100&amp;#34;});</description></item><item><title>Filter</title><link>/modules/redisgears/jvm/classes/gearsbuilder/filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/filter/</guid><description>public GearsBuilder&amp;lt;T&amp;gt; filter​( gears.operations.FilterOperation&amp;lt;T&amp;gt; filter) Filters out records in the pipe based on a given condition.
The filter operation should contain a conditional statement and return a boolean for each record:
If true, the record will continue through the pipe. If false, it filters out the record. Parameters Name Type Description filter FilterOperation A function that checks a condition for each record in the pipe. Returns a boolean. Returns Returns a GearsBuilder object with the same template type as the input builder.</description></item><item><title>FlatMap</title><link>/modules/redisgears/jvm/classes/gearsbuilder/flatmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/flatmap/</guid><description>public &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; flatMap​( gears.operations.FlatMapOperation&amp;lt;T,​I&amp;gt; flatmapper) Maps a single input record to one or more output records.
The FlatMap operation must return an Iterable. RedisGears splits the elements from the Iterable object and processes them as individual records.
Parameters Type parameters:
Name Description I The template type of the returned builder object Function parameters:
Name Type Description flatmapper FlatMapOperation&amp;lt;T,​I&amp;gt; For each input record, returns one or more output records Returns Returns a GearsBuilder object with a new template type.</description></item><item><title>Foreach</title><link>/modules/redisgears/jvm/classes/gearsbuilder/foreach/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/foreach/</guid><description>public GearsBuilder&amp;lt;T&amp;gt; foreach​( gears.operations.ForeachOperation&amp;lt;T&amp;gt; foreach) Defines a set of operations to run for each record in the pipe.
Parameters Name Type Description foreach ForeachOperation The set of operations to run for each record Returns Returns a GearsBuilder object with a new template type.
Example For each person hash, add a new full_name field that combines their first and last names:
GearsBuilder.CreateGearsBuilder(reader).foreach(r-&amp;gt;{ String firstName = r.getHashVal().get(&amp;#34;first_name&amp;#34;); String lastName = r.getHashVal().get(&amp;#34;last_name&amp;#34;); r.getHashVal().put(&amp;#34;full_name&amp;#34;, firstName + lastName); });</description></item><item><title>Hashtag</title><link>/modules/redisgears/jvm/classes/gearsbuilder/hashtag/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/hashtag/</guid><description>public static java.lang.String hashtag() Returns a string that maps to the current shard according to the cluster slot mapping.
Note: You can use the hashtag function when you need to create a key that resides on the current shard. Parameters None
Returns Returns a string that maps to the current shard.
Example The following example uses the hashtag function to calculate the hslot. The string maps to the current shard.</description></item><item><title>Redis with Java</title><link>/rs/references/client_references/client_java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_java/</guid><description>To use Redis with Java, you need a Java Redis client. The following sections demonstrate the use of two Java client libraries for Redis: Lettuce and Jedis. Additional Java clients for Redis can be found under the Java section of the Redis Clients page.
Lettuce Lettuce is a thread-safe Redis client that supports both synchronous and asynchronous connections.
Install Lettuce See Lettuce&amp;rsquo;s README file for installation instructions.
Add the following Maven dependency to your pom.</description></item><item><title>LocalAccumulateBy</title><link>/modules/redisgears/jvm/classes/gearsbuilder/localaccumulateby/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/localaccumulateby/</guid><description>public &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; localAccumulateBy​( gears.operations.ExtractorOperation&amp;lt;T&amp;gt; extractor, gears.operations.AccumulateByOperation&amp;lt;T,​I&amp;gt; accumulator) The localAccumulateBy function is similar to accumulateBy, except it performs the operation locally on each shard without moving data between shards.
On each shard, it iterates through the records in the pipe, groups them based on the provided extractor, and then reduces each group to a single record per group with the accumulator function.
The initial value of the accumulator is null.</description></item><item><title>Log</title><link>/modules/redisgears/jvm/classes/gearsbuilder/log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/log/</guid><description>public static void log​(java.lang.String msg) public static void log​(java.lang.String msg, LogLevel level) Writes a log message to the Redis log file. If you do not specify a LogLevel, it will default to NOTICE.
Parameters Name Type Description msg string The message to write to the log level LogLevel The log level (DEBUG, NOTICE, VERBOSE, WARNING) Returns None
Example GearsBuilder.log( &amp;#34;Setting keys to expire after 1 month&amp;#34;, LogLevel.WARNING );</description></item><item><title>Log security</title><link>/rs/clusters/logging/log-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/logging/log-security/</guid><description>Redis Enterprise comes with a set of logs on the server and available through the user interface to assist users in investigating actions taken on the server and to troubleshoot issues.
Sending logs to a remote logging server Redis Enterprise sends logs to syslog by default. You can send these logs to a remote logging server by configuring syslog.
To do this, modify the syslog or rsyslog configuration on your operating system to send logs in /var/opt/redislabs/log to a remote monitoring server of your choice.</description></item><item><title>Manage API tasks</title><link>/rc/api/get-started/manage-tasks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/get-started/manage-tasks/</guid><description>A task is an API operation that is performed asynchronously because it exceeds the time allowed for the synchronous request/response model.
Examples of API operations that use tasks are:
create subscription create database update database delete database All create, update, and delete API operations (POST, PUT, and DELETE) and some query operations (GET) use tasks.
After you request an asynchronous operation, the operation returns a taskId that identities the specific task, and contains contextual and status data on the API operation performed by the task.</description></item><item><title>Map</title><link>/modules/redisgears/jvm/classes/gearsbuilder/map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/map/</guid><description>public &amp;lt;I extends java.io.Serializable&amp;gt; GearsBuilder&amp;lt;I&amp;gt; map​( gears.operations.MapOperation&amp;lt;T,​I&amp;gt; mapper) Maps each input record in the pipe to an output record, one-to-one.
Parameters Type parameters:
Name Description I The template type of the returned builder Function parameters:
Name Type Description mapper MapOperation&amp;lt;T,​I&amp;gt; For each input record, returns a new output record Returns Returns a GearsBuilder object with a new template type.
Example Map each record to its string value:
GearsBuilder.CreateGearsBuilder(reader). map(r-&amp;gt;{ return r.</description></item><item><title>Node alert and event logs</title><link>/rs/clusters/logging/rsyslog-logging/node-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/logging/rsyslog-logging/node-events/</guid><description>The following node alerts and events can appear in syslog.
UI alerts Logged alerts that appear in the UI
Alert code name Alert as shown in the UI Severity Notes aof_slow_disk_io Redis performance is degraded as result of disk I/O limits true: error
false: info cpu_utilization CPU utilization has reached % true: warning
false: info Has global_threshold parameter in the key/value section of the log entry. ephemeral_storage Ephemeral storage has reached % of its capacity true: warning</description></item><item><title>Enable Private Service Connect</title><link>/rc/security/private-service-connect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/private-service-connect/</guid><description>Private Service Connect (PSC) creates a private endpoint that allows secure connections to Redis Cloud databases without exposing your application&amp;rsquo;s virtual private cloud (VPC).
This feature is only available for Flexible and Annual subscriptions hosted on Google Cloud Platform (GCP).
Considerations You can use Private Service Connect as an alternative to VPC peering, or you can enable both for your subscription.
Compared to VPC peering, Private Service Connect:
Only exposes the private endpoint instead of the entire application VPC network.</description></item><item><title>Register</title><link>/modules/redisgears/jvm/classes/gearsbuilder/register/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/register/</guid><description>public java.lang.String register() public java.lang.String register​(ExecutionMode mode) public java.lang.String register​( ExecutionMode mode, gears.operations.OnRegisteredOperation onRegister, gears.operations.OnUnregisteredOperation onUnregistered) Registers the pipeline of functions to run when certain events occur. The registered functions will run each time the event occurs.
Execution modes:
Name Description ASYNC Runs asynchronously on all of the shards. ASYNC_LOCAL Runs asynchronously but only on the current shard that generated the event. SYNC Runs synchronously only on the same shard that generated the event.</description></item><item><title>Repartition</title><link>/modules/redisgears/jvm/classes/gearsbuilder/repartition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/repartition/</guid><description>public GearsBuilder&amp;lt;T&amp;gt; repartition​( gears.operations.ExtractorOperation&amp;lt;T&amp;gt; extractor) Moves records between the shards. The extracted data determines the new shard location for each record.
Parameters Name Type Description extractor ExtractorOperation Extracts a specific value from each record Returns Returns a GearsBuilder object with a new template type.
Example Repartition by value:
GearsBuilder.CreateGearsBuilder(reader). repartition(r-&amp;gt;{ return r.getStringVal(); });</description></item><item><title>Configure high availability for replica shards</title><link>/rs/databases/configure/replica-ha/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/replica-ha/</guid><description>&lt;p>When you enable &lt;a href="./rs/databases/durability-ha/replication/">database replication&lt;/a>,
Redis Enterprise Software copies your data to a replica node to make your data highly available.
If the replica node fails or if the primary (master) node fails and the replica is promoted to primary,
the remaining primary node is a single point of failure.&lt;/p></description></item><item><title>Run</title><link>/modules/redisgears/jvm/classes/gearsbuilder/run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsbuilder/run/</guid><description>public void run() public void run​(boolean jsonSerialize, boolean collect) Runs the pipeline of functions immediately upon execution. It will only run once.
Parameters Name Type Description collect boolean Whether or not to collect the results from the entire cluster before returning them jsonSerialize boolean Whether or not to serialize the results to JSON before returning them Returns None
Example GearsBuilder.CreateGearsBuilder(reader).run();</description></item><item><title>SAML single sign-on</title><link>/rc/security/single-sign-on/saml-sso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/single-sign-on/saml-sso/</guid><description>Redis Cloud supports both IdP-initiated and SP-initiated single sign-on (SSO) with SAML (Security Assertion Markup Language).
You cannot use SCIM (System for Cross-domain Identity Management) to provision Redis Cloud users. However, Redis Cloud supports just-in-time (JIT) user provisioning, which means Redis Cloud automatically creates a user account the first time a new user signs in with SAML SSO.
SAML SSO overview When SAML SSO is enabled, the identity provider (IdP) admin handles SAML user management instead of the Redis Cloud account owner.</description></item><item><title>SetError</title><link>/modules/redisgears/jvm/classes/gearsfuture/seterror/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsfuture/seterror/</guid><description>public void setError​(java.lang.String error) throws java.lang.Exception Sets an error message for an asynchronous computation.
Parameters Name Type Description error string An error message Returns None
Example GearsFuture&amp;lt;Boolean&amp;gt; f = new GearsFuture&amp;lt;Boolean&amp;gt;(); try { f.setError(&amp;#34;An error has occurred during asyncForeach&amp;#34;); } catch (Exception e) { e.printStackTrace(); }</description></item><item><title>SetResult</title><link>/modules/redisgears/jvm/classes/gearsfuture/setresult/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/gearsfuture/setresult/</guid><description>public void setResult​(I result) throws java.lang.Exception Sets a computation to run asynchronously.
Parameters Name Type Description result template type I The result of a computation Returns None
Example GearsBuilder.CreateGearsBuilder(reader).map(r-&amp;gt;r.getKey()). asyncFilter(r-&amp;gt;{ GearsFuture&amp;lt;Boolean&amp;gt; f = new GearsFuture&amp;lt;Boolean&amp;gt;(); try { f.setResult(r.equals(&amp;#34;x&amp;#34;)); } catch (Exception e) { e.printStackTrace(); } return f; });</description></item><item><title>Size and scale a Redis Enterprise cluster deployment on Kubernetes</title><link>/kubernetes/memory/sizing-on-kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/memory/sizing-on-kubernetes/</guid><description>The following article reviews the mechanism and methods available for sizing and scaling a Redis Enterprise cluster deployment.
For minimum and recommended sizing, always follow the sizing guidelines detailed in the Redis Enterprise hardware requirements.
Sizing and scaling cluster nodes Setting the number of cluster nodes Define the number of cluster nodes in redis-enterprise-cluster.yaml file.
spec: nodes: 3 The number of nodes in the cluster must be an uneven number equal to or greater than 3.</description></item><item><title>Social login</title><link>/rc/security/single-sign-on/social-login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/single-sign-on/social-login/</guid><description>Redis Cloud offers social login as a single sign-on (SSO) option. Social login lets you use an existing social media account to create or sign in to your Redis Cloud account.
Redis Cloud supports the following social logins:
GitHub Google Note: If your Google and GitHub accounts share an email address (such as Gmail), you can use either one to sign in to the same Redis Cloud account. Create a new account with social login Set up Google login Select Google from the sign in screen.</description></item><item><title>Upgrade modules</title><link>/modules/install/upgrade-module/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/install/upgrade-module/</guid><description>Upgrade a module in Redis Enterprise to get the latest features and fixes.
Note: If you upgrade a single-node cluster, it does not load the new modules that are bundled with the new cluster version.
Before you upgrade a database with the RediSearch module enabled to Redis 5.0, you must upgrade the RediSearch module to version 1.4.2 or later.
Prerequisites Before you upgrade a module enabled in a database, install the new version of the module on the cluster.</description></item><item><title>Uptrace integration with Redis Enterprise Software</title><link>/rs/clusters/monitoring/uptrace-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/monitoring/uptrace-integration/</guid><description>To collect, display, and monitor metrics data from your databases and other cluster components, you can connect Uptrace to your Redis Enterprise cluster using OpenTelemetry Collector.
Uptrace is an open source application performance monitoring (APM) tool that supports distributed tracing, metrics, and logs. You can use it to monitor applications and set up automatic alerts to receive notifications.
With OpenTelemetry Collector, you can receive, process, and export telemetry data to any monitoring tool.</description></item><item><title>User event logs</title><link>/rs/clusters/logging/rsyslog-logging/user-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/logging/rsyslog-logging/user-events/</guid><description>The following user events can appear in syslog.
Non-UI events Logged events that do not appear in the UI
Event code name Severity Notes user_created info user_deleted info user_updated info Indicates that a user configuration has been updated</description></item><item><title>RDBTools v0.9.41, 4 July 2019</title><link>/ri/release-notes/archive/v0.9.41/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.41/</guid><description>Features Lazy loading for large JSONs in the Browser tool Bug fixes Client list: polling not being cleaned up properly when user navigates away from Client list tool Streams: Hide add entry button when no stream is selected. Streams: Added option to delete a stream Browser: Display message when searching members of hashes, sets, etc. doesn&amp;rsquo;t return any matches CLI: Visual bug Browser: Remove key from key list after it has been deleted Browser: Add newly added key to the key list Fixed visual inconsistencies</description></item><item><title>RDBTools v0.9.40.1, June 2019</title><link>/ri/release-notes/archive/v0.9.40.1/</link><pubDate>Wed, 05 Jun 2019 09:02:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.40.1/</guid><description>Bug fixes Fixed multiple issues in RedisJSON view in the Browser tool Fixed styling of JSON Rename ReJSON to JSON on Add Key Delete button is not shown on closed node in JSON Float strings were being considered as JSON strings and the user was not allowed to edit it (JSON object strings cannot be edited) Fixed a crash in the Configuration tool due to a JS bug * literal was not supported in the search bar in the Profiling tool</description></item><item><title>RDBTools v0.9.40, 17 May 2019</title><link>/ri/release-notes/archive/v0.9.40/</link><pubDate>Fri, 17 May 2019 05:28:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.40/</guid><description>Features New RediSearch tool, which allows executing and visualising RediSearch queries. This is a preview feature, alpha quality. Not exposed to end users. Instance IDs are now UUIDs. This is a security improvement over using serial numbers Bug fixes Streams Tool: The time slider was not handing empty streams properly. The timestamps now show seconds as well, and in the same format as the slider Avoiding extra API call when a key is not selected Browser search bar was not responding if all keys in the redis database are loaded.</description></item><item><title>RDBTools v0.9.39, 8 May 2019</title><link>/ri/release-notes/archive/v0.9.39/</link><pubDate>Wed, 08 May 2019 04:43:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.39/</guid><description>New features RedisGraph tool A basic UI for running RedisGraph queries with a historic view of queries.
Note: The RedisGraph tool is an alpha feature at this point and will only be enabled for a subset of early users. RedisJSON support in Browser Now, if the size of the JSON value exceeds a threshold, it will not be displayed in the browser, instead the user can download the entire JSON value directly as a file.</description></item><item><title>RDBTools v0.9.38, 3 May 2019</title><link>/ri/release-notes/archive/v0.9.38/</link><pubDate>Fri, 03 May 2019 04:45:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.38/</guid><description>Features Added support for viewing and editing RedisJSON values in the Browser tool Added support for using RedisJSON commands (JSON.*) in the CLI tool</description></item><item><title>Migrate to role-based LDAP</title><link>/rs/security/access-control/ldap/migrate-to-role-based-ldap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/ldap/migrate-to-role-based-ldap/</guid><description>Redis Enterprise Software supports LDAP through a role-based mechanism, first introduced in v6.0.20.
Earlier versions of Redis Enterprise Software supported a cluster-based mechanism; however, that mechanism was removed in v6.2.12.
If you&amp;rsquo;re using the cluster-based mechanism to enable LDAP authentication, you need to migrate to the role-based mechanism before upgrading to Redis Enterprise Software v6.2.12 or later.
Migration checklist This checklist covers the basic process:
Identify accounts per app on the customer end.</description></item><item><title>RDBTools v0.9.37, 10 April 2019</title><link>/ri/release-notes/archive/v0.9.37/</link><pubDate>Sat, 23 Feb 2019 04:45:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.37/</guid><description>New features Added two new bulk operations: Backup and Restore. These were previously part of the browser tool. Bulk operation now supports cluster instances (including Backup and Restore) Added support for Redis Enterprise (both standalone and clustered) Bug fixes Cached Redis connections now expire after a specific idle time Fixed UI bugs in the memory analysis dialog Fixed connection error handling in Client List tool Fixed cluster and sentinel badge not appearing for cluster instances in the main instances page.</description></item><item><title>RDBTools v0.9.36, March 2019</title><link>/ri/release-notes/archive/v0.9.36/</link><pubDate>Sat, 23 Feb 2019 04:45:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.36/</guid><description>New features Added the Streams tool The new Streams tool has landed in this release, a specialized browser tool to work specifically with the new Stream data type added in Redis 5.0. Batched updates and multi-node updates in Configuration tool New it&amp;rsquo;s possible to group multiple configuration changes together and push them in one batch. Also, the batch of changes can be pushed to multiple nodes in the cluster, making it super easy to change configration in cluster nodes.</description></item><item><title>RDBTools v0.9.35, February 2019</title><link>/ri/release-notes/archive/v0.9.35/</link><pubDate>Sat, 23 Feb 2019 04:45:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.35/</guid><description>Memory analysis bug fixes Fixed manual exit() call. Added proper error handling. Fixed RDB parsing bug Added support for streams Memory analysis eviction reports Added reports on keys based on LFU/LRU data extracted from rdb. Role based access control UI improvements New permissions are created automatically on instance or user addition. Replaced multiselect widget on Role admin panel page with checkboxed for permission fields.</description></item><item><title>Redis Enterprise for Kubernetes release notes 6.2.18-41 (Jan 2023)</title><link>/kubernetes/release-notes/k8s-6-2-18-41-jan-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-18-41-jan-2023/</guid><description>Overview This is a maintenance release of Redis Enterprise for Kubernetes 6.2.18-41 that adds supports for Redis Enterprise 6.2.18-72.
New images and fixes are listed below. Refer to 6.2.18-41 (Dec 2022 for compatibility notes and known limitations.
Images DockerHub images are available at docker.io/.
Redis Enterprise: redislabs/redis:6.2.18-72 Operator: redislabs/operator:6.2.18-41 Services Rigger: redislabs/k8s-controller:6.2.18-41 OpenShift images OLM operator version: v6.2.18-41c
Redis Enterprise: registry.connect.redhat.com/redislabs/redis-enterprise:6.2.18-72.rhel8-openshift (or registry.connect.redhat.com/redislabs/redis-enterprise:6.2.18-72.rhel7-openshift if upgrading from RHEL 7) Operator: registry.connect.redhat.com/redislabs/redis-enterprise-operator:6.2.18-41 Services Rigger: registry.</description></item><item><title>RDBTools v0.9.34.2, 11 February 2019</title><link>/ri/release-notes/archive/v0.9.34.2/</link><pubDate>Sat, 23 Feb 2019 04:45:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.34.2/</guid><description>Fixes Fixed a long-existing caching bug Compress static files Committed previously missed migration files for RBAC models</description></item><item><title>Redis Enterprise for Kubernetes release notes 6.2.18-41 (Dec 2022)</title><link>/kubernetes/release-notes/k8s-6-2-18-41/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-18-41/</guid><description>Overview The Redis Enterprise K8s 6.2.18-41 is a maintenance release which supports the Redis Enterprise Software release 6.2.18 and contains bug fixes.
The key bug fixes and known limitations are described below.
Images Redis Enterprise: redislabs/redis:6.2.18-65 Operator: redislabs/operator:6.2.18-41 Services Rigger: redislabs/k8s-controller:6.2.18-41 OpenShift images OLM operator version: v6.2.18-41a
Redis Enterprise: registry.connect.redhat.com/redislabs/redis-enterprise:6.2.18-65.rhel8-openshift (or redislabs/redis-enterprise:6.2.18-65.rhel7-openshift if upgrading from RHEL 7) Operator: registry.connect.redhat.com/redislabs/redis-enterprise-operator:6.2.18-41 Services Rigger: registry.connect.redhat.com/redislabs/services-manager:6.2.18-41 Bug fixes Fixed issues with incorrect image digest (OLM/OpenShift) (RED-88863) Fixed upgrade issue for using NGINX-based ingress with Active-Active databases.</description></item><item><title>Configure RedisInsight</title><link>/ri/installing/configurations/</link><pubDate>Fri, 13 Dec 2019 03:49:29 +0530</pubDate><guid>/ri/installing/configurations/</guid><description>You can configure RedisInsight with system environment variables.
To configure RedisInsight with environment variables:
Follow the instructions to set environment variables for your operating system:
Mac Windows Linux Docker Set the environment variables.
Restart RedisInsight.
RedisInsight environment variables The following environment variables can be set to configure RedisInsight:
RIPORT Description: Which port should RedisInsight listen on.
Type: Number
Default: 8001
RIHOST Description: Which host should RedisInsight bind to.
Type: String</description></item><item><title>RDBTools v0.9.34.1, 7 February 2019</title><link>/ri/release-notes/archive/v0.9.34.1/</link><pubDate>Sat, 23 Feb 2019 04:45:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.34.1/</guid><description>Bug fixes Added special handling for desktop mode in RBAC Enable GA only in production Removed full server reloads from the application Improved logging for memory analysis</description></item><item><title>Profiler</title><link>/ri/using-redisinsight/profiler/</link><pubDate>Thu, 14 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/profiler/</guid><description>RedisInsight Profiler runs Redis MONITOR command, which analyzes every command sent to the redis instance. It parses the output of the MONITOR command and generates a summarized view. All the commands sent to the redis instance are monitored for the duration of the profiling.
Profiler gives information about the number of commands processed, commands/second and number of connected clients. It also gives information about top prefixes, top keys and top commands.</description></item><item><title>Redis Enterprise for Kubernetes release notes 6.2.18-3 (Nov 2022)</title><link>/kubernetes/release-notes/k8s-6-2-18-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-18-3/</guid><description>Overview The Redis Enterprise K8s 6.2.18-3 supports the Redis Enterprise Software release 6.2.18 and includes feature improvements and bug fixes.
The key bug fixes, new features, and known limitations are described below.
Warning - If you use NGINX as an ingress controller for Redis Enterprise, do not upgrade to the 6.2.18-3 release. Skip this release and upgrade to version 6.2.18-41 instead. Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.</description></item><item><title>Access control for Active-Active databases</title><link>/rs/security/access-control/active-active/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/active-active/</guid><description>Users, roles, and Redis ACLs Users, roles, and Redis ACLs are cluster-level entities. Therefore they are applied per local participating cluster and Active-Active database instance, and they are not replicated or propagated to the other participating clusters and instances. ACLs will be enforced according to the instance the client is connected to. The Active-Active replication mechanism will propagate all the effects of the operation.
Update admin credentials Active-Active databases use administrator credentials to manage operations.</description></item><item><title>The API request lifecycle</title><link>/rc/api/get-started/process-lifecycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/get-started/process-lifecycle/</guid><description>Flexible and Annual Redis Enterprise Cloud subscriptions can leverage a RESTful API that permits operations against a variety of resources, including servers, services, and related infrastructure.
Note: The REST API is not supported for Fixed or Free subscriptions. Once it&amp;rsquo;s enabled, you can use the REST API to create, update, and delete subscriptions, databases, and other entities.
API operations run asynchronously, which means that provisioning occurs in the background. When you submit a request, a background process starts working on it.</description></item><item><title>Audit using Service Log</title><link>/rc/api/examples/audit-system-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/examples/audit-system-logs/</guid><description>Service logs collect and report actions performed on various entities in your Redis Enterprise Cloud subscription. These entities include the account itself, users, API Keys, subscriptions, databases, accounts, payment methods, and more. For each entity, various lifecycle events are logged in the system log.
To view the log, sign in to the Redis Cloud admin console and then select Logs from the main menu.
To learn more, see System logs.</description></item><item><title>CommandOverrider</title><link>/modules/redisgears/jvm/classes/readers/commandoverrider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/readers/commandoverrider/</guid><description>The CommandOverrider allows you to override and customize Redis commands.
Pass the CommandOverrider to the GearsBuilder.CreateGearsBuilder() function in your Java code. Call the register() function. Run RG.JEXECUTE to register your code. Note: If you register code that uses CommandOverrider, its reader value is &amp;quot;CommandReader&amp;quot; when you run the RG.DUMPREGISTRATIONS command, not &amp;quot;CommandOverrider&amp;quot;. Parameters Name Type Description command string The command to override prefix string Only override the command for keys that start with this string Output records Outputs a record with the command&amp;rsquo;s name and arguments.</description></item><item><title>CommandReader</title><link>/modules/redisgears/jvm/classes/readers/commandreader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/readers/commandreader/</guid><description>The CommandReader allows you to run RedisGears functions on command when you:
Pass the CommandReader to the GearsBuilder.CreateGearsBuilder() function in your Java code.
Call the register() function.
Run RG.JEXECUTE to register your code.
Use RG.TRIGGER to run your code on command:
RG.TRIGGER &amp;lt;Trigger name&amp;gt; [arg1 arg2 ...] Parameters Name Type Description trigger string The command name that triggers the registered RedisGears functions to run Output records Outputs a record with the command trigger&amp;rsquo;s name and arguments.</description></item><item><title>Configure cipher suites</title><link>/rs/security/tls/ciphers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/tls/ciphers/</guid><description>Ciphers are algorithms that help secure connections between clients and servers. You can change the ciphers to improve the security of your Redis Enterprise cluster and databases. The default settings are in line with industry best practices, but you can customize them to match the security policy of your organization.
Default cipher:
HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH Configure cipher suites The communications for which you can modify ciphers are:
Control plane - The TLS configuration for cluster administration.</description></item><item><title>Deactivate default user</title><link>/rs/security/access-control/manage-users/default-user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/manage-users/default-user/</guid><description>When you provision a database, the default user will be enabled. This allows for backwards compatibility with versions of Redis before Redis 6.
To deactivate the default user:
Select the configuration tab. Clear the checkbox for Default database access. Select Save. Note: We recommend that you deactivate the default user when using ACLs with your database and backwards compatibility is not required.</description></item><item><title>Install RedisGears</title><link>/modules/redisgears/installing-redisgears/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/installing-redisgears/</guid><description>Before you can use RedisGears, you have to install the RedisGears module on your Redis Enterprise cluster.
Minimum requirements Redis Enterprise 6.0.12 or later The cluster is setup and all of the nodes are joined to the cluster Install RedisGears If your cluster uses Redis Enterprise v6.0.12 or later and has internet access, you only need to download the RedisGears package. It automatically fetches dependencies like the Python and JVM plugins during online installation.</description></item><item><title>JavaReader</title><link>/modules/redisgears/jvm/classes/readers/javareader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/readers/javareader/</guid><description>The JavaReader is an abstract class that allows you to create a custom reader in Java.
Create a custom reader To create a custom reader:
Extend the JavaReader class Override the iterator() function Custom reader example The implementation of the KeysOnlyReader class shows how to create a custom reader with JavaReader:
import java.util.Iterator; import gears.GearsBuilder; /** * A reader that only reads key names from the key space * */ public class KeysOnlyReader extends JavaReader&amp;lt;String&amp;gt; { /** * */ private static final long serialVersionUID = 1L; private String scanSize; private String pattern; /** * Create a new KeysOnlyReader reader * @param scanSize - the size to use with the scan command * @param pattern - the pattern of the keys to read */ public KeysOnlyReader(int scanSize, String pattern) { this.</description></item><item><title>KeysOnlyReader</title><link>/modules/redisgears/jvm/classes/readers/keysonlyreader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/readers/keysonlyreader/</guid><description>The KeysOnlyReader only extracts the key names from a database.
Constructors You can use one of these constructors to create a new KeysOnlyReader object:
public KeysOnlyReader() public KeysOnlyReader(int scanSize, String pattern) Parameters Name Type Default value Description pattern string &amp;ldquo;*&amp;rdquo; (match all keys) Get all keys that match this pattern scanSize integer 10000 The scan command&amp;rsquo;s size limit Output records Each output record is a string that represents the key&amp;rsquo;s name.</description></item><item><title>KeysReader</title><link>/modules/redisgears/jvm/classes/readers/keysreader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/readers/keysreader/</guid><description>Creates records from the keys and values stored in a Redis database.
Note: Currently only supports string and hash data types. For other data types, it will only extract the key name. Constructors You can use one of these constructors to create a new KeysReader object:
public KeysReader() public KeysReader(String pattern) public KeysReader(String prefix, boolean readValues) public KeysReader(String pattern, boolean noScan, boolean readValues) public KeysReader(String prefix, boolean readValues, String[] eventTypes, String[] keyTypes) public KeysReader(String pattern, boolean noScan, boolean readValues, String[] eventTypes, String[] keyTypes) Parameters Name Type Default value Description commands array of strings null The commands that this reader is registered on eventTypes array of strings null The event types to register on (usually the command name) keyTypes array of strings null The key types to register on noScan boolean false Whether or not to scan the key space or just read the pattern as is pattern/prefix string &amp;ldquo;*&amp;rdquo; (match all keys) The reader will get all keys that match this pattern readValues boolean true Whether or not to read the keys&amp;rsquo; values Output records Creates a KeysReaderRecord for each matching key in the database.</description></item><item><title>Maintenance mode for cluster nodes</title><link>/rs/clusters/maintenance-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/maintenance-mode/</guid><description>Use maintenance mode to prevent data loss during hardware or operating system maintenance on Redis Enterprise servers. When maintenance mode is on, all shards move off of the node under maintenance and migrate to another available node.
Activate maintenance mode When you activate maintenance mode, Redis Enterprise does the following:
Checks whether a shut down of the node will cause quorum loss. If so, maintenance mode will not turn on.</description></item><item><title>Deployment with OpenShift CLI for Redis Enterprise for Kubernetes</title><link>/kubernetes/deployment/openshift/openshift-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/deployment/openshift/openshift-cli/</guid><description>These are the steps required to set up a Redis Enterprise Software cluster with OpenShift.
Prerequisites OpenShift cluster installed, with at least three nodes (each meeting the minimum requirements for a development installation) Note: If you are running an OpenShift 3 version, use the bundle.yaml file located in the openshift_3_x folder in the redis-enterprise-k8s-docs repo. This folder also contains the custom resource definitions (CRDs) compatible with OpenShift 3.x. kubectl tool installed at version 1.</description></item><item><title>Permissions</title><link>/rs/references/rest-api/permissions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/permissions/</guid><description>Some Redis Enterprise REST API requests may require the user to have specific permissions.
Administrators can assign a predefined role to a user via the admin console or a PUT /users/{uid} API request in order to grant necessary permissions to them.
Roles Each user in the cluster has an assigned role, which defines the permissions granted to the user.
Available roles include:
db_viewer: Can view database info. db_member: Can create or modify databases and view their info.</description></item><item><title>Redis with PHP (Predis)</title><link>/rs/references/client_references/client_php/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_php/</guid><description>To use Redis with PHP, you need a PHP Redis client.
Here, we show Predis, a flexible and feature-complete Redis client library for PHP version 5.3 and later.
Other Redis clients are available for PHP; see the PHP section of the Redis Clients page.
Install Predis See the How to install and use Predis section of the Predis client&amp;rsquo;s README file for installation instructions.
The recommended method to install Predis is to use Composer and install it from Packagist or the dedicated PEAR channel.</description></item><item><title>Configure shard placement</title><link>/rs/databases/configure/shard-placement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/shard-placement/</guid><description>In Redis Enterprise Software , the location of master and replica shards on the cluster nodes can impact the database and node performance. Master shards and their corresponding replica shards are always placed on separate nodes for data resiliency. The shard placement policy helps to maintain optimal performance and resiliency.
In addition to the shard placement policy, considerations that determine shard placement are:
Separation of master and replica shards Available persistence and Redis on Flash (RoF) storage Rack awareness Memory available to host the database when fully populated The shard placement policies are:</description></item><item><title>ShardsIDReader</title><link>/modules/redisgears/jvm/classes/readers/shardsidreader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/readers/shardsidreader/</guid><description>The ShardsIDReader creates a single record on each shard that represents the current shard&amp;rsquo;s ID.
Use this reader when you want to run an operation on each shard in the database.
Parameters None
Output records Creates a record for each shard with the shard&amp;rsquo;s cluster identifier.
Example ShardsIDReader reader = new ShardsIDReader();</description></item><item><title>StreamReader</title><link>/modules/redisgears/jvm/classes/readers/streamreader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/classes/readers/streamreader/</guid><description>Reads Redis stream data.
Parameters Name Type Default value Description batchSize integer 1 The number of new messages that will cause the functions to run duration integer 0 How many seconds to wait before execution, regardless of batch size failurePolicy FailurePolicy FailurePolicy.CONTINUE How to handle execution failure (CONTINUE/ABORT/RETRY) failureRetryInterval integer 5000 The number of seconds to wait before retrying pattern string &amp;ldquo;*&amp;rdquo; (match all keys) The pattern of keys that store streams startId string &amp;ldquo;0-0&amp;rdquo; Start reading from this stream ID trimStream boolean true Whether or not to trim the stream Output records Creates a record for each message in the input stream.</description></item><item><title>Upgrade an existing Redis Enterprise Software deployment</title><link>/rs/installing-upgrading/upgrading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/upgrading/</guid><description>To upgrade Redis Enterprise Software, you:
Upgrade the software on all nodes of the cluster.
(Optional) Upgrade each database in the cluster.
You don&amp;rsquo;t have to upgrade the databases in your cluster; however, new features and important fixes might not be enabled until you do so.
Default Redis database versions When you upgrade an existing database or create a new one, it uses the default Redis version (default_redis_version) unless you specify the database version explicitly with redis_version in the REST API or rladmin upgrade db.</description></item><item><title>Redis Enterprise for Kubernetes release notes 6.2.12-1 (Sept 2022)</title><link>/kubernetes/release-notes/k8s-6-2-12-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-12-1/</guid><description>Overview The Redis Enterprise K8s 6.2.12-1 supports the Redis Enterprise Software release 6.2.12 and includes feature improvements and bug fixes.
The key bug fixes and known limitations are described below.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.2.12-82 or redislabs/redis:6.2.12-82.rhel8-openshift Operator: redislabs/operator:6.2.12-1 Services Rigger: redislabs/k8s-controller:6.2.12-1 or redislabs/services-manager:6.2.12-1 (on the Red Hat registry) Feature improvements Redis Enterprise Software 6.2.12 support (RED-83829) Added support for annotations on services created by Redis Enterprise (RED-56245) Support for additional builds of same Redis Software version with same operator version.</description></item><item><title>RDBTools v0.9.34.0, 4 February 2019</title><link>/ri/release-notes/archive/v0.9.34/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ri/release-notes/archive/v0.9.34/</guid><description>Role-based access control support When RBAC is enabled, admin users can control the permissions for other users. There are instance-specific permissions and global permissions. Instance permissions can be broadly classified into read and write permissions for each tool.</description></item><item><title>RDBTools v0.9.34.0, 23 January 2019</title><link>/ri/release-notes/archive/v0.9.33/</link><pubDate>Wed, 23 Jan 2019 03:49:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.33/</guid><description>Cluster support improvements Ask for seed nodes when adding a cluster Added 2 cluster management alerts: Seed nodes don&amp;rsquo;t agree on cluster configuration All seed nodes are down Fixed &amp;ldquo;flickering&amp;rdquo; issue after a replica node is deleted. Minor bug fixes Skip already processed key in rename bulk ops CSS fix for update version dialog Handle case of unlimited instances for adding sentinel masters</description></item><item><title>Redis Enterprise for Kubernetes release notes 6.2.10-45 (July 2022)</title><link>/kubernetes/release-notes/k8s-6-2-10-45-2022-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-10-45-2022-07/</guid><description>Overview The Redis Enterprise K8s 6.2.10-45 supports the Redis Enterprise Software release 6.2.10 and includes feature improvements and bug fixes.
The key bug fixes and known limitations are described below.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.2.10-129 or redislabs/redis:6.2.10-129.rhel8-openshift (or redislabs/redis:6.2.10-129.rhel7-openshift if upgrading from a RHEL7 cluster) Operator: redislabs/operator:6.2.10-45 Services Rigger: redislabs/k8s-controller:6.2.10-45 or redislabs/services-manager:6.2.10-45 (on the Red Hat registry) Feature improvements OpenShift OperatorLifecycleManager support on restricted networks (RED-72968) log_collector script uses oc command with automatic detection of OpenShift (RED-73215) Operator uses policy/v1 for PodDisruptionBudget(RED-78564) Added support for Kubernetes distributions (see Compatibility notes below) Fixed bugs Upgrade failures when RHEL7 was used (RED-77890) Log collector failures when Python2 was used (RED-73403) API changes The digestHash optional field added to imageSpec fields in the REC.</description></item><item><title>RDBTools v0.9.32, 7 Jan 2019</title><link>/ri/release-notes/archive/v0.9.32/</link><pubDate>Wed, 23 Jan 2019 03:49:29 +0530</pubDate><guid>/ri/release-notes/archive/v0.9.32/</guid><description>Free plan Free for a lifetime with usage limit applied on Memory Analyzer, Browser, Cluster Management, and Bulk Operation. Disabled SSL support in the free plan. Disabled S3 support for offline analysis from the free plan. Improved Elasticache support Improved error handling in auto-discovery of elasticache. Removed AWS Access and Secret Key option for security reason now only IAM role option is available now.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.2.10-34 (May 2022)</title><link>/kubernetes/release-notes/k8s-6-2-10-34-2022-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-10-34-2022-05/</guid><description>Overview The Redis Enterprise K8s 6.2.10-34 supports the Redis Enterprise Software release 6.2.10 and includes feature improvements and bug fixes.
The key new features, bug fixes, and known limitations are described below.
Warning - Do not upgrade to this 6.2.10-34 release if you are an OpenShift customer and also use modules. Instead, use the 6.2.10-45 release.
There was a change in 6.2.10-34 to a new RHEL 8 base image for the Redis Server image.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.2.10-4 (March 2022)</title><link>/kubernetes/release-notes/k8s-6-2-10-4-2022-03-copy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-10-4-2022-03-copy/</guid><description>Overview The Redis Enterprise K8s 6.2.10-4 supports the Redis Enterprise Software release 6.2.10 and includes feature improvements and bug fixes.
The key new features, bug fixes, and known limitations are described below.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.2.10-90 or redislabs/redis:6.2.10-90.rhel7-openshift Operator: redislabs/operator:6.2.10-4 Services Rigger: redislabs/k8s-controller:6.2.10-4 or redislabs/services-manager:6.2.10-4 (on the Red Hat registry) Feature improvements REDB status - bundled Redis versions for cluster shown in status (RED-44074) OLM (OperatorHub) - example REC contains image references to Red Hat servers (RED-44439) REDB status - added information about database backups (RED-45577) Added dedicated metrics exporter service (service name ending in -prom).</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.2.8-15 (January 2022)</title><link>/kubernetes/release-notes/k8s-6-2-8-15-2022-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-8-15-2022-01/</guid><description>Overview The Redis Enterprise K8s 6.2.8-15 is a maintenance release for the Redis Enterprise Software release 6.2.8 and includes bug fixes.
The key new features, bug fixes, and known limitations are described below.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.2.8-64 or redislabs/redis:6.2.8-64.rhel7-openshift Operator: redislabs/operator:6.2.8-15 Services Rigger: redislabs/k8s-controller:6.2.8-15 or redislabs/services-manager:6.2.8-15 (on the Red Hat registry) Fixed bugs Upgrading with the bundle using kubectl apply -f fails giving error (RED-69570):</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.2.8-11 (January 2022)</title><link>/kubernetes/release-notes/k8s-6-2-8-11-2022-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-8-11-2022-01/</guid><description>Overview The Redis Enterprise K8s 6.2.8-11 release provides support for the Redis Enterprise Software release 6.2.8 and includes several enhancements and bug fixes.
The key new features, bug fixes, and known limitations are described below.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.2.8-53 or redislabs/redis:6.2.8-53.rhel7-openshift Operator: redislabs/operator:6.2.8-11 Services Rigger: redislabs/k8s-controller:6.2.8-11 or redislabs/services-manager:6.2.8-11 (on the Red Hat registry) Feature improvements Istio gateway/virtual services are supported as ingress controllers. Note that for Active-Active databases, the operator doesn&amp;rsquo;t create ingress rules, and those should be manually configured.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.2.8-2 (November 2021)</title><link>/kubernetes/release-notes/k8s-6-2-8-2-2021-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-8-2-2021-11/</guid><description>Overview The Redis Enterprise K8s 6.2.8-2 release provides support for the Redis Enterprise Software release 6.2.8 and includes several enhancements and bug fixes.
The key new features, bug fixes, and known limitations are described below.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.2.8-41 or redislabs/redis:6.2.8-41.rhel7-openshift Operator: redislabs/operator:6.2.8-2 Services Rigger: redislabs/k8s-controller:6.2.8-2 or redislabs/services-manager:6.2.8-2 (on the Red Hat registry) New features Certificate management capabilities through the Redis Enterprise cluster API (RED-61176) Feature improvements Support for managing database ports through the REDB API (RED-48286) Use explicit object instead of wildcard for roles (RED-38013) Advanced use case support for custom attributes for REC stateful set and rigger pods (RED-56502, RED-62550, RED-63426) Services rigger/K8s controller image changed to ubi-minimal lightweight base image (RED-61866) Support for the Redis upgrade policy setting through the REC API (RED-63000) Fixed bugs Fixed issue of log rotation not working on OpenShift (RED-64726) Known limitations Long cluster names cause routes to be rejected (RED-25871) A cluster name longer than 20 characters will result in a rejected route configuration because the host part of the domain name will exceed 63 characters.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.2.4-1 (September 2021)</title><link>/kubernetes/release-notes/k8s-6-2-4-1-2021-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/k8s-6-2-4-1-2021-09/</guid><description>Overview The Redis Enterprise K8s 6.2.4-1 release provides support for the Redis Enterprise Software release 6.2.4 and includes several enhancements and bug fixes.
The key new features, bug fixes, and known limitations are described below.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.2.4-55 or redislabs/redis:6.2.4-55.rhel7-openshift Operator: redislabs/operator:6.2.4-1 Services Rigger: redislabs/k8s-controller:6.2.4-1 or redislabs/services-manager:6.2.4-1 (on the Red Hat registry) New features Internode encryption configuration through K8s custom resources (RED-59699, RED-60318) Feature improvements Support for addition attribute in REDB secret containing comma separated list of service names (RED-48469) Support OpenShift 4.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.20-12 (July 2021)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-20-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-20-12/</guid><description>Overview The Redis Enterprise K8s 6.0.20-12 release is a major release on top of 6.0.20-4 providing support for the Redis Enterprise Software release 6.0.20-97 and includes several enhancements and bug fixes.
This release of the operator provides:
New features Various bug fixes Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.0.20-97 or redislabs/redis:6.0.20-97.rhel7-openshift` Operator and Bootstrapper: redislabs/operator:6.0.20-12 Services Rigger: redislabs/k8s-controller:6.0.20-12 or redislabs/services-manager:6.0.20-12 (on the Red Hat registry) New features EKS support Feature parity for Openshift OLM; added support for: REDB admission Hashicorp Vault integration Hashicorp Vault integration is now GA Moved Operator environment variables to configmap Important fixes Admission controller deployment combined with operator deployment to simplify deployment (RED-52701) Additional verbosity in the kubectl get redb command output (RED-55042) Support for Redis Enterprise license storage within secrets; Vault and K8s secrets (RED-55587) Support for manual procedure to replace the REC credentials (RED-56529, RED-56530) Fixed cluster recovery issue - recovery process was not starting (RED-55500) When a pod status is CrashLoopBackOff and we run the cluster recovery, the process will not complete (RED-33713) Master pod is not always labeled in Rancher (fixed in 6.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.20-4 (May 2021)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-20-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-20-4/</guid><description>The Redis Enterprise K8s 6.0.20-4 release is a major release on top of 6.0.8-20 providing support for the Redis Enterprise Software release 6.0.20-69 and includes several enhancements and bug fixes.
Overview This release of the operator provides:
New features Various bug fixes To upgrade your deployment to this latest release, see &amp;ldquo;Upgrade a Redis Enterprise cluster (REC) on Kubernetes&amp;rdquo;.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.0.20-69 or redislabs/redis:6.</description></item><item><title>Slowlog</title><link>/ri/using-redisinsight/slowlog/</link><pubDate>Thu, 14 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/slowlog/</guid><description>RedisInsight Slowlog is a list of slow operations for your redis instance. These can be used to troubleshoot performance issues. Each entry in the list displays the command, duration and timestamp. Any transaction that exceeds slowlog-log-slower-than microseconds are recorded up to a maximum of slowlog-max-len after which older entries are discarded.
Clear Slowlog - Clear slowlog clears all the slowlog entries from your redis server.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.12-5 (February 2021)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-12-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-12-5/</guid><description>The Redis Enterprise K8s 6.0.12-5 release is a major release on top of 6.0.8-20 providing support for the Redis Enterprise Software release 6.0.12-57 and includes several enhancements and bug fixes.
Overview This release of the operator provides:
New features Various bug fixes To upgrade your deployment to this latest release, see &amp;ldquo;Upgrade a Redis Enterprise cluster (REC) on Kubernetes&amp;rdquo;.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.0.12-57 or redislabs/redis:6.</description></item><item><title>Redis with C</title><link>/rs/references/client_references/client_c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_c/</guid><description>To use Redis with C, you need a C Redis client library. Here, you can learn how to use hiredis to connect to a Redis database from an application written in C.
Additional C client libraries are available. To learn more, see the C section of the Redis Clients page.
Install hiredis Download the latest hiredis release from the GitHub repository.
Connect to Redis The following code creates a connection to Redis using the hiredis synchronous API:</description></item><item><title>Write-behind, write-through, and read-through caching</title><link>/modules/redisgears/jvm/recipes/write-behind/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/jvm/recipes/write-behind/</guid><description>The rghibernate recipe uses RedisGears functions and the Hibernate framework to implement write-behind, write-through, and read-through caching.
These caching strategies allow applications to simply connect to a Redis cache layer instead of an underlying database. Whenever the application updates data in the cache, Redis also syncs the data in the backend database.
The underlying database could be an SQL database like MySQL, so you will need to provide an XML file that tells rghibernate how to map data between Redis and the other database.</description></item><item><title>Enable causal consistency</title><link>/rs/databases/active-active/causal-consistency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/causal-consistency/</guid><description>When you enable causal consistency in Active-Active databases, the order of operations on a specific key are maintained across all Active-Active database instances.
For example, if operations A and B were applied on the same key and the effect of A was observed by the instance that initiated B before B was applied to the key. All instances of an Active-Active databases would then observe the effect of A before observing the effect of B.</description></item><item><title>Deploy Redis Enterprise with OpenShift OperatorHub</title><link>/kubernetes/deployment/openshift/openshift-operatorhub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/deployment/openshift/openshift-operatorhub/</guid><description>Redis Enterprise for Kubernetes can be deployed and administered entirely from the OpenShift command-line interface (CLI). For those who prefer a user interface (UI), OpenShift also provides the OperatorHub, a web console interface where you can install operators and create custom resources.
For details on the OperatorHub, see the OpenShift documentation.
Prepare the cluster The Redis Enterprise pods must run in OpenShift with privileges set in a Security Context Constraint. This grants the pod various rights, such as the ability to change system limits or run as a particular user.</description></item><item><title>Package modules</title><link>/modules/install/packaging-modules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/install/packaging-modules/</guid><description>In addition to the modules packaged and certified by Redis, there are many custom modules that are compatible with Redis Enterprise.
To use custom modules with a Redis Enterprise database, you need to package them with the RAMP (Redis Automatic Module Packaging) utility before you install them on the cluster.
Warning - Redis does not officially support third-party modules or databases created with them. Prerequisites Install the ramp-packer utility:
pip install ramp-packer Package custom modules Before you can install and enable a custom module in a new database, you need to download, compile, and package it with the RAMP utility.</description></item><item><title>Rack-zone awareness in Redis Enterprise Software</title><link>/rs/clusters/configure/rack-zone-awareness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/configure/rack-zone-awareness/</guid><description>Rack-zone awareness is a Redis Enterprise feature that helps to ensure high-availability in the event of a rack or zone failure.
When you enable rack-zone awareness in a Redis Enterprise Software cluster, you assign a rack-zone ID to each node. This ID is used to map the node to a physical rack or logical zone. The cluster can then ensure that master shards, corresponding replica shards, and associated endpoints are placed on nodes in different racks/zones.</description></item><item><title>Recover a failed cluster</title><link>/rs/clusters/cluster-recovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/cluster-recovery/</guid><description>When a Redis Enterprise Software cluster fails, you must use the cluster configuration file and database data to recover the cluster.
Note: For cluster recovery in a Kubernetes deployment, go to: Recover a Redis Enterprise cluster on Kubernetes. Cluster failure can be caused by:
A hardware or software failure that causes the cluster to be unresponsive to client requests or administrative actions. More than half of the cluster nodes lose connection with the cluster, resulting in quorum loss.</description></item><item><title>Uninstall Redis Enterprise Software</title><link>/rs/installing-upgrading/uninstalling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/uninstalling/</guid><description>Use the rl_uninstall script to uninstall Redis Enterprise Software and remove its files.
sudo ./rl_uninstall.sh By default, the script is located in /opt/redislabs/bin.</description></item><item><title>Usage reports</title><link>/rc/databases/usage-reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/usage-reports/</guid><description>The Usage Report shows the daily memory usage and shard usage of all databases from the subscriptions associated with your account.
To filter the data, you can:
Select a month and year from the View Statement For list to view the daily memory usage during a specific month. Select a subscription from the Subscription list to view the daily memory usage of a specific subscription associated with your account. Select a database from the Database list to view the daily memory usage of a specific database.</description></item><item><title>View account information</title><link>/rc/api/examples/view-account-information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/examples/view-account-information/</guid><description>The root API operation returns information about the current account, user, and API Key (as identified by the set of API Keys provided in the API request).
GET &amp;#34;https://[host]/v1/subscriptions/&amp;lt;subscription_id&amp;gt;/databases/&amp;lt;database_id&amp;gt;/metrics?metricSpan=1hour&amp;#34; Here is an example of the API operation response:
{ &amp;#34;account&amp;#34;: { &amp;#34;id&amp;#34;: 654321, &amp;#34;name&amp;#34;: &amp;#34;Redis&amp;#34;, &amp;#34;createdTimestamp&amp;#34;: &amp;#34;2018-12-23T15:15:31Z&amp;#34;, &amp;#34;updatedTimestamp&amp;#34;: &amp;#34;2019-07-04T12:22:04Z&amp;#34;, &amp;#34;key&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;jay-doe-api-key-6&amp;#34;, &amp;#34;accountId&amp;#34;: 654321, &amp;#34;accountName&amp;#34;: &amp;#34;Redis account for Jay Doe&amp;#34;, &amp;#34;allowedSourceIps&amp;#34;: [ &amp;#34;192.0.2.0/24&amp;#34; ], &amp;#34;createdTimestamp&amp;#34;: &amp;#34;2019-06-06T07:41:14Z&amp;#34;, &amp;#34;owner&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;Jay Doe&amp;#34;, &amp;#34;email&amp;#34;: &amp;#34;jay.</description></item><item><title>Write-behind caching</title><link>/modules/redisgears/python/recipes/write-behind/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/python/recipes/write-behind/</guid><description>Write-behind is a caching strategy in which the cache layer itself connects to the backing database. This means that your applications need only ever connect to your cache layer, and the cache then reads from or updates the backing database as needed. Redis currently supports write-behind caching in Redis Enterprise Software.
Here&amp;rsquo;s how these caching patterns work:
Your application uses the cache for reads and writes. The cache syncs any changed data to the backing database asynchronously.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.8-20 (December 2020)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-8-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-8-20/</guid><description>The Redis Enterprise K8s 6.0.8-20 release is a major release on top of 6.0.8-1 providing support for the Redis Enterprise Software release 6.0.8-30 and includes several enhancements and bug fixes.
Overview This release of the operator provides:
New features Various bug fixes To upgrade your deployment to this latest release, see &amp;ldquo;Upgrade a Redis Enterprise cluster (REC) on Kubernetes&amp;rdquo;.
Images This release includes the following container images:
Redis Enterprise: redislabs/redis:6.0.8-30 or redislabs/redis:6.</description></item><item><title>Redis Enterprise Software release notes 6.4.2 (February 2023)</title><link>/rs/release-notes/rs-6-4-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-4-2/</guid><description>​​Redis Enterprise Software version 6.4.2 is now available!
The following table shows the MD5 checksums for the available packages:
Package MD5 checksum (6.4.2 February release) Ubuntu 16 b0dbecaa974ca08245dda55d53b6fe9b Ubuntu 18 a5192e8b0734db80d6b7c2b98a170c58 RedHat Enterprise Linux (RHEL) 7Oracle Enterprise Linux (OL) 7 c1537855dcfe7a7cedf9031ce01e2b9b RedHat Enterprise Linux (RHEL) 8Oracle Enterprise Linux (OL) 8 Rocky Enterprise Linux a24dc749d6dcb5df2162d7a41791c7aa This version offers:
Extended validation of client certificates via mTLS (mutual TLS) full subject support
Support for default restrictive permissions when using publish/subscribe commands and ACLs (access control lists)</description></item><item><title>Redis Enterprise Software release notes 6.2.18 (September 2022)</title><link>/rs/release-notes/rs-6-2-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-2-18/</guid><description>Redis Enterprise Software version 6.2.18 is now available!
This version of Redis Enterprise Software offers:
RedisJSON on Active-Active General Availability Database connection auditing Private key encryption Active-Active support for memory usage command crdb-cli improvements Compatibility with open source Redis v6.2.6 Additional enhancements and fixes The following table shows the MD5 checksums for the available packages:
Package MD5 Checksum (6.2.18-70 January release) Ubuntu 16 69d2d2c71232adb15cebf29308ac54da Ubuntu 18 22e0637107a32ccb96a704abe9650adf RedHat Enterprise Linux (RHEL) 7Oracle Enterprise Linux (OL) 7 e14fcf6973418602f2b64a55a0bc8374 RedHat Enterprise Linux (RHEL) 8Oracle Enterprise Linux (OL) 8 Rocky Enterprise Linux f61d0d8f0bb5ad90a470482d6575eb27 Features and enhancements General Availability of Active-Active databases with RedisJSON Active-Active databases now support Index, query, and full-text search of nested JSON documents when combining RedisJSON with RediSearch.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.8-1 (October 2020)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-8-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-8-1/</guid><description>The Redis Enterprise K8s 6.0.8-1 release is a major release on top of 6.0.6-24 providing support for the latest Redis Enterprise Software release 6.0.8-28 and includes several enhancements (including OpenShift 4.5 and Kubernetes 1.18 support) and bug fixes.
Overview This release of the operator provides:
New features New support K8s distributions and platforms Various bug fixes To upgrade your deployment to this latest release, see &amp;ldquo;Upgrade a Redis Enterprise cluster (REC) on Kubernetes&amp;rdquo;.</description></item><item><title>Redis Enterprise Software release notes 6.2.12 (August 2022)</title><link>/rs/release-notes/rs-6-2-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-2-12/</guid><description>Redis Enterprise Software version 6.2.12 is now available!
This version of Redis Enterprise Software offers:
OCSP stapling of the server proxy certificate Password and session configuration settings via the admin console Compatibility with open source Redis v6.2.6 Support for Red Hat Enterprise Linux (RHEL) v8.6 Additional enhancements and fixes The following table shows the MD5 checksums for the available packages.
Package MD5 Checksum Ubuntu 16 e702c906f200940e06ef031e6b8006d9 Ubuntu 18 7ea70067e8828b59336380df087fe03d RedHat Enterprise Linux (RHEL) 7Oracle Enterprise Linux (OL) 7 8ffda6186f70354b9d10c1ce43938c3c RedHat Enterprise Linux (RHEL) 8Oracle Enterprise Linux (OL) 8 334fe7979a7376b28fcf48913403bfb7 Features and enhancements Server side OCSP Stapling</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.6-24 (August 2020)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-6-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-6-24/</guid><description>The Redis Enterprise K8s 6.0.6-24 release is a maintenance release on top of 6.0.6-23 providing support for the latest Redis Enterprise Software release 6.0.6-39 and includes several bug fixes.
Overview This release of the operator provides:
Various bug fixes To upgrade your deployment to this latest release, see &amp;ldquo;Upgrade a Redis Enterprise cluster (REC) on Kubernetes&amp;rdquo;.
Images Redis Enterprise - redislabs/redis:6.0.6-39 or redislabs/redis:6.0.6-39.rhel7-openshift Operator - redislabs/operator:6.0.6-24 Services Rigger - redislabs/k8s-controller:6.0.6-24 or redislabs/services-manager:6.</description></item><item><title>Redis Enterprise Software Release Notes 6.2.10 (February 2022)</title><link>/rs/release-notes/rs-6-2-10-february-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-2-10-february-2022/</guid><description>Redis Enterprise Software version 6.2.10 is now available!
The following table shows the MD5 checksums for the available packages.
Package MD5 Checksum Ubuntu 16 531cea69a58fbc1125bc5f76ba01da7f Ubuntu 18 ec9ac6e0111dc85605d3b98e83f50150 RedHat Enterprise Linux (RHEL) 7Oracle Enterprise Linux (OL) 7 2f7572caab9600417ef8b4ee474d6768 RedHat Enterprise Linux (RHEL) 8Oracle Enterprise Linux (OL) 8 377a539ee050515e1e0640dec1e04129 K8s Ubuntu 099192416a70a12790535bdcd78a6e87 K8s RHEL f267abe81770ddf36f022232f4c2cb2e Features and enhancements Upgrade the Redis Enterprise infrastructure to Python v3.9.
Red Hat Enterprise Linux (RHEL) v8.</description></item><item><title>Redis Enterprise Software Release Notes 6.2.8 (October 2021)</title><link>/rs/release-notes/rs-6-2-8-october-2021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-2-8-october-2021/</guid><description>Redis Enterprise Software version 6.2.8 is now available!
Features and enhancements This version features:
Support for Red Hat Linux Edition (RHEL) 8 You can now set the start time for 12- and 24-hour backups Compatibility with version of open source Redis 6.2.3 (starting with Redis Enterprise Software v6.2.4) Compatibility with the security fixes of the latest open source Redis 6.2.6 Enhancements and bug fixes Version changes Prerequisites and notes You can upgrade to v6.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.6-23 (August 2020)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-6-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-6-23/</guid><description>The Redis Enterprise K8s 6.0.6-23 release is a major release on top of 6.0.6-11 providing support for the latest Redis Enterprise Software release 6.0.6-39 and includes several enhancements (including Rancher support) and bug fixes.
Overview This release of the operator provides:
Support for the Redis Enterprise Software release 6.0.6-39 Support for Rancher Backup options in the database custom resource and controller Alert option in the database custom resource and controller UBI images Various other enhancements and bug fixes To upgrade your deployment to this latest release, see &amp;ldquo;Upgrade a Redis Enterprise cluster (REC) on Kubernetes&amp;rdquo;.</description></item><item><title>Redis Enterprise Software Release Notes 6.2.4 (August 2021)</title><link>/rs/release-notes/rs-6-2-4-august-2021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-2-4-august-2021/</guid><description>Redis Enterprise Software version 6.2.4 is now available!
This version offers:
Encryption of all communications within cluster nodes Security enhancements Bug fixes Compatibility with the latest version of open source Redis 6.2.3 Version changes Prerequisites and notes You can upgrade to v6.2.4 from Redis Enterprise Software v6.0 and later.
Keep the following in mind:
Upgrades from versions earlier than v6.0 are not supported
The new internode encryption feature requires port 3342 to be open on all machines in the cluster.</description></item><item><title>Redis Enterprise Software Release Notes 6.0.20 (April 2021)</title><link>/rs/release-notes/rs-6-0-20-april-2021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-0-20-april-2021/</guid><description>Redis Enterprise Software version 6.0.20 is now available! This version includes the following new features and improvements:
A new integration for LDAP authentication and authorization into RS role-based access controls (RBAC). You can now use LDAP to authorize access to the admin console and to authorize database access.
An enhanced clients mutual authentication mechanism, adding the ability to authenticate client connections using a Certificate Authority (CA).
Support of Redis eviction policies on Active-Active Redis databases.</description></item><item><title>Redis Enterprise Software Release Notes 6.0.12 (January 2021)</title><link>/rs/release-notes/rs-6-0-12-january-2021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-0-12-january-2021/</guid><description>Redis Enterprise Software (RS) 6.0.12 is now available! This version includes the following new features and improvements:
Synchronization can now be distributed across the nodes of Active-Active or Active-Passive databases You can disable several internal RS services to free up more memory User accounts can have multiple passwords to allow for password rotation Dependencies are automatically installed when you add modules to a cluster Envoy replaces NGINX for internal cluster administration Automatic recovery of the syncer processs from out-of-memory (preview mode) And other functional and stability improvements.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.6-11 (July 2020)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-6-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-6-11/</guid><description>The Redis Enterprise K8s 6.0.6-11 release is a maintenance release on top of 6.0.6-6 providing support for the latest Redis Enterprise Software release 6.0.6-39 and includes several bug fixes.
Overview This release of the operator provides:
Support for the Redis Enterprise Software release 6.0.6-39 Various bug fixes To upgrade your deployment to this latest release, see &amp;ldquo;Upgrade a Redis Enterprise cluster (REC) on Kubernetes&amp;rdquo;.
Images Redis Enterprise - redislabs/redis:6.0.6-39 or redislabs/redis:6.</description></item><item><title>Redis Enterprise Software Release Notes 6.0.8 (September 2020)</title><link>/rs/release-notes/rs-6-0-8-september-2020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-0-8-september-2020/</guid><description>Redis Enterprise Software (RS) 6.0.8 is now available! This version includes the new RediSearch 2.0 module, open source Redis 6.0.5, changes the rladmin tool for upgrading modules, and includes bug fixes.
Version information Upgrade instructions Follow these instructions for upgrading to RS 6.0.8 from RS 5.4.0 and above. For Active-Active deployments, this release requires that you upgrade the CRDB featureset version.
End of life End of Life (EOL) for Redis Enterprise Software 6.</description></item><item><title>Configuration</title><link>/ri/using-redisinsight/configuration/</link><pubDate>Thu, 14 Jun 2018 03:49:29 +0530</pubDate><guid>/ri/using-redisinsight/configuration/</guid><description>RedisInsight configuration allows to update your redis instance&amp;rsquo;s config with its easy to use config editor. Each of the keys shown corresponds to an entry in the Redis configuration file. Most of the configuration settings can be applied without restarting the server. Also, it comes with an option of rewriting your current settings to your redis.conf file so that these settings remain even when server restarts.
Configurations are also separated into categories like- Advanced config, Security, Lua Scripting etc.</description></item><item><title>Redis Enterprise Software Release Notes 6.0 (May 2020)</title><link>/rs/release-notes/rs-6-0-may-2020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-6-0-may-2020/</guid><description>Redis Enterprise Software (RS) 6.0 is now available! This new version bundles open-source Redis 6, implements enhanced Access Control List (ACL) capabilities using Role-Based Access Control (RBAC) for database access, and adds the support of Redis Streams on Active-Active databases.
Version information Upgrade instructions Follow these instructions for upgrading to RS 6.0 from RS 5.4.0 and above. For Active-Active deployments, this release requires that you upgrade the CRDB featureset version.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 6.0.6-6 (June 2020)</title><link>/kubernetes/release-notes/previous-releases/k8s-6-0-6-6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-6-0-6-6/</guid><description>Redis Enterprise for Kubernetes 6.0.6-6 is now available. This release includes Redis Enterprise (RS) version 6.0 and introduces new features, improvements, and bug fixes.
Overview This release of the operator provides:
Support for the Redis Enterprise Software release 6.0.6 Includes the new database and admission controllers Various improvements and bug fixes To upgrade your deployment to this latest release, see &amp;ldquo;Upgrade a Redis Enterprise cluster (REC) on Kubernetes&amp;rdquo;.
Note: If you are running Active-Active (CRBD) databases on a previous release, do not upgrade to 6.</description></item><item><title>Configure distributed synchronization</title><link>/rs/databases/active-active/synchronization-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/synchronization-mode/</guid><description>Replicated databases, such as Replica Of and Active-Active databases, use proxy endpoints to synchronize database changes with the databases on other participating clusters.
To improve the throughput and lower the latency for synchronization traffic, you can configure a replicated database to use distributed synchronization where any available proxy endpoint can manage synchronization traffic.
Every database by default has one proxy endpoint that manages client and synchronization communication with the database shards, and that proxy endpoint is used for database synchronization.</description></item><item><title>FAQs</title><link>/ri/faqs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ri/faqs/</guid><description>Here are some frequently asked questions about RedisInsight.
General What is RedisInsight? RedisInsight is a browser based graphical user interface (GUI) for Redis databases.
With it, you can:
Browse
View real time metrics from redis Create tabular views from your redis keys and export data in different formats Perform CRUD (create, read, update, and delete) operations using the web based command-line interface (CLI). Visualize and update data from Streams, RedisGraph, RediSearch and RedisTimeSeries.</description></item><item><title>Create and manage cloud accounts</title><link>/rc/api/examples/manage-cloud-accounts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/api/examples/manage-cloud-accounts/</guid><description>You can use the Redis Enterprise Cloud REST API to create and manage cloud accounts.
These examples use the cURL utility; you can use any REST client to work with the Redis Cloud REST API.
Create a cloud account To create a cloud account, use the POST /v1/cloud-accounts endpoint.
The created cloud account is defined by a JSON document that is sent as the body of the request.
POST https://[host]/v1/cloud-accounts { &amp;#34;accessKeyId&amp;#34;: &amp;#34;$ACCESS_KEY_ID&amp;#34;, &amp;#34;accessSecretKey&amp;#34;: &amp;#34;$ACCESS_SECRET_KEY&amp;#34;, &amp;#34;consolePassword&amp;#34;: &amp;#34;$CONSOLE_PASSWORD&amp;#34;, &amp;#34;consoleUsername&amp;#34;: &amp;#34;$CONSOLE_USERNAME&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;My new Cloud Account&amp;#34;, &amp;#34;provider&amp;#34;: &amp;#34;AWS&amp;#34;, &amp;#34;signInLoginUrl&amp;#34;: &amp;#34;https://$AWS_ACCOUNT_IDENTIFIER.</description></item><item><title>Control node selection</title><link>/kubernetes/memory/node-selection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/memory/node-selection/</guid><description>Many Kubernetes cluster deployments have different kinds of nodes that have different CPU and memory resources available for scheduling cluster workloads. Redis Enterprise for Kubernetes has various abilities to control the scheduling Redis Enterprise cluster node pods through properties specified in the Redis Enterprise cluster custom resource definition (CRD).
A Redis Enterprise cluster (REC) is deployed as a StatefulSet which manages the Redis Enterprise cluster node pods. The scheduler chooses a node to deploy a new Redis Enterprise cluster node pod on when:</description></item><item><title>Redis on Flash (RoF) quick start</title><link>/rs/databases/redis-on-flash/rof-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/redis-on-flash/rof-quickstart/</guid><description>This page guides you through a quick setup of a Redis on Flash cluster with a single node for testing and demo purposes.
For production environments, you can find more detailed installation instructions in the install and setup section.
The steps to set up a Redis Enterprise Software cluster using Redis on Flash with a single node are:
Install Redis Enterprise Software or run it in a Docker container. Set up a Redis Enterprise Software cluster with Redis on Flash.</description></item><item><title>Register events</title><link>/modules/redisgears/register-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/register-events/</guid><description>You can register RedisGears functions to run when certain events occur in a Redis database.
Register on events To register RedisGears functions to run on an event, your code needs to:
Pass KeysReader to a GearsBuilder object.
Call the GearsBuilder.register() function.
Pass the eventTypes parameter to either:
The register function for Python.
The KeysReader object for Java.
For more information and examples of event registration, see:
Python references:
KeysReader
GearsBuilder.register()</description></item><item><title>Remove a cluster node</title><link>/rs/clusters/remove-node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/remove-node/</guid><description>There are various reasons why you may want to remove a node in Redis Enterprise Software:
You no longer need the extra capacity, meaning you want to permanently remove the node. You would like to replace a faulty node with a healthy node. You would like to replace a healthy node with a different node. The following section explains how each of these actions can be achieved, as well as their impact and considerations.</description></item><item><title>Redis with Ruby</title><link>/rs/references/client_references/client_ruby/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_ruby/</guid><description>To use Redis with Ruby, you need a Ruby Redis client. The following sections demonstrate the use of redis-rb, a Ruby client library for Redis. Additional Ruby clients for Redis can be found under the Ruby section of the Redis Clients page.
Install redis-rb See redis-rb&amp;rsquo;s README file for installation instructions.
Method 1 Use gem to install redis-rb:
gem install redis Method 2 Add the following line to your Gemfile:</description></item><item><title>Enable VPC peering</title><link>/rc/security/vpc-peering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/vpc-peering/</guid><description>VPC peering uses private IP addresses to allow network connections between two virtual private clouds (VPCs).
You can connect your VPC in the Redis Cloud subscription to the VPC of your application. This lets your application connect securely to your Redis Cloud database using VPC peering to optimize the performance of your application.
Note: VPC peering is available only with Flexible or Annual subscriptions. It is not supported for Fixed or Free subscriptions.</description></item><item><title>Redis Enterprise Software Release Notes 5.6.0 (April 2020)</title><link>/rs/release-notes/rs-5-6-0-april-2020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-5-6-0-april-2020/</guid><description>Redis Enterprise Software (RS) 5.6.0 is now available. This major version release includes:
Improved installation process to be customizable Support for the HyperLogLog data type in Active-Active databases RedisJSON support in Redis on Flash databases Support for Redis OSS Cluster API for Active-Active and Replica Of databases Replica HA enabled by default for Active-Active databases Cloud backup locations support Support for Red Hat Enterprise Linux version 7.7, 7.8 Additional enhancements, and minor bug fixes Information Upgrade Follow these instructions for upgrading to RS 5.</description></item><item><title>Redis Enterprise Software Release Notes 5.4.14 (February 2020)</title><link>/rs/release-notes/legacy-release-notes/rs-5-4-14-february-2020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-4-14-february-2020/</guid><description>Redis Enterprise Software (RS) 5.4.14 is now available. This release bundles OSS Redis 5.0.7 and includes new Redis Modules versions, several enhancements, and bug fixes.
Overview Follow these instructions for upgrading to RS 5.4.14 from RS 5.0.2 and above.
New features Version 5.0.7 of OSS Redis is merged into RS 5.4.14. The following GA releases of Redis Modules are bundled in RS 5.4.14: RedisBloom, version 2.2.1 (updated, release notes) RedisGraph, version 2.</description></item><item><title>Redis Enterprise Software Release Notes 5.4.10 (December 2019)</title><link>/rs/release-notes/legacy-release-notes/rs-5-4-10-december-2019/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-4-10-december-2019/</guid><description>Redis Enterprise Software (RS) 5.4.10 is now available. This release includes an improved synchronization mechanism for Active-Active Redis and Replica-of, several enhancements, and bug fixes.
Overview Follow these instructions for upgrading to RS 5.4.10 from RS 5.0 and above.
New features Synchronization mechanism in Active-Active Redis and Replica-of RS 5.4.10 incorporates the improved Redis synchronization mechanism (PSYNC2) for Active-Active Redis (CRDB) and Replica-of.
As a result, failure scenarios in any A-A replica (and the source database of Replica-of), require only partial synchronization between the cross-region replicas instead of full synchronization that can be costly in time and bandwidth.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 5.4.14-2 (March 2020)</title><link>/kubernetes/release-notes/previous-releases/k8s-5-4-14-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-5-4-14-2/</guid><description>Overview The Redis Enterprise K8s 5.4.14-2 release is a maintenance release providing support for the latest Redis Enterprise Software release 5.4.14 and includes bug fixes as well as the following notable changes:
Support for K8s 1.16 This release now correctly handles the API deprecations, and API version changes that K8s release 1.16 introduced.
Support for OpenShift 4.3; improved OLM support The release now supports OpenShift 4.3. A new operator version is now available in OpenShift&amp;rsquo;s Operator Hub and now includes a more comprehensive base template as well as references to documentation and support.</description></item><item><title>Redis Enterprise Software Release Notes 5.4.6 (July 2019)</title><link>/rs/release-notes/legacy-release-notes/rs-5-4-6-july-2019/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-4-6-july-2019/</guid><description>Redis Enterprise Software (RS) 5.4.6 is now available. This release includes the latest version of Redis 5 (5.0.5), bundles the GA release of the new RedisTimeSeries module, and adds other enhancements and bug fixes.
Overview Follow these instructions for upgrading to RS 5.4.6 from RS 5.0 and above. If you have a version older than 5.0, you must first upgrade to version 5.2 (or at least 5.0).
New features Time series New GA release of the RedisTimeSeries (version v1.</description></item><item><title>Redis Enterprise for Kubernetes Release Notes 5.4.10-8 (January 2020)</title><link>/kubernetes/release-notes/previous-releases/k8s-5-4-10-8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/release-notes/previous-releases/k8s-5-4-10-8/</guid><description>Redis Enterprise for Kubernetes 5.4.10-8 is now available. This release includes Redis Enterprise (RS) version 5.4.10-22 and introduces new feature and bug fixes.
Overview This is a maintenance release providing support for the Redis Enterprise Software release 5.4.10 and includes multiple enhancements.
Follow these instructions for upgrading to this Kubernetes operator release.
New features All-in-one deployment bundle and documentation enhancements - This release is the easiest to deploy yet, with a new quick start guide and an all-in-one file bundle for deploying the Redis Enterprise Operator.</description></item><item><title>Redis Enterprise Software Release Notes 5.4.4 (June 2019)</title><link>/rs/release-notes/legacy-release-notes/rs-5-4-4-june-2019/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-4-4-june-2019/</guid><description>Redis Enterprise Software (RS) 5.4.4 is now available. This release enables the functionality of Active-Active Redis (CRDB) combined with RoF (Redis on Flash), supports the creation of Redis databases with multiple modules, and adds other enhancements and bug fixes.
Overview Follow these instructions for upgrading to RS 5.4.4 from RS 5.0 and above. If you have a version older than 5.0, you must first upgrade to version 5.2 (or at least 5.</description></item><item><title>Redis Enterprise Software Release Notes 5.4.2 (April 2019)</title><link>/rs/release-notes/legacy-release-notes/rs-5-4-2-april-2019/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-4-2-april-2019/</guid><description>Redis Enterprise Software (RS) 5.4.2 is now available. This release improves the compatibility of Active-Active Redis (CRDB) with open source Redis, adds SFTP and Mount Points as backup destinations, email alerting and a number of other enhancements and bug fixes.
Overview Follow these instructions for upgrading to RS 5.4.2 from RS 5.0 and above. If you have a version older than 5.0, you must first upgrade to version 5.2 (or at least 5.</description></item><item><title>Redis Enterprise Software Release Notes 5.5 Preview (April 2019)</title><link>/rs/release-notes/rs-5-5-preview-april-2019/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/rs-5-5-preview-april-2019/</guid><description>Redis Enterprise Software (RS) 5.5 Preview Edition is now available.
RS 5.5 is a preview version that includes all the capabilities of Redis Enterprise 5.4, plus support for creation of Redis databases with multiple modules and support for these modules:
RediSearch (GA) RedisGraph (GA) RedisBloom (GA) RedisJSON (GA) RedisAI (Preview Version) RedisTimeSeries (Preview Version) RedisGears (Preview Version) New features RS 5.5 lets you create Redis databases with multiple Redis modules.</description></item><item><title>Redis Enterprise Software Release Notes 5.4 (December 2018)</title><link>/rs/release-notes/legacy-release-notes/rs-5-4-december-2018/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-4-december-2018/</guid><description>Redis Enterprise Software (RS) 5.4 is now available. RS 5.4 adds support for Redis 5.0 (GA) with the new Redis Streams data type.
Overview You can upgrade to RS 5.4 from RS 5.0 and above according to the upgrade instructions. If you have a version older than 5.0, you should first upgrade to version 5.2 (or at least 5.0).
New features Redis 5.0 GA - Redis Streams RS 5.4 adds support for Redis 5.</description></item><item><title>RedisInsight v1.11, Oct 2021</title><link>/ri/release-notes/v1.11.0/</link><pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.11.0/</guid><description>1.11.1 (January 2022) This is the maintenance release of RedisInsight 1.11 (v1.11.1)!
Fixes: Core: Fixed a warning about urllib version deprecation. ACL errors are now show in pretty format while in edit database screen. Fixed unnecessary warning about segment when there&amp;rsquo;s no internet connection. RediSearch: Fix index tool support for v2.2.5. Bulk actions: Added support for cross-slot bulk action execution. Fixed a bug where there&amp;rsquo;s a failure when a malformed UTF-8 characters are present in the key.</description></item><item><title>Redis Enterprise Software 5.2.2 (August 2018)</title><link>/rs/release-notes/legacy-release-notes/rs-5-2-2-august-2018/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-2-2-august-2018/</guid><description>Redis Enterprise Software (RS) 5.2.2 is now available.
RS 5.2.2 is a minor version that includes important fixes and minor enhancements to Redis Enterprise 5.2.
Overview If you are upgrading from a previous version, make sure to review the upgrade instructions before beginning the upgrade process. You can upgrade to RS 5.2.2 from RS 4.5 and above. If you have a version older than 4.5, you should first upgrade to version 5.</description></item><item><title>Collect logs</title><link>/kubernetes/logs/collect-logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/logs/collect-logs/</guid><description>The Redis Enterprise cluster (REC) log collector script (log_collector.py) creates and fills a directory with the relevant logs for your environment. These logs will help the support team with troubleshooting.
As of version 6.2.18-3, the log collector tool has two modes:
restricted collects only resources and logs created by the operator and Redis Enterprise deployments This is the default for versions 6.2.18-3 and later all collects everything from your environment This is the default mode for versions 6.</description></item><item><title>RedisInsight v1.10, March 2021</title><link>/ri/release-notes/v1.10.0/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.10.0/</guid><description>1.10.1 (April 2021) This is the maintenance release of RedisInsight 1.10 (v1.10.1)!
Fixes: Core: Fixed a bug where launching RedisInsight on macOS mojave (10.14.6) would log out the user. Fixed two major container vulnerability. (CVE-2021-24031, CVE-2021-24032 and CVE-2020-36242) Select existing installation path on upgrades in Windows. CLI: Added support for RAW mode (--raw in redis-cli). Browser: Fixed a bug where a number in redis string datatype is treated as a JSON .</description></item><item><title>Redis Enterprise Software Release Notes 5.3 BETA (July 2018)</title><link>/rs/release-notes/legacy-release-notes/rs-5-3-beta-july-2018/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-3-beta-july-2018/</guid><description>Redis Enterprise Software (RS) 5.3 is now available.
RS 5.3 is a preview version that includes all the capabilities of Redis Enterprise 5.2, plus support for Redis 5.0 with the new data type, which is called Streams.
New features RS 5.3 adds support for Redis 5.0 and is based on its latest Release Candidate (RC3). Redis 5.0 exposes the new Redis Streams data type, which provides a super fast in-memory abstraction of an append-only log.</description></item><item><title>Delete custom resources</title><link>/kubernetes/re-clusters/delete_custom_resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-clusters/delete_custom_resources/</guid><description>Delete a database (REDB) To delete a database managed by the Redis Enterprise Kubernetes operator, run kubectl delete redb &amp;lt;your-db-name&amp;gt; from your K8s cluster.
When you delete a database, your data and the REDB custom resource are also deleted.
Delete a Redis Enterprise cluster (REC) To delete a Redis Enterprise cluster managed by the operator:
Delete all the databases in your cluster.
Run kubectl delete rec &amp;lt;your-rec-name&amp;gt; from your K8s cluster.</description></item><item><title>Deploy with kustomize</title><link>/kubernetes/deployment/using-kustomize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/deployment/using-kustomize/</guid><description>Kustomize is a template-free, Kubernetes native way to customize application configuration. Kustomize is available in kubectl by running kubectl apply -k. Kustomize provides a declarative approach to configuration management that you can use with a variety of deployment tools for Kubernetes.
Motivation for use with Redis Enterprise Our operator is deployed onto your target Kubernetes cluster via a bundle or automation tools like OpenShift’s OLM. The standard practice is to deploy this bundle without any configuration changes as the specific settings are part of how our product has been designed.</description></item><item><title>Redis with Drupal 7</title><link>/rs/references/client_references/client_drupal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/client_references/client_drupal/</guid><description>Install Redis for Drupal Follow these steps to install Redis as a cache for Drupal:
Install Predis under sites/all/libraries/predis. Download and install the Drupal Redis module. Configure Drupal To configure Drupal to use Redis as a cache, add the following lines to your settings.php file with the specified changes:
$conf[&amp;#39;redis_client_interface&amp;#39;] = &amp;#39;Predis&amp;#39;; $conf[&amp;#39;redis_client_host&amp;#39;] = &amp;#39;hostname&amp;#39;; $conf[&amp;#39;redis_client_port&amp;#39;] = port; $conf[&amp;#39;redis_client_password&amp;#39;] = &amp;#39;password&amp;#39;; $conf[&amp;#39;lock_inc&amp;#39;] = &amp;#39;sites/all/modules/contrib/redis/redis.lock.inc&amp;#39;; $conf[&amp;#39;cache_backends&amp;#39;][] = &amp;#39;sites/all/modules/contrib/redis/redis.autoload.inc&amp;#39;; $conf[&amp;#39;cache_default_class&amp;#39;] = &amp;#39;Redis_Cache&amp;#39;; In line 2, replace hostname with your database&amp;rsquo;s hostname or IP address.</description></item><item><title>Memory Optimization for Redis</title><link>/ri/memory-optimizations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ri/memory-optimizations/</guid><description>RedisInsight can monitor the health of your databases. Here are some tips to increase memory efficiency in Redis.
To get the best performance from your databases, ensure you are using the latest version of Redis.
Developer best practices Avoid dynamic Lua script Refrain from generating dynamic scripts, which can cause your Lua cache to grow and get out of control. Memory is consumed as scripts are loaded. Memory is consumed:</description></item><item><title>Nagios integration with Redis Enterprise Software</title><link>/rs/clusters/monitoring/nagios-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/monitoring/nagios-plugin/</guid><description>The Redis Enterprise Software (RS) Nagios plugin enables you to monitor the status of RS related objects and alerts. The RS alerts can be related to the cluster, nodes, or databases.
The alerts that can be monitored via Nagios are the same alerts that can be configured in the RS UI in the Settings ­&amp;gt; Alerts page, or the specific Database ­&amp;gt; Configuration page.
All alert configurations (active / not active, setting thresholds, etc&amp;rsquo;) can only be done through the RS UI, they cannot be configured in Nagios.</description></item><item><title>Manage pod stability</title><link>/kubernetes/memory/pod-stability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/memory/pod-stability/</guid><description>Kubernetes clusters manage the allocation of system resources and can evict pods to release system resources. Here are some ways that you can configure the Redis Enterprise node pods to maintain pod stability:
Guaranteed quality of service A running pod has a quality of service measure assigned to it that is one of three quality of service classes: Guaranteed, Burstable, and Best Effort. You can assure the Guaranteed class is assigned to the Redis Enterprise node pods by following the right guidelines.</description></item><item><title>Replace a faulty cluster node</title><link>/rs/clusters/replace-node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/replace-node/</guid><description>If a node in your Redis Enterprise Software cluster is faulty, its status appears as Down in the Status column of the Nodes page, and in the Cluster &amp;gt; Configuration page.
To replace a faulty node:
Acquire a new node that is identical to the old node, install and configure Redis Enterprise Software on it per the install instructions.
Note: If you are using Redis on Flash, you must make sure the required flash storage is set up on this new node.</description></item><item><title>Syncer process</title><link>/rs/databases/active-active/syncer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/syncer/</guid><description>Syncer process Each node in a cluster containing an instance of an Active-Active database hosts a process called the syncer. The syncer process:
Connects to the proxy on another participating cluster Reads data from that database instance Writes the data to the local cluster&amp;rsquo;s primary(master) shard Some replication capabilities are also included in open source redis.
The primary (also known as master) shard at the top of the primary-replica tree creates a replication ID.</description></item><item><title>RedisInsight v1.9, January 2021</title><link>/ri/release-notes/v1.9.0/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.9.0/</guid><description>1.9.0 (January 2021) This is the General Availability Release of RedisInsight 1.9 (v1.9.0)!
Headlines: RedisGraph tools is getting improved with better UX and new interactions capabilities Adding the ability to configure a database, by just using its direct URL to auto fill all required fields CLI is now providing ability to configure your favorite key-bindings between Emacs or Vim Full Details: Core: Support for configuration of Redis where the number of databases goes over the default 16.</description></item><item><title>Redis Enterprise Software Release Notes 5.2 (June 2018)</title><link>/rs/release-notes/legacy-release-notes/rs-5-2-june-2018/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rs-5-2-june-2018/</guid><description>Redis Enterprise Software (RS) 5.2 is now available. Key features include new data types and casual consistency for active-active (also known as the Redis CRDT or CRDB Conflict-free Replicated Database), as well as enhanced security features.
Overview If you are upgrading from a previous version, make sure to review the upgrade instructions before beginning the upgrade process. You can upgrade to RS 5.2 from RS 4.5 and above. If you have a version older than 4.</description></item><item><title>RedisInsight v1.8, November 2020</title><link>/ri/release-notes/v1.8.0/</link><pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.8.0/</guid><description>1.8.3 (January 2021) This is a maintenance release of RedisInsight 1.8 (v1.8.3)!
This fixes the crash on MacOS Big Sur (11.1) for the MacOS package. RedisInsight is supported on Mac hardware with Intel chips, but not for Mac hardware with the Apple M1 (ARM) chip.
1.8.2 (24 December 2020) This is the maintenance release of RedisInsight 1.8 (v1.8.2)!
Fixes: Browser: Improved handling of large strings, lists, hashes, sets and sorted sets.</description></item><item><title>Redis Enterprise Software 5.0.2 (2018 March)</title><link>/rs/release-notes/legacy-release-notes/release-notes-redis-enterprise-software-v5-0-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/release-notes-redis-enterprise-software-v5-0-2/</guid><description>Redis Enterprise Software 5.0.2 is now available. Key features include functional and performance updates for CRDB, changes to module deployment, and general fixes.
Overview If you are upgrading from a previous version, make sure to review the upgrade instructions before beginning the upgrade process.
You can upgrade to RS 5.0.2 from RS 4.4.2 and above. If you have a version older than 4.4.2, you must first upgrade to at least 5.</description></item><item><title>Connect the Prometheus operator to Redis Enterprise for Kubernetes</title><link>/kubernetes/re-clusters/connect-prometheus-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/re-clusters/connect-prometheus-operator/</guid><description>To collect metrics data from your databases and Redis Enterprise cluster (REC), you can connect your Prometheus server to an endpoint exposed on your REC. Redis Enterprise for Kubernetes creates a dedicated service to expose the prometheus port (8070) for data collection. A custom resource called ServiceMonitor allows the Prometheus operator to connect to this port and collect data from Redis Enterprise.
Prerequisites Before connecting Redis Enterprise to Prometheus on your Kubernetes cluster, make sure you&amp;rsquo;ve done the following:</description></item><item><title>Use a private registry for container images</title><link>/kubernetes/deployment/container-images/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/deployment/container-images/</guid><description>Redis Enterprise Software, its Kubernetes operator, and the Service Rigger are all distributed as separate container images. Your Kubernetes deployment will pull these images as needed. You can control where these images are pulled from within the operator deployment and also via the Redis Enterprise custom resources.
In general, images for deployments that do not have a registry domain name (e.g., gcr.io or localhost:5000) are pulled from the default registry associated with the Kubernetes cluster.</description></item><item><title>RediSearch 2.6 release notes</title><link>/modules/redisearch/release-notes/redisearch-2.6-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-2.6-release-notes/</guid><description>Requirements RediSearch v2.6.4 requires:
Minimum Redis compatibility version (database): 6.0.16 Minimum Redis Enterprise Software version (cluster): 6.2.8 v2.6.4 (December 2022) This is a maintenance release for RediSearch 2.6.
Update urgency: MODERATE: Program an upgrade of the server, but it&amp;rsquo;s not urgent.
Details:
Bug fixes:
#3289 Potential crash when querying multiple fields (MOD-4639) #3279 Potential crash when querying using wildcard * on TAG field (MOD-4653) Improvements:
#3256 Support IPv6 on cluster set command #3194 Add the query dialects that are in use to FT.</description></item><item><title>RedisInsight v1.7, September 2020</title><link>/ri/release-notes/v1.7.0/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.7.0/</guid><description>1.7.1 (October 2020) Maintenance release for RedisInsight 1.7 including bug fixes and enhancements.
Headlines: Core: New public health-check API to make monitoring deployments easier. Display progress information during memory analysis. Full details: Enhancements and bug fixes
Core: Fixed support for TLS in Redis Cluster databases. Application name is properly capitalized on MacOSX. Fixed update notifications on Docker - Now links to Docker Hub page and provides instructions for updating. Memory Analysis: Information about the current stage of analysis is now displayed while the analysis runs.</description></item><item><title>Redis Enterprise Pack 5.0 Release Notes (November 2017)</title><link>/rs/release-notes/legacy-release-notes/redis-enterprise-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/redis-enterprise-5/</guid><description>Redis Enterprise Software 5.0 is now available. Key features include Geo-Distributed Active-Active Conflict-free Replicated Databases (CRDB), LDAP integration, Redis Module integration, and support for the Redis Cluster API.
Overview If you are upgrading from a previous version, make sure to review the upgrade instructions before beginning the upgrade process.
You can upgrade to RS 5.0 from RS 4.4.2 and above. If you have a version older than this, you must first upgrade to at least 4.</description></item><item><title>Manage Redis Enterprise cluster (REC) credentials</title><link>/kubernetes/security/manage-rec-credentials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/security/manage-rec-credentials/</guid><description>Redis Enterprise for Kubernetes uses a custom resource called RedisEnterpriseCluster to create a Redis Enterprise cluster (REC). During creation it generates random credentials for the operator to use. The credentials are saved in a Kubernetes (K8s) secret. The secret name defaults to the name of the cluster.
Note: This procedure is only supported for operator versions 6.0.20-12 and above. Retrieve the current username and password The credentials can be used to access the Redis Enterprise admin console or the API.</description></item><item><title>RediSearch 2.4 release notes</title><link>/modules/redisearch/release-notes/redisearch-2.4-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-2.4-release-notes/</guid><description>Requirements RediSearch v2.4.16 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.0 v2.4.16 (November 2022) This is a maintenance release for RediSearch 2.4
Update urgency: HIGH: There is a critical bug that may affect a subset of users. Upgrade!
Details:
Bug fixes:
#2962 Crash upon AOF preload - Use local GC context in periodic callback (MOD-3951) #2863 High CPU Utilization - Change MAX_LEV_DISTANCE to 4 (MOD-3563) #3041, #3063, #3051, #3143 Several memory leaks (MOD-4121, MOD-4252) #3119 Crash on intersect iterator GetCriteriaTester (MOD-4200) #3128 Filter rules must be reevaluated per index per document (MOD-4207) #3127 Fix assertion failure on wrong result counting, which leads to a crash (MOD-4214) #3171 Missing implementation of NumericRangeIterator_OnReopen which lead to crash (MOD-4255) #3191 Wrong query iterator casting which resulted in 100% CPU utilization (MOD-4290) #3197 Release failed to create temporary indices on the main thread (MOD-4388) #2981 Double freeing in iterators of hybrid queries resulting in crash (MOD-4411) #3161 Latency used to increase over time when combining INKEYS and wildcard query (MOD-4343) v2.</description></item><item><title>RedisInsight v1.6, June 2020</title><link>/ri/release-notes/v1.6.0/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.6.0/</guid><description>1.6.3 (July 2020) Maintenance release for RedisInsight 1.6 including bug fixes and enhancements.
Headlines: Mac application is now getting notarized which simplifies the installation process on OS X Fixed the resize of the keys explorer allowing to see long keys Fixed filtering of keys in the browser with the filter capability in the browser Full details: Enhancements and bug fixes
Core: Mac application is properly signed and notarized on Apple services.</description></item><item><title>Redis Enterprise Pack 4.5 Release Notes (May 2017)</title><link>/rs/release-notes/legacy-release-notes/redis-pack-4-5-0-may-2017/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/redis-pack-4-5-0-may-2017/</guid><description>If you are upgrading from a previous version, make sure to review the upgrade instructions before beginning the upgrade process.
You can upgrade to this version from any 4.4 version. If you have a version older than 4.4 you must first upgrade to 4.4 or higher, and only then upgrade to this version.
New features The new discovery service with supportfor Redis Sentinel API The Discovery Service provides an IP-based connection management service used when connecting to Redis Enterprise Pack databases.</description></item><item><title>Manage Redis Enterprise cluster (REC) certificates</title><link>/kubernetes/security/manage-rec-certificates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/security/manage-rec-certificates/</guid><description>By default, Redis Enterprise Software for Kubernetes generates TLS certificates for the cluster during creation. These self-signed certificates are generated on the first node of each Redis Enterprise cluster (REC) and are copied to all other nodes added to the cluster. For the list of of certificates used by Redis Enterprise Software and the traffic they encrypt, see the certificates table.
To install and use your own certificates with Kubernetes on your Redis Enterprise cluster, they need to be stored in secrets.</description></item><item><title>RediSearch 2.2 release notes</title><link>/modules/redisearch/release-notes/redisearch-2.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-2.2-release-notes/</guid><description>Requirements RediSearch v2.2.10 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.0 v2.2.10 (March 2022) This is a maintenance release for RediSearch 2.2.
Update urgency: MODERATE: Program an upgrade of the server, but it&amp;rsquo;s not urgent.
Details:
Improvements:
Mac M1 support #2645 Ignore NULL values in JSON documents on indexing (prior behaviour would ignore the entire document) #2623 Improved Multi Sortby error message for FT.SEARCH Bug fixes:</description></item><item><title>RedisInsight v1.5, May 2020</title><link>/ri/release-notes/v1.5.0/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.5.0/</guid><description>This is the General Availability Release of RedisInsight 1.5 (v1.5.0)!
Headlines Added beta support for RedisGears module Added multi-line query editing for RediSearch, RedisGraph and Timeseries Improved support of Redis 6 ACLs Full details: Features
Core: Improved support for Redis 6 managing ACL permissions for each different capabilities Gears: Beta support for Redis Gears module Explore the latest executed functions and analyze the results or errors Manage registered functions and get execution summary Code, build and execute functions RediSearch: Multi-line for building queries RedisGraph: Multi-line for building queries Timeseries: Multi-line for building queries Bug Fixes:</description></item><item><title>RLEC 4.4 Release Notes (December 2016)</title><link>/rs/release-notes/legacy-release-notes/rlec-4-4-dec-2016/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rlec-4-4-dec-2016/</guid><description>If you are upgrading from a previous version, make sure to review the upgrade instructions before beginning the upgrade process.
You can upgrade to this version from any 4.3 version. If you have a version older than 4.3 you must first upgrade to 4.3 and only then upgrade to this version.
New features Databases can now be configured to have multiple proxies for improved performance. Note that when you upgrade the cluster to this version and then upgrade existing databases, the databases will be updated to use the Single proxy policy and Dense shard placement policy.</description></item><item><title>Add client certificates</title><link>/kubernetes/security/add-client-certificates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/security/add-client-certificates/</guid><description>For each client certificate you want to use with your database, you need to create a Kubernetes secret to hold it. You can then reference that secret in your Redis Enterprise database (REDB) custom resource spec.
Create a secret to hold the new certificate Create the secret config file with the required fields shown below.
apiVersion: v1 kind: Secret type: Opaque metadata: name: &amp;lt;client-cert-secret&amp;gt; namespace: &amp;lt;your-rec-namespace&amp;gt; data: cert: &amp;lt;client-certificate&amp;gt; Apply the file to create the secret resource.</description></item><item><title>RediSearch 2.0 release notes</title><link>/modules/redisearch/release-notes/redisearch-2.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-2.0-release-notes/</guid><description>Requirements RediSearch v2.0.13 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.0 v2.0.15 (December 2021) This is a maintenance release for RediSearch 2.0.
Update urgency: MODERATE - Program an upgrade of the server, but it&amp;rsquo;s not urgent.
Details:
Bug fixes: #2388 Garbage Collection (GC) for empty ranges in numeric index #2409 Introduction of FORK_GC_CLEAN_NUMERIC_EMPTY_NODES true module argument to enable #2388 (off by default) #325 Used Redis allocator in hiredis (RSCoordinator) #2362 Crash on empty field name v2.</description></item><item><title>RedisGraph 2.8 release notes</title><link>/modules/redisgraph/release-notes/redisgraph-2.8-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/release-notes/redisgraph-2.8-release-notes/</guid><description>Requirements RedisGraph v2.8.24 requires:
Minimum Redis compatibility version (database): 6.2.0 Minimum Redis Enterprise Software version (cluster): 6.2.8 v2.8.24 (February 2023) This is a maintenance release for RedisGraph 2.8.
Update urgency: HIGH: There is a critical bug that may affect a subset of users. Upgrade!
Details:
Bug fixes:
#2777, #2841 Potential crash when sending queries from multiple connections and timeout is not 0 #2844 Potential partial results when same parametrized query is running from multiple connections #2739, #2774 Paths with exact variable length &amp;gt;1 are not matched Improvements:</description></item><item><title>RedisInsight v1.4, April 2020</title><link>/ri/release-notes/v1.4.0/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.4.0/</guid><description>This is the General Availability Release of RedisInsight 1.4 (v1.4.0)!
Headlines Support for Redis 6, Redis Enterprise 6 and ACLs Improve CLI capabilities with removed command restrictions Full screen support in Graph, TimeSeries and RediSearch Full details: Features
Core: Added support for Redis 6 + RE6 and authentication using ACL Added Full screen support for Graph, TimeSeries and RediSearch. Improved UI consistency (colors and styles) in Graph and Timeseries CLI: Removed the command restrictions, unless a command is specifically blacklisted.</description></item><item><title>RLEC 4.3.0-230 Release Notes (August 2, 2016)</title><link>/rs/release-notes/legacy-release-notes/rlec-4-3-aug-2016/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rlec-4-3-aug-2016/</guid><description>If you are upgrading from a previous version, make sure to review the [upgrade instructions](/rs/installing-upgrading/upgrading.md&amp;quot; &amp;gt;}}) before running through the upgrade process.
You can upgrade to this version from any 4.2 version. If you have a version older than 4.2 you should first upgrade to 4.2 and only then upgrade to this version.
New features Various improvements to internal performance and stability were implemented. RLEC Flash functionality added. For additional details, refer to Redis on Flash and contact support@redislabs.</description></item><item><title>RediSearch 1.6 release notes</title><link>/modules/redisearch/release-notes/redisearch-1.6-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-1.6-release-notes/</guid><description>Requirements RediSearch v1.6.16 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 v1.6.16 (June 2021) This is a maintenance release for version 1.6.
Update urgency: MODERATE - Program an upgrade of the server, but it&amp;rsquo;s not urgent.
Details:
Bug fix:
#2018: FT.ADD REPLACE leaves fields from the previous document that are not included in the new document #647 #1193 v1.6.15 (February 2021) This is a maintenance release for version 1.</description></item><item><title>RedisTimeSeries 1.8 release notes</title><link>/modules/redistimeseries/release-notes/redistimeseries-1.8-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redistimeseries/release-notes/redistimeseries-1.8-release-notes/</guid><description>Requirements RedisTimeSeries v1.8.5 requires:
Minimum Redis compatibility version (database): 6.0.16 Minimum Redis Enterprise Software version (cluster): 6.2.8 v1.8.5 (January 2023) This is a maintenance release for RedisTimeSeries 1.8.
Update urgency: HIGH: There is a critical bug that may affect a subset of users. Upgrade!
Details:
Bug fixes:
#1388 Potential crash when upgrading from v1.6 to 1.8 if there are compactions with min or max aggregation (MOD-4695) v1.8.4 (December 2022) This is a maintenance release for RedisTimeSeries 1.</description></item><item><title>RedisGraph 2.4 release notes</title><link>/modules/redisgraph/release-notes/redisgraph-2.4-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/release-notes/redisgraph-2.4-release-notes/</guid><description>Requirements RedisGraph v2.4.14 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.8 v2.4.14 (May 2022) This is a maintenance release for RedisGraph 2.4.
Update urgency: LOW: No need to upgrade unless there are new features you want to use.
Details:
Bug fixes:
#2072, #2081 CRLF sequences embedded in strings no longer trigger a protocol error when being emitted Improvements:
#2102 New load-time configuration option NODE_CREATION_BUFFER - see documentation (MOD-2348) Note: For Redis Enterprise users who want to upgrade to this patch, this version requires being on version 6.</description></item><item><title>RedisBloom 2.4 release notes</title><link>/modules/redisbloom/release-notes/redisbloom-2.4-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisbloom/release-notes/redisbloom-2.4-release-notes/</guid><description>Requirements RedisBloom v2.4.3 requires:
Minimum Redis compatibility version (database): 6.0.16 Minimum Redis Enterprise Software version (cluster): 6.2.8 v2.4 GA (v2.4.3) (November 2022) This is the General Availability release of RedisBloom 2.4.
Highlights RedisBloom 2.4 introduces a new sketch data structure: t-digest.
What&amp;rsquo;s new in 2.4 t-digest is a probabilistic data structure for estimating quantiles based on a data stream or a large dataset of floating-point values. It can be used to answer the following questions:</description></item><item><title>RedisInsight v1.3, March 2020</title><link>/ri/release-notes/v1.3.0/</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.3.0/</guid><description>RedisInsight v1.3.1 release notes (April 2020) This is the maintenance release of RedisInsight 1.3 (v1.3.1).
Update urgency: Medium
Headlines Fixed support for connecting to Redis database on TLS-enabled hosts with SNI enforcement. Details Bug Fixes: Core: Fixed support for connecting to Redis database on TLS-enabled hosts with SNI enforcement. Memory Analysis Fixed wrong display of table columns in Memory Analyzer view. Browser Fixed bug where the TTL on string and RedisJSON keys was being reset on edit.</description></item><item><title>RLEC 4.2.1-30 Release Notes (October 18, 2015)</title><link>/rs/release-notes/legacy-release-notes/rlec-4-2-october-2015/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rlec-4-2-october-2015/</guid><description>If you are upgrading from a previous version, make sure to review the upgrade instructions before running through the upgrade process.
New features rsyslog logging support - RLEC now writes by default to syslog, which enables monitoring through rsyslog. Profile support for tuning cloud and non-cloud environments &amp;ndash; enables the administrator to configure RLEC to run with different performance profiles that are optimized for either cloud or non-cloud environments. For additional details, refer to the Performance optimization section.</description></item><item><title>RediSearch 1.4 release notes</title><link>/modules/redisearch/release-notes/redisearch-1.4-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-1.4-release-notes/</guid><description>Requirements RediSearch v1.4.28 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 v1.4.28 (May 2020) This is a maintenance release for version 1.4.
Headlines:
This release improves overall stability and provides fixes for issues found after the previous release. Details:
Bugfixes: #1218 Potential crash when running without concurrency and using the cursor API. v1.4.27 (April 2020) Headlines:
This release improves overall stability and provides fixes for issues found after the previous release.</description></item><item><title>RedisTimeSeries 1.6 release notes</title><link>/modules/redistimeseries/release-notes/redistimeseries-1.6-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redistimeseries/release-notes/redistimeseries-1.6-release-notes/</guid><description>Requirements RedisTimeSeries v1.6.17 requires:
Minimum Redis compatibility version (database): 6.0.16 Minimum Redis Enterprise Software version (cluster): 6.2.8 v1.6.17 (July 2022) This is a maintenance release for RedisTimeSeries 1.6.
Update urgency: HIGH: There is a critical bug that may affect a subset of users. Upgrade!
Details:
Bug fixes:
#1240 Compaction rules are not saved to RoF (Redis Enterprise) v1.6.16 (June 2022) This is a maintenance release for RedisTimeSeries 1.6.
Update urgency: HIGH: There is a critical bug that may affect a subset of users.</description></item><item><title>RedisBloom 2.2 release notes</title><link>/modules/redisbloom/release-notes/redisbloom-2.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisbloom/release-notes/redisbloom-2.2-release-notes/</guid><description>Requirements RedisBloom v2.2.18 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 v2.2.18 (July 2022) This is a maintenance release for RedisBloom 2.2.
Update urgency: MODERATE: Program an upgrade of the server, but it&amp;rsquo;s not urgent.
Details:
Bug fixes:
#481 CF crashes on expansion 0 #478 BF.INFO reports an inaccurate result about the memory footprint v2.2.17 (June 2022) This is a maintenance release for RedisBloom 2.</description></item><item><title>RedisGraph 2.2 release notes</title><link>/modules/redisgraph/release-notes/redisgraph-2.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/release-notes/redisgraph-2.2-release-notes/</guid><description>Requirements RedisGraph v2.2.16 requires:
Minimum Redis compatibility version (database): 5.0.7 Minimum Redis Enterprise Software version (cluster): 6.0.8 v2.2.16 (April 2021) This is a maintenance release for version 2.2.
Update urgency: Medium
Headlines:
This release improves overall stability and provides fixes for issues found after the previous release. Details:
Enhancements:
#1610 Add module-level configuration for query timeouts #1572 Remove query size limitation from parser #1590 Improve reporting of runtime errors #1596 Run bulk loader commands on a non-blocking thread Performance Improvements:</description></item><item><title>RedisJSON 2.4 release notes</title><link>/modules/redisjson/release-notes/redisjson-2.4-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisjson/release-notes/redisjson-2.4-release-notes/</guid><description>Requirements RedisJSON v2.4.3 requires:
Minimum Redis compatibility version (database): 6.0.16 Minimum Redis Enterprise Software version (cluster): 6.2.18 v2.4.3 (December 2022) This is a maintenance release for RedisJSON 2.4.
Update urgency: MODERATE: Program an upgrade of the server, but it&amp;rsquo;s not urgent.
Details:
Bug fixes:
#890 JSONPath ignores any filter condition beyond the second (MOD-4602) Improvements:
#892 Allow JSON.ARRINDEX with nonscalar values v2.4 GA (v2.4.2) (November 2022) This is the General Availability release of RedisJSON 2.</description></item><item><title>RedisInsight v1.2, January 2020</title><link>/ri/release-notes/v1.2.0/</link><pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate><guid>/ri/release-notes/v1.2.0/</guid><description>RedisInsight v1.2.2 release notes Update urgency: Medium
This is a maintenance release for version 1.2.
Details Bug Fixes: Core: This releases fixes the possible false positive malware issues flagged by certain antivirus vendors introduced by pyinstaller which was reported on reddit. RedisInsight v1.2.1 release notes Update urgency: Medium
This is a maintenance release for version 1.2.
Details Enhancements: Core: Upgrade notifications: When you open RedisInsight, a notification is shown if a new version is available.</description></item><item><title>RLEC 4.0.0-49 Release Notes (June 18, 2015)</title><link>/rs/release-notes/legacy-release-notes/rlec-4-0-june-2015/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rlec-4-0-june-2015/</guid><description>If you are upgrading from a previous version, make sure to review the upgrade instructions before running through the upgrade process.
In addition, when running the install.sh script to upgrade the software, you might be prompted to approve changes to a configuration file named ccs-redis.conf. It is crucial that you choose Yes when asked whether to update this file.
New features Support for Red Hat Enterprise Linux (RHEL) and CentOS 6.</description></item><item><title>RediSearch 1.2 release notes</title><link>/modules/redisearch/release-notes/redisearch-1.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-1.2-release-notes/</guid><description>Requirements RediSearch v1.2.0 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 RediSearch 1.2.0 (June 2018) This version is the last version that I (@dvirsky) will be releasing, and it includes a lot of new cool features, and actually NO bug-fixes over 1.1.0! So long and thanks for all the fish!
New features Aggregation filters As an addition to the aggregation API in FT.AGGREGATE, it is possible to do post-index filtering of the pipeline, using the FILTER keyword.</description></item><item><title>RedisTimeSeries 1.4 release notes</title><link>/modules/redistimeseries/release-notes/redistimeseries-1.4-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redistimeseries/release-notes/redistimeseries-1.4-release-notes/</guid><description>Requirements RedisTimeSeries v1.4.14 requires:
Minimum Redis compatibility version (database): 5.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.12 v1.4.14 (February 2022) This is a maintenance release for RedisTimeSeries 1.4.
Update urgency: MODERATE: Program an upgrade of the server, but it&amp;rsquo;s not urgent.
Bug fixes:
#891, #892 Fixed memory leak in parseCreateArgs when parsing error occurs (MOD-1958) v1.4.13 (November 2021) This is a maintenance release for RedisTimeSeries 1.4.
Update urgency: MODERATE: Program an upgrade of the server, but it&amp;rsquo;s not urgent.</description></item><item><title>RedisGraph 2.0 release notes</title><link>/modules/redisgraph/release-notes/redisgraph-2.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/release-notes/redisgraph-2.0-release-notes/</guid><description>Requirements RedisGraph v2.0.21 requires:
Minimum Redis compatibility version (database): 5.0.7 Minimum Redis Enterprise Software version (cluster): 5.4.11 v2.0.21 (October 2020) This is a maintenance release for version 2.0.
Headlines:
This release improves overall stability and provides fixes for issues found after the previous release. Details:
Minor enhancements:
#1326, #1330 Enable comments in Cypher queries. Bug fixes:
#1338 Update parser to support negative values.
#1319 Replace assertion with runtime error - execution plan building process is unable locate an operation suitable for a filter.</description></item><item><title>RedisBloom 2.0 release notes</title><link>/modules/redisbloom/release-notes/redisbloom-2.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisbloom/release-notes/redisbloom-2.0-release-notes/</guid><description>Requirements RedisBloom v2.0.3 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 v2.0.3 (July 2019) Performance improvements: #95 Top-K - Reduce checks on heap, now only checks if item count is larger than minimum in heap. #95 Top-K - The power of decay was calculated every time. Changed to use a lookup table. Major bug fix: #88 Replication available for newly added Top-K and Count-min sketch Minor bug fixes: #89 Module update broke rdb files #98 Compilation for macOS v2.</description></item><item><title>RedisJSON 2.2 release notes</title><link>/modules/redisjson/release-notes/redisjson-2.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisjson/release-notes/redisjson-2.2-release-notes/</guid><description>Requirements RedisJSON v2.2.0 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.2.18 v2.2.0 (July 2022) A preview of RedisJSON 2.2 is available for Free and Fixed subscription plans in Redis Cloud.
Headlines This release adds support for the JSON data structure as a CRDT (Conflict-free Replicated Data Type) when used with Redis Enterprise Active-Active databases.
Active-Active JSON requires Redis Enterprise Software v6.2.12. Contact your account manager or support to access the preview of RedisJSON 2.</description></item><item><title>RedisInsight v1.1, December 2019</title><link>/ri/release-notes/v1.1.0/</link><pubDate>Fri, 27 Dec 2019 03:49:29 +0000</pubDate><guid>/ri/release-notes/v1.1.0/</guid><description>RedisInsight v1.1.0 release notes (December 2019) Headlines This release improves overall stability and provides fixes for issues found after the previous release. Details Minor Enhancements: Core: Enable mouse wheel support inside the querycard. Browser: Enable enter key press for adding keys in browser RediSearch: Disable HIGHLIGHT markup in JSON view. Browser: Improve error message when database is unreachable Add a reload/refresh button to refresh the value of a key Enable enter key press for adding keys in browser Improve error message for unsupported value types Bug Fixes: RedisGraph: Fix initial node placement in the view.</description></item><item><title>RLEC 0.99.5-24 Release Notes (February 15, 2015)</title><link>/rs/release-notes/legacy-release-notes/rlec-0-99-february-2015/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rlec-0-99-february-2015/</guid><description>If you are upgrading from a previous version, make sure to review the upgrade instructions before running through the upgrade process.
If you are upgrading from version 0.99.5-11:
You must restart the services after the upgrade by running the following command with user root (sudo su). From the operating system&amp;rsquo;s CLI, run the following command: cnm_ctl restart After the upgrade, rladmin status command will report that the databases are from an old version.</description></item><item><title>Application failover with Active-Active databases</title><link>/rs/databases/active-active/develop/app-failover-active-active/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/app-failover-active-active/</guid><description>Active-Active Redis deployments don&amp;rsquo;t have a built-in failover or failback mechanism for application connections. An application deployed with an Active-Active database connects to a replica of the database that is geographically nearby. If that replica is not available, the application can failover to a remote replica, and failback again if necessary. In this article we explain how this process works.
Active-Active connection failover can improve data availability, but can negatively impact data consistency.</description></item><item><title>Cluster-based LDAP authentication</title><link>/rs/security/access-control/ldap/cluster-based-ldap-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/security/access-control/ldap/cluster-based-ldap-authentication/</guid><description>&lt;div class="panel panel-primary panel-warning">&lt;i class="icon-Warning">&lt;/i>
&lt;div class="panel-content">&lt;span class="panel-heading">Warning - &lt;/span>
&lt;div class="panel-body">&lt;p>As of v6.2.12, the features described in this article are &lt;a href="./glossary/#obsolete">obsolete&lt;/a> and have been removed from Redis Enterprise Software.&lt;br/>&lt;br/>&lt;/p>
&lt;p>&lt;a href="./rs/release-notes/rs-6-0-20-april-2021/">Version 6.0.20&lt;/a> introduced a &lt;a href="./rs/security/access-control/ldap/">role-based LDAP integration&lt;/a> that replaced the cluster-based integration described here.&lt;br/>&lt;br/>&lt;/p>
&lt;p>At the time, the earlier integration remained in order to provide a transition period for migration. That period has now passed and the cluster-based integration has been removed.&lt;br/>&lt;br/>&lt;/p>
&lt;p>This article has been archived and will no longer be maintained.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Redis Enterprise Software supports Lightweight Directory Access Protocol (LDAP).&lt;/p></description></item><item><title>Enable internode encryption</title><link>/kubernetes/security/internode-encryption/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/security/internode-encryption/</guid><description>Internode encryption provides added security by encrypting communication between nodes in your Redis Enterprise cluster (REC).
Enable internode encryption in the spec section of your REC custom resource file.
spec: dataInternodeEncryption: true This change will apply to all databases created in the REC. You can override the cluster-wide setting for individual databases.
Edit your Redis Enterprise database (REDB) custom resource file to disable internode encryption for only that database.
spec: dataInternodeEncryption: false To learn more about internode encryption, see Internode encryption for Redis Enterprise Software.</description></item><item><title>RediSearch 1.1 release notes</title><link>/modules/redisearch/release-notes/redisearch-1.1-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-1.1-release-notes/</guid><description>Requirements RediSearch v1.1.0 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 RediSearch 1.1.0 (April 2018) This is a major version (we almost named it 2.0), which includes months of work, mostly on the brand new aggregations engine.
Aggregations Aggregations are a way to process the results of a search query, group, sort and transform them - and extract analytic insights from them. Much like aggregation queries in other databases and search engines, they can be used to create analytics report, or to perform Faceted Search style queries.</description></item><item><title>RedisBloom 1.1 release notes</title><link>/modules/redisbloom/release-notes/redisbloom-1.1-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisbloom/release-notes/redisbloom-1.1-release-notes/</guid><description>Requirements RedisBloom v1.1.1 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 RedisBloom 1.1.1 (21 February 2019) Update version to 1.1.1
RedisBloom 1.1.0 (12 February 2019) Release of 1.1.0</description></item><item><title>RedisGraph 1.2 release notes</title><link>/modules/redisgraph/release-notes/redisgraph-1.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/release-notes/redisgraph-1.2-release-notes/</guid><description>Requirements RedisGraph v1.2.2 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 v1.2.2 (May 2019) Update urgency: Medium This is a maintenance release for version 1.2.
This release improves overall stability and provides fixes for issues found after the previous release.
v1.2.0 (April 2019) This is a major release for RedisGraph. Compared to previous release 1.0.15:
Added functionality #452 Support multiple relationships of the same type R connecting two nodes #392 Lexer elides escape characters in string creation: support for property values with ' or &amp;quot; Performance improvements #442 Seek graph entity by id: MATCH (n) WHERE ID(n) = 5 RETURN n #422 MATCH (n) RETURN COUNT(n) is now O(1) #421 and #459 Lazy loading of matrices on subsequent writes of relationships and nodes #399 Single transpose of matrices Minor Bugfixes: #456 Memory leaks #439 When label doesn&amp;rsquo;t exists, the node count should return 0 #439 #435 Referencing non existing properties #435 Compared to 1.</description></item><item><title>RedisGears 1.2 release notes</title><link>/modules/redisgears/release-notes/redisgears-1.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/release-notes/redisgears-1.2-release-notes/</guid><description>Requirements RedisGears v1.2.5 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.12 v1.2.5 (July 2022) This is a maintenance release for RedisGears 1.2.
Update urgency: MODERATE : Program an upgrade of the server, but it&amp;rsquo;s not urgent.
Details:
Bug fixes:
#792, #798 Execution was triggered infinitely when trimming is turned off. #791, #796 Stop triggering executions during pause even on failure. #794, #797 Use PythonInstallationDir configuration to find the virtual environment location on Redis Enterprise.</description></item><item><title>RedisTimeSeries 1.2 release rotes</title><link>/modules/redistimeseries/release-notes/redistimeseries-1.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redistimeseries/release-notes/redistimeseries-1.2-release-notes/</guid><description>Requirements RedisTimeSeries v1.2.7 requires:
Minimum Redis compatibility version (database): 5.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.12 v1.2.7 (June 2020) This is a maintenance release for version 1.2.
Details:
Bugfixes:
#414 Crash when a query had an empty label (foo,) v1.2.6 (May 2020) This is a maintenance release for version 1.2.
Details:
Minor enhancements:
#403 Support for multi-value filtering in TS.MGET and TS.MRANGE. Bugfixes:
#378 Using snprintf to ensure the same precision of floating-point value replies.</description></item><item><title>RedisAI 1.2 release notes</title><link>/modules/redisai/release-notes/redisai-1.2-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisai/release-notes/redisai-1.2-release-notes/</guid><description>Requirements RedisAI v1.2.7 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.2.2 1.2.7 (June 2022) This is a maintenance release for RedisAI 1.2.
Update urgency: MODERATE.
Headlines:
This release improves overall stability and provides fixes for issues found after the previous release. Details:
Minor enhancements:
#918, #924 Add AI.CONFIG GET sub-command #914, #915, #917 Backends update - TF 2.8, PyTorch 1.11, ONNXRuntime 1.11 #904 Enable saving model/script run statistics when run by a low-level API (by using RedisGears integration in particular) and retrieving the statistics with the AI.</description></item><item><title>RedisJSON 2.0 release notes</title><link>/modules/redisjson/release-notes/redisjson-2.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisjson/release-notes/redisjson-2.0-release-notes/</guid><description>Requirements RedisJSON v2.0.11 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.0 v2.0.11 (July 2022) This is a maintenance release for RedisJSON 2.0. Update urgency: LOW - No need to upgrade unless there are new features you want to use.
Details:
Improvements:
Minor documentation changes and internal build improvements v2.0.9 (June 2022) This is a maintenance release for RedisJSON 2.0.
Update urgency: LOW: No need to upgrade unless there are new features you want to use.</description></item><item><title>RedisInsight v1.0, November 2019</title><link>/ri/release-notes/v1.0.0/</link><pubDate>Tue, 01 Oct 2019 03:49:29 +0000</pubDate><guid>/ri/release-notes/v1.0.0/</guid><description>RedisInsight v1.0.0 release notes (November 2019) This is the initial release after Redis acquired RDBTools.</description></item><item><title>Redis Enterprise Software product lifecycle</title><link>/rs/installing-upgrading/product-lifecycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/product-lifecycle/</guid><description>Redis Enterprise Software product lifecycle fully reflects our subscription agreement. However, for any discrepancy between the two policies, the subscription agreement prevails.
Redis Enterprise modules follow the modules lifecycle.
Release numbers Redis uses a four-place numbering scheme to designate released versions of its products. The format is “Major1.Major2.Minor-Build”.
Major sections of the version number represents fundamental changes and additions in capabilities to Redis Enterprise Software. The Major1 and Major2 part of the version number are incremented based on the size and scale of the changes in each release.</description></item><item><title>RediSearch 1.0 release notes</title><link>/modules/redisearch/release-notes/redisearch-1.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisearch/release-notes/redisearch-1.0-release-notes/</guid><description>Requirements RediSearch v1.0.10 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 RediSearch 1.0.10 (April 2018) This is a bug-fix release with some stability fixes, a few processing bug fixes, and a few small additions:
Fixes Fixed false positives in NOT iterator (5fe948e)
Prevent crashing with uninitialized sorting vectors (96f2473)
Fixed overflow bug in triemap, and limited tag length to 4KB (09e682f)
Fixed false positives in intersects and negative intersects (4998772)</description></item><item><title>RedisJSON 1.0 release notes</title><link>/modules/redisjson/release-notes/redisjson-1.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisjson/release-notes/redisjson-1.0-release-notes/</guid><description>Requirements RedisJSON v1.0.8 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 v1.0.8 (August 2021) This is a maintenance release for version 1.0.
Update urgency: LOW - No need to upgrade unless there are new features you want to use.
Details:
Enhancements:
#257 Support inter shards TLS capability Bug fixes:
#282 Change JSON.DEBUG first key index to 2 v1.0.7 (December 2020) This is a maintenance release for version 1.</description></item><item><title>RedisTimeSeries 1.0 release rotes</title><link>/modules/redistimeseries/release-notes/redistimeseries-1.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redistimeseries/release-notes/redistimeseries-1.0-release-notes/</guid><description>Requirements RedisTimeSeries v1.0.3 requires:
Minimum Redis compatibility version (database): 5.0.0 Minimum Redis Enterprise Software version (cluster): 5.4.0 v1.0.3 (September 2019) Update urgency: Medium
This is a maintenance release for version 1.0.
This release improves overall stability and provides fixes for issues found after the previous release.
Main features:
#143 Standard Deviation for Aggregations #163 TS.RANGE and TS.MRANGE can limit results via optional COUNT flag #161 Support for ARM architectures #160 Optional TIMESTAMP in TS.</description></item><item><title>RedisAI 1.0 release notes</title><link>/modules/redisai/release-notes/redisai-1.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisai/release-notes/redisai-1.0-release-notes/</guid><description>Requirements RedisAI v1.0.2 requires:
Minimum Redis compatibility version (database): 5.0.7 Minimum Redis Enterprise Software version (cluster): 5.4.11 v1.0.2 (October 2020) This is a maintenance release for version 1.0.
Headlines:
This release improves overall stability and provides fixes for issues found after the previous release.
Details:
Minor updates:
#383 Enable AI.SCRIPTRUN inside AI.DAGRUN #395 Add support for variadic arguments to AI.SCRIPTRUN #400 Low level API additions for use in other modules (e.</description></item><item><title>RedisGears 1.0 release notes</title><link>/modules/redisgears/release-notes/redisgears-1.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgears/release-notes/redisgears-1.0-release-notes/</guid><description>Here&amp;rsquo;s what&amp;rsquo;s changed recently in RedisGears.
To learn more, see the linked pull requests.
Requirements RedisGears v1.0.9 requires:
Minimum Redis compatibility version (database): 6.0.0 Minimum Redis Enterprise Software version (cluster): 6.0.0 v1.0.9 (January 2022) This is a maintenance release for RedisGears 1.0
Update urgency: LOW : No need to upgrade unless there are new features you want to use.
Details:
Improvements:
#652 Support for keys space notifications coming from other modules.</description></item><item><title>RedisGraph 1.0 release notes</title><link>/modules/redisgraph/release-notes/redisgraph-1.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisgraph/release-notes/redisgraph-1.0-release-notes/</guid><description>Requirements RedisGraph v1.0.15 requires:
Minimum Redis compatibility version (database): 4.0.0 Minimum Redis Enterprise Software version (cluster): 5.0.0 v1.0.15 (March 2019) GraphBLAS 2.3.0 release notes WITH clause: Allows query parts to be chained together, piping the results from one to be used as starting points or criteria of the next. ref p.78 Enhancements #393 Discard distinct when performing aggregation Minor bugfixes #359 Adding ORDER BY changes the number of returned hits when used in combination with LIMIT #363 Remove graph entity property when it is set to null #386 Return updated values on queries that modify data v1.</description></item><item><title>RedisBloom 1.0 release notes</title><link>/modules/redisbloom/release-notes/redisbloom-1.0-release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/modules/redisbloom/release-notes/redisbloom-1.0-release-notes/</guid><description>Requirements RedisBloom v1.0.3 requires:
Minimum Redis compatibility version (database): 4.0 Minimum Redis Enterprise Software version (cluster): 5.0 v1.0.3 (December 2017) This contains a single fix, issue #19.
From this version onwards, EXISTS/MEXISTS returns 0 if the (Redis) key does not exist in the database. Earlier versions returned an error.
v1.0.2 (November 2017) This fixes a build issue (fixed s3 config in circle yaml).
v1.0.0 (September 2017) This is the first GA release of ReBloom.</description></item><item><title>View Java Serialized Objects in Redis</title><link>/ri/using-redisinsight/java-serialized-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ri/using-redisinsight/java-serialized-objects/</guid><description>RedisInsight detects java serialized objects and converts them to a nicely formatted JSON object, along with the fully qualified class name.
It doesn&amp;rsquo;t matter what you store. Whether it is a hibernate object, or a user session or a plain old java object, RedisInsight reverse-engineers and show it to you nicely.
Just for fun, we tried out how such an object would look without the formatting.</description></item><item><title>Troubleshooting RedisInsight</title><link>/ri/using-redisinsight/troubleshooting/</link><pubDate>Thu, 31 Oct 2019 10:49:29 +0000</pubDate><guid>/ri/using-redisinsight/troubleshooting/</guid><description>When RedisInsight doesn&amp;rsquo;t behave as expected, use these steps to see what the problem is.
For additional configuration options, such as changing the default port, go to: https://docs.redislabs.com/latest/ri/installing/configurations/
Logs To get detailed information about errors in RedisInsight, you can review the log files with the .log extension in:
Docker: In the /db/ directory inside the container. Mac: In the /Users/&amp;lt;your-username&amp;gt;/.redisinsight directory. Windows: In the C:\Users\&amp;lt;your-username&amp;gt;\.redisinsight directory. Linux: In the /home/&amp;lt;your-username&amp;gt;/.redisinsight directory.</description></item><item><title/><link>/_header/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/_header/</guid><description/></item><item><title/><link>/embeds/backup-locations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/backup-locations/</guid><description>FTP server Before you choose to backup to an FTP server, make sure that:
The RS cluster has network connectivity to the FTP server. The user that you specify in the FTP server location has read and write priviledges. To backup to an FTP server, enter the FTP server location in the format:
ftp://user:password@host&amp;lt;:custom_port&amp;gt;/path/ For example: ftp://username:password@10.1.1.1/home/backups/
SFTP server Before you choose to backup to an SFTP server, make sure that:</description></item><item><title/><link>/embeds/cluster-dns-embed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/cluster-dns-embed/</guid><description>By default, Redis Enterprise Software deployments use DNS to communicate between nodes. You can also use the Discovery Service, which uses IP addresses to connect and complies with the Redis Sentinel API supported by open source Redis.
Each node in a Redis Enterprise cluster includes a small DNS server to manage internal functions, such as high availability, automatic failover, automatic migration, and so on. Nodes should only run the DNS server included with the software.</description></item><item><title/><link>/embeds/cluster-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/cluster-setup/</guid><description>In the web browser on the host machine, go to https://localhost:8443 to see the Redis Enterprise Software admin console.
Note: If your browser displays a certificate error, you can safely proceed. If the server does not show the login screen, try again after a few minutes. Choose Setup to begin configuring the node.
In the Node Configuration settings, enter a cluster FQDN such as `cluster.local&amp;rsquo; and then select Next.</description></item><item><title/><link>/embeds/compatible-with-oss/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/compatible-with-oss/</guid><description>Yes we are. Not only are we are the home of Redis, but most of the core engineers on open source Redis also work here. We contribute extensively to the open source Redis project. As a rule, we adhere to the open source’s specifications and make every effort to update our service with its latest versions.
That said, the following Redis features are not applicable in the context of our service:</description></item><item><title/><link>/embeds/create-db/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/create-db/</guid><description>In your web browser, open the admin console of the cluster that you want to connect to in order to create the { { &amp;lt; field &amp;ldquo;db_type&amp;rdquo; &amp;gt; } }. By default, the address is: `https://&amp;lt;RS_address&amp;gt;:8443` In databases, click .
If you do not have any databases on the node, you are prompted to create a database.</description></item><item><title/><link>/embeds/create-subscription-next-steps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/create-subscription-next-steps/</guid><description>The subscription shows a &amp;ldquo;Pending&amp;rdquo; status and takes approximately 10 to 15 minutes to provision. You receive an email when your subscription is ready to use.
Next steps We recommend that you set up VPC peering with your application VPC. VPC peering lets you route traffic between your VPCs using private IP addresses for improved security and performance.
You can also edit these subscription settings after the subscription is created:</description></item><item><title/><link>/embeds/discovery-clients/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/discovery-clients/</guid><description>Redis-py (Python redis client) HiRedis (C redis client) Jedis (Java redis client) Ioredis (NodeJS redis client) If you need to use another client, consider using Sentinel Tunnel to discover the current Redis master with Sentinel and create a TCP tunnel between a local port on the client and the master.</description></item><item><title/><link>/embeds/docker-memory-limitation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/docker-memory-limitation/</guid><description>If you cannot activate the database because of a memory limitation, make sure that Docker has enough memory allocated in the Docker Settings.</description></item><item><title/><link>/embeds/hardware-requirements-embed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/hardware-requirements-embed/</guid><description>The hardware requirements for Redis Enterprise Software are different for development and production environments.
In a development environment, you can test your application with a live database.
If you want to test your application under production conditions, use the production environment requirements.
In a production environment you must have enough resources to handle the load on the database and recover from failures.
Development environment You can build your development environment with non-production hardware, such as a laptop, desktop, or small VM or instance, and with these hardware requirements:</description></item><item><title/><link>/embeds/how-many-databases-cloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/how-many-databases-cloud/</guid><description>Each subscription plan (except for our free plans) enables multiple dedicated databases, each running in a dedicated process and in a non-blocking manner.
A 1GB plan for example, enables 16 dedicated databases.</description></item><item><title/><link>/embeds/how-many-databases-software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/how-many-databases-software/</guid><description>The number of databases is unlimited. The limiting factor is the available memory in the cluster, and the number of shards in the subscription.
Note that the impact of the specific database configuration on the number of shards it consumes. For example:
Enabling database replication, without enabling database clustering, creates two shards: a master shard and a replica shard. Enabling database clustering creates as many database shards as you configure. Enabling both database replication and database clustering creates double the number of database shards you configure.</description></item><item><title/><link>/embeds/oss-cluster-api-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/oss-cluster-api-intro/</guid><description>Redis OSS Cluster API reduces access times and latency with near-linear scalability. The Redis OSS Cluster API provides a simple mechanism for Redis clients to know the cluster topology.
Clients must first connect to the master node to get the cluster topology, and then they connect directly to the Redis proxy on each node that hosts a master shard.
Note: You must use a client that supports the OSS cluster API to connect to a database that has the OSS cluster API enabled.</description></item><item><title/><link>/embeds/port-configurations-embed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/port-configurations-embed/</guid><description>To make sure that Redis Enterprise Software (RS) servers can pass necessary communications between them, we recommend that all RS servers have all of the ports listed here open between them.
By default, the cluster assigns ports in the range of 10,000 - 19,999 to database endpoints. If you assign a specific port for a database when you create it, even outside of this range, the cluster only verifies that the assigned port is not already in use.</description></item><item><title/><link>/embeds/reset-password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/reset-password/</guid><description>To reset a user password from the CLI, run:
rladmin cluster reset_password &amp;lt;username&amp;gt;
You are asked to enter and confirm the new password.</description></item><item><title/><link>/embeds/sample/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/sample/</guid><description> heading 1 heading 2 heading 3 cell 1x1 cell 1x2 cell 1x3 cell 2x1 cell 2x2 cell 2x3 Example Shortcode Inside an embedded markdown file. Tip - Another example of shortcode inside an embedded file.</description></item><item><title/><link>/embeds/shard-placement-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/shard-placement-intro/</guid><description>In addition to the shard placement policy, considerations that determine shard placement are:
Separation of master and replica shards Available persistence and Redis on Flash (RoF) storage Rack awareness Memory available to host the database when fully populated The shard placement policies are:
dense - Place as many shards as possible on the smallest number of nodes to reduce the latency between the proxy and the database shards; Recommended for Redis on RAM databases to optimize memory resources sparse - Spread the shards across as many nodes in the cluster as possible to spread the traffic across cluster nodes; Recommended for Redis on Flash databases to optimize disk resources When you create a Redis Enterprise Software cluster, the default shard placement policy (dense) is assigned to all databases that you create on the cluster.</description></item><item><title/><link>/embeds/supported-platforms-embed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/supported-platforms-embed/</guid><description>Redis Enterprise Software is supported on several operating systems, cloud environments, and virtual environments.
System requirements Make sure your system meets these requirements:
Only 64-bit operating systems are supported. You must install Redis Enterprise Software directly on the host, not through system cloning. You must install on a clean host with no other applications running so that all RAM is allocated to the operating system and Redis Enterprise Software only. Linux distributions must be installed with at least &amp;ldquo;Minimal Install&amp;rdquo; configuration.</description></item><item><title/><link>/embeds/tls-configuration-procedure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/tls-configuration-procedure/</guid><description>To encrypt Replica Of synchronization traffic, you must also configure encryption for the replica database (the destination).
Encrypt source synchronization traffic To enable TLS for Replica Of communication only on the source database:
In databases, either:
Create a new database. Select a database to configure and then select Edit. Enable TLS.
Select the communication that you want to secure:
For a new database - Require TLS for Replica Of communications only is selected by default.</description></item><item><title/><link>/embeds/tryout-redisai/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/tryout-redisai/</guid><description>Getting started You can connect to RedisAI using any Redis client. Better yet, some languages already have client implementations for RedisAI - the list can be found at the Clients page. RedisAI clients wrap the core API and simplify the interaction with the module.
We&amp;rsquo;ll begin by using the official redis-cli Redis client. If you have it locally installed feel free to use that, but it is also available from the container:</description></item><item><title/><link>/embeds/tryout-redisbloom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/tryout-redisbloom/</guid><description>Trying it out You can play with it a bit using redis-cli:
Connect to redis.
$ redis-cli -p 12543 127.0.0.1:12543&amp;gt; Run these commands:
127.0.0.1:12543&amp;gt; BF.ADD bloom kirk 1) (integer) 1 127.0.0.1:12543&amp;gt; BF.ADD bloom redis 1) (integer) 1 127.0.0.1:12543&amp;gt; BF.EXISTS bloom kirk (integer) 1 127.0.0.1:12543&amp;gt; BF.EXISTS bloom redis (integer) 1 127.0.0.1:12543&amp;gt; BF.EXISTS bloom nonexist (integer) 0 127.0.0.1:12543&amp;gt; BF.EXISTS bloom que? (integer) 0 127.0.0.1:12543&amp;gt; 127.0.0.1:12543&amp;gt; BF.MADD bloom elem1 elem2 elem3 1) (integer) 1 2) (integer) 1 3) (integer) 1 127.</description></item><item><title/><link>/embeds/tryout-redisearch-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/tryout-redisearch-2/</guid><description>Creating indexes Let&amp;rsquo;s create a new index called &amp;ldquo;database_idx&amp;rdquo;. When you define the index, you must pass in the structure of the data you are adding to the index. In this example, we have four fields: title (TEXT), body (TEXT), url (TEXT) and visits (NUMERIC), with the title field having a higher weight than the others (5.0).
Connect to Redis (replace 12543 with the port number your RediSearch is running on).</description></item><item><title/><link>/embeds/tryout-redisgraph/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/tryout-redisgraph/</guid><description>Give it a try After you load RedisGraph, you can interact with it using redis-cli.
Here we&amp;rsquo;ll quickly create a small graph representing a subset of motorcycle riders and teams taking part in the MotoGP league. Once created, we&amp;rsquo;ll start querying our data.
With redis-cli Connect to redis.
$ redis-cli -p 12543 127.0.0.1:12543&amp;gt; Run these commands:
127.0.0.1:12543&amp;gt; GRAPH.QUERY MotoGP &amp;#34;CREATE (:Rider {name:&amp;#39;Valentino Rossi&amp;#39;})-[:rides]-&amp;gt;(:Team {name:&amp;#39;Yamaha&amp;#39;}), (:Rider {name:&amp;#39;Dani Pedrosa&amp;#39;})-[:rides]-&amp;gt;(:Team {name:&amp;#39;Honda&amp;#39;}), (:Rider {name:&amp;#39;Andrea Dovizioso&amp;#39;})-[:rides]-&amp;gt;(:Team {name:&amp;#39;Ducati&amp;#39;})&amp;#34; 1) (empty list or set) 2) 1) Labels added: 2 2) Nodes created: 6 3) Properties set: 6 4) Relationships created: 3 5) &amp;#34;Query internal execution time: 0.</description></item><item><title/><link>/embeds/tryout-redistimeseries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/tryout-redistimeseries/</guid><description>Quick start with redis-cli After you set up RedisTimeSeries, you can interact with it using redis-cli.
Here we&amp;rsquo;ll create a time series representing sensor temperature measurements. After you create the time series, you can send temperature measurements. Then you can query the data for a time range on some aggregation rule.
With redis-cli Connect to redis.
$ redis-cli -p 12543 127.0.0.1:12543&amp;gt; Run these commands:
127.0.0.1:12543&amp;gt; TS.CREATE temperature RETENTION 60 LABELS sensor_id 2 area_id 32 OK 127.</description></item><item><title/><link>/embeds/tryout-redsigears/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/tryout-redsigears/</guid><description/></item><item><title/><link>/embeds/what-is-redis-enterprise/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/embeds/what-is-redis-enterprise/</guid><description>Redis has enhanced open source Redis with a technology layer that encapsulates open source Redis, while fully supporting all its commands, data structures and modules. It adds exceptional flexibility, stable high performance and unmatched resilience, as well as multiple deployment choices (public and private clouds, on-premises, hybrid, RAM-Flash combination), topology (active-active, active-passive, active-replica) and support for very large dataset sizes. This enhanced and exponentially more powerful database platform is Redis Enterprise.</description></item><item><title>RLEC 0.99.5-11 Release Notes (January 5, 2015)</title><link>/rs/release-notes/legacy-release-notes/rlec-0-99-5-11-january-2015/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/release-notes/legacy-release-notes/rlec-0-99-5-11-january-2015/</guid><description>New features Initial release, everything is new!
Changes Initial release, no changes!
Fixed issues None.
Known issues Issue: When taking a node offline or removing a node, if the node being taken offline or removed is currently serving as the web server for the web browser being used to view the management UI, the management UI appears down while the node is down. Workaround: If you are using the cluster name in order to connect to the management UI in the browser, and the cluster name is registered in your external DNS or you are using the mDNS option, then the DNS entries will be updated to point to another node in the cluster after a few seconds and the UI will open properly.</description></item><item><title>Manage account settings</title><link>/rc/accounts/account-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/accounts/account-settings/</guid><description>To review or manage the settings associated with your Redis Cloud account, sign in to the admin console and then select Account Settings from the menu.
This displays the Account Settings screen:
The available tabs depend on your subscription type and may include:
The Account tab displays basic information associated with your account, including general info, address details, time zone setting, security settings, and provider integration details.
The Cloud Account tab is displayed for Flexible (or Annual) subscriptions hosted on Amazon Web Services (AWS).</description></item><item><title>Action object</title><link>/rs/references/rest-api/objects/action/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/action/</guid><description>The cluster allows you to invoke general maintenance actions such as rebalancing or taking a node offline by moving all of its entities to other nodes.
Actions are implemented as tasks in the cluster. Every task has a unique task_id assigned by the cluster, a task name which describes the task, a status, and additional task-specific parameters.
The REST API provides a simplified interface that allows callers to invoke actions and query their status without a specific task_id.</description></item><item><title>Actions requests</title><link>/rs/references/rest-api/requests/actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/actions/</guid><description>Method Path Description GET /v1/actions Get all actions GET /v1/actions/{uid} Get a single action Get all actions GET /v1/actions Get the status of all actions (executing, queued, or completed) on all entities (clusters, nodes, and databases). This API tracks long-lived API requests that return either a task_id or an action_uid.
Required permissions Permission name view_status_of_cluster_action Request Example HTTP request GET /actions Response Returns a JSON array of action objects and an array of state-machine objects.</description></item><item><title>Cluster actions requests</title><link>/rs/references/rest-api/requests/cluster/actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/actions/</guid><description>Method Path Description GET /v1/cluster/actions Get the status of all actions GET /v1/cluster/actions/{action} Get the status of a specific action POST /v1/cluster/actions/{action} Initiate a cluster-wide action DELETE /v1/cluster/actions/{action} Cancel action or remove action status Get all cluster actions GET /v1/cluster/actions Get the status of all currently executing, queued, or completed cluster actions.
Required permissions Permission name view_status_of_cluster_action Request Example HTTP request GET /cluster/actions Response Returns a JSON array of action objects.</description></item><item><title>Node actions requests</title><link>/rs/references/rest-api/requests/nodes/actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/nodes/actions/</guid><description>Method Path Description GET /v1/nodes/actions Get status of all actions on all nodes GET /v1/nodes/{node_uid}/actions Get status of all actions on a specific node GET /v1/nodes/{node_uid}/actions/{action} Get status of an action on a specific node POST /v1/nodes/{node_uid}/actions/{action} Initiate node action DELETE /v1/nodes/{node_uid}/actions/{action} Cancel action or remove action status Get all actions GET /v1/nodes/actions Get the status of all currently executing, pending, or completed actions on all nodes.
Permissions Permission name Roles view_status_of_all_node_actions admin</description></item><item><title>crdb-cli crdb add-instance</title><link>/rs/references/cli-utilities/crdb-cli/crdb/add-instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/add-instance/</guid><description>Adds a peer replica to an existing Active-Active database in order to host the database on another cluster. This creates an additional active instance of the database on the specified cluster.
crdb-cli crdb add-instance --crdb-guid &amp;lt;guid&amp;gt; --instance fqdn=&amp;lt;cluster_fqdn&amp;gt;,username=&amp;lt;username&amp;gt;,password=&amp;lt;password&amp;gt;[,url=&amp;lt;url&amp;gt;,replication_endpoint=&amp;lt;endpoint&amp;gt;] [ --compression &amp;lt;0-6&amp;gt; ] [ --no-wait ] Parameters Parameter Value Description crdb-guid string The GUID of the database (required) instance strings The connection information for the new participating cluster (required) compression 0-6 The level of data compression: 0=Compression disabled 6=High compression and resource load (Default: 3) no-wait Does not wait for the task to complete Returns Returns the task ID of the task that is adding the new instance.</description></item><item><title>rladmin node addr set</title><link>/rs/references/cli-utilities/rladmin/node/addr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/node/addr/</guid><description>Sets the internal IP address of a node. You can only set the internal IP address when the node is down.
rladmin node &amp;lt;ID&amp;gt; addr set &amp;lt;IP address&amp;gt; Parameters Parameter Type/Value Description node integer Sets the internal IP address of the specified node addr IP address Sets the node&amp;rsquo;s internal IP address to the specified IP address Returns Returns Updated successfully if the IP address was set. Otherwise, it returns an error.</description></item><item><title>Alert object</title><link>/rs/references/rest-api/objects/alert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/alert/</guid><description>You can view, configure, and enable various alerts for the cluster.
Alerts are bound to a cluster object (such as a BDB or node), and the cluster&amp;rsquo;s state determines whether the alerts turn on or off.
Name Type/Value Description Writable change_time string Timestamp when alert state last changed change_value object Contains data relevant to the evaluation time when the alert went on/off (thresholds, sampled values, etc.) enabled boolean If true, alert is enabled x severity &amp;lsquo;DEBUG&amp;rsquo;</description></item><item><title>Alert settings object</title><link>/rs/references/rest-api/objects/cluster/alert_settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/cluster/alert_settings/</guid><description> Name Type/Value Description cluster_certs_about_to_expire cluster_alert_settings_with_threshold object Cluster certificate will expire in x days cluster_even_node_count boolean (default: false) True high availability requires an odd number of nodes in the cluster cluster_flash_overcommit boolean (default: false) Flash memory committed to databases is larger than cluster total flash memory cluster_inconsistent_redis_sw boolean (default: false) Some shards in the cluster are running different versions of Redis software cluster_inconsistent_rl_sw boolean (default: false) Some nodes in the cluster are running different versions of Redis Enterprise software cluster_internal_bdb boolean (default: false) Issues with internal cluster databases cluster_multiple_nodes_down boolean (default: false) Multiple cluster nodes are down (this might cause data loss) cluster_node_joined boolean (default: false) New node joined the cluster cluster_node_remove_abort_completed boolean (default: false) Cancel node remove operation completed cluster_node_remove_abort_failed boolean (default: false) Cancel node remove operation failed cluster_node_remove_completed boolean (default: false) Node removed from the cluster cluster_node_remove_failed boolean (default: false) Failed to remove a node from the cluster cluster_ocsp_query_failed boolean (default: false) Failed to query the OCSP server cluster_ocsp_status_revoked boolean (default: false) OCSP certificate status is REVOKED cluster_ram_overcommit boolean (default: false) RAM committed to databases is larger than cluster total RAM cluster_too_few_nodes_for_replication boolean (default: false) Replication requires at least 2 nodes in the cluster node_aof_slow_disk_io boolean (default: false) AOF reaching disk I/O limits node_checks_error boolean (default: false) Some node checks have failed node_cpu_utilization cluster_alert_settings_with_threshold object Node CPU utilization has reached the threshold value (% of the utilization limit) node_ephemeral_storage cluster_alert_settings_with_threshold object Node ephemeral storage has reached the threshold value (% of the storage limit) node_failed boolean (default: false) Node failed node_free_flash cluster_alert_settings_with_threshold object Node flash storage has reached the threshold value (% of the storage limit) node_insufficient_disk_aofrw boolean (default: false) Insufficient AOF disk space node_internal_certs_about_to_expire cluster_alert_settings_with_threshold object Internal certificate on node will expire in x days node_memory cluster_alert_settings_with_threshold object Node memory has reached the threshold value (% of the memory limit) node_net_throughput cluster_alert_settings_with_threshold object Node network throughput has reached the threshold value (bytes/s) node_persistent_storage cluster_alert_settings_with_threshold object Node persistent storage has reached the threshold value (% of the storage limit)</description></item><item><title>Database alerts requests</title><link>/rs/references/rest-api/requests/bdbs/alerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/alerts/</guid><description>Method Path Description GET /v1/bdbs/alerts Get all alert states for all databases GET /v1/bdbs/alerts/{uid} Get all alert states for a specific database GET /v1/bdbs/alerts/{uid}/{alert} Get a specific database alert state POST /v1/bdbs/alerts/{uid} Update a database’s alerts configuration Get all database alerts GET /v1/bdbs/alerts Get all alert states for all databases.
Required permissions Permission name view_all_bdbs_alerts Request Example HTTP request GET /bdbs/alerts Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response Returns a hash of alert UIDs and the alerts states for each database.</description></item><item><title>Cluster alerts requests</title><link>/rs/references/rest-api/requests/cluster/alerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/alerts/</guid><description>Method Path Description GET /v1/cluster/alerts Get all cluster alerts GET /v1/cluster/alerts/{alert} Get a specific cluster alert Get all cluster alerts GET /v1/cluster/alerts Get all alert states for the cluster object.
Required permissions Permission name view_cluster_alerts Request Example HTTP request GET /cluster/alerts Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Query parameters Field Type Description ignore_settings boolean Retrieve updated alert state regardless of the cluster’s alert_settings.</description></item><item><title>Node alerts requests</title><link>/rs/references/rest-api/requests/nodes/alerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/nodes/alerts/</guid><description>Method Path Description GET /v1/nodes/alerts Get all alert states for all nodes GET /v1/nodes/alerts/{uid} Get all alert states for a node GET /v1/nodes/alerts/{uid}/{alert} Get node alert state Get all alert states GET /v1/nodes/alerts Get all alert states for all nodes.
Required permissions Permission name view_all_nodes_alerts Request Example HTTP request GET /nodes/alerts Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Query parameters Field Type Description ignore_settings boolean Retrieve updated alert state regardless of the cluster&amp;rsquo;s alert_settings.</description></item><item><title>Auditing database connections requests</title><link>/rs/references/rest-api/requests/cluster/auditing-db-conns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/auditing-db-conns/</guid><description>Method Path Description GET /v1/cluster/auditing/db_conns Get database connection auditing settings PUT /v1/cluster/auditing/db_conns Update database connection auditing settings DELETE /v1/cluster/auditing/db_conns Delete database connection auditing settings Get database auditing settings GET /v1/cluster/auditing/db_conns Gets the configuration settings for auditing database connections.
Required permissions Permission name view_cluster_info Request Example HTTP request GET /cluster/auditing/db_conns Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response Returns a database connection auditing configuration object.</description></item><item><title>Authorize user requests</title><link>/rs/references/rest-api/requests/users/authorize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/users/authorize/</guid><description>Method Path Description POST /v1/users/authorize Authorize a user Authorize user POST /v1/users/authorize Generate a JSON Web Token (JWT) for a user to use as authorization to access the REST API.
Request Example HTTP request POST /users/authorize Example JSON body { &amp;#34;username&amp;#34;: &amp;#34;user@redislabs.com&amp;#34;, &amp;#34;password&amp;#34;: &amp;#34;my_password&amp;#34; } Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Request body Include a JWT authorize object with a valid username and password in the request body.</description></item><item><title>Create IAM resources using AWS console</title><link>/rc/cloud-integrations/aws-cloud-accounts/iam-resources/aws-console/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/cloud-integrations/aws-cloud-accounts/iam-resources/aws-console/</guid><description>To manually create IAM resources using the AWS console, follow these steps.
Step 1: Create the IAM instance policy First, create a policy to use for the new instance role:
In the AWS IAM console, go to Policies &amp;gt; Create policy.
In the JSON tab, paste the contents of the RedisLabsInstanceRolePolicy.json policy file, shown here:
View RedisLabsInstanceRolePolicy.json &amp;lt;div class=&amp;quot;highlight&amp;quot;&amp;gt;&amp;lt;pre tabindex=&amp;quot;0&amp;quot; style=&amp;quot;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-js&amp;quot; data-lang=&amp;quot;js&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Version&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;2012-10-17&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Statement&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Sid&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;EC2&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Effect&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Allow&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Action&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:DescribeAvailabilityZones&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:DescribeRegions&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:DescribeSecurityGroups&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:DescribeTags&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:DescribeVolumes&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;],&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Resource&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;*&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;},&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Sid&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;EC2Tagged&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Effect&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Allow&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Action&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:AuthorizeSecurityGroupEgress&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:AuthorizeSecurityGroupIngress&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:DeleteSecurityGroup&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:RevokeSecurityGroupEgress&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:RevokeSecurityGroupIngress&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;],&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Resource&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;*&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Condition&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;StringEquals&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:ResourceTag/RedisLabsIdentifier&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Redislabs-VPC&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;},&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Sid&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;EBSVolumeActions&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Effect&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Allow&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Action&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:AttachVolume&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:CreateVolume&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:CreateTags&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;ec2:DescribeTags&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;],&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Resource&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;*&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;},&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Sid&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;S3Object&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Effect&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Allow&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Action&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;s3:PutObject&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;s3:PutObjectAcl&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;s3:GetObject&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;s3:GetObjectAcl&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;s3:DeleteObject&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;s3:ListBucket&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;s3:GetBucketLocation&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;],&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Resource&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;*&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;},&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Sid&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;IAM&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Effect&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Allow&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Action&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;[&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;iam:GetPolicy&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;,&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;iam:ListPolicies&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;],&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Resource&amp;amp;#34;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;*&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;]&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt; Validate it and then select Review Policy.</description></item><item><title>AWS Route53 DNS management</title><link>/rs/networking/configuring-aws-route53-dns-redis-enterprise/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/configuring-aws-route53-dns-redis-enterprise/</guid><description>Redis Enterprise Software requires DNS to be properly configured to achieve high availability and fail-over regardless of where it is installed.
Here, you learn how to configure AWS Route53 DNS resolution.
Prerequisites You need to have a domain name registered. Then, either you need to have Amazon&amp;rsquo;s Route53 as the primary/master nameserver (NS) for this domain or for a delegated zone under this domain. Finally, you need to have the zone (either the whole domain or a sub-zone) defined in AWS Route53.</description></item><item><title>Backup object</title><link>/rs/references/rest-api/objects/shard/backup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/shard/backup/</guid><description> Name Type/Value Description progress number, (range: 0-100) Shard backup progress (percentage) status &amp;rsquo;exporting&amp;rsquo;
&amp;lsquo;succeeded&amp;rsquo;
&amp;lsquo;failed&amp;rsquo; Status of scheduled periodic backup process</description></item><item><title>Backup job settings object</title><link>/rs/references/rest-api/objects/job_scheduler/backup_job_settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/job_scheduler/backup_job_settings/</guid><description> Name Type/Value Description cron_expression string CRON expression that defines the backup schedule</description></item><item><title>BDB backup/export location object</title><link>/rs/references/rest-api/objects/bdb/backup_location/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bdb/backup_location/</guid><description>You can back up or export a database&amp;rsquo;s dataset to the following types of locations:
FTP/S SFTP Amazon S3 Google Cloud Storage Microsoft Azure Storage NAS/Local Storage Basic parameters For all backup/export location objects, you need to specify the location type via the type field.
Location type &amp;ldquo;type&amp;rdquo; value FTP/S &amp;ldquo;url&amp;rdquo; SFTP &amp;ldquo;sftp&amp;rdquo; Amazon S3 &amp;ldquo;s3&amp;rdquo; Google Cloud Storage &amp;ldquo;gs&amp;rdquo; Microsoft Azure Storage &amp;ldquo;abs&amp;rdquo; NAS/Local Storage &amp;ldquo;mount_point&amp;rdquo; Location-specific parameters Any additional required parameters may differ based on the backup/export location type.</description></item><item><title>Backup reset status database action requests</title><link>/rs/references/rest-api/requests/bdbs/actions/backup_reset_status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/actions/backup_reset_status/</guid><description>Method Path Description PUT /v1/bdbs/{uid}/actions/backup_reset_status Reset database backup status Reset database backup status PUT /v1/bdbs/{int: uid}/actions/backup_reset_status Resets the database&amp;rsquo;s backup_status to idle if a backup is not in progress and clears the value of the backup_failure_reason field.
Permissions Permission name Roles reset_bdb_current_backup_status admin
cluster_member
db_member Request Example HTTP request PUT /bdbs/1/actions/backup_reset_status Headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type URL parameters Field Type Description uid integer The unique ID of the database Response Returns a status code.</description></item><item><title>BDB alert settings with threshold object</title><link>/rs/references/rest-api/objects/db_alerts_settings/bdb_alert_settings_with_threshold/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/db_alerts_settings/bdb_alert_settings_with_threshold/</guid><description> Name Type/Value Description enabled boolean (default: false) Alert enabled or disabled threshold string Threshold for alert going on/off</description></item><item><title>BDB group object</title><link>/rs/references/rest-api/objects/bdb_group/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bdb_group/</guid><description>An API object that represents a group of databases that share a memory pool.
Name Type/Value Description uid integer Cluster unique ID of the database group members array of strings A list of UIDs of member databases (read-only) memory_size integer The common memory pool size limit for all databases in the group, expressed in bytes</description></item><item><title>Benchmarking Redis Enterprise</title><link>/rs/clusters/optimize/memtier-benchmark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/memtier-benchmark/</guid><description>Use the memtier_benchmark tool to perform a performance benchmark of Redis Enterprise Software.
Prerequisites:
Redis Enterprise Software installed A cluster configured A database created For help with the prerequisites,see Get started with Redis Enterprise Software.
It is recommended to run memtier_benchmark on a separate node that is not part of the cluster being tested. If you run it on a node of the cluster, be mindful that it affects the performance of both the cluster and memtier_benchmark.</description></item><item><title>Benchmark a Redis on Flash enabled database</title><link>/rs/references/memtier-benchmark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/memtier-benchmark/</guid><description>Redis on Flash (RoF) on Redis Enterprise Software lets you use cost-effective Flash memory as a RAM extension for your database.
But what does the performance look like as compared to a memory-only database, one stored solely in RAM?
These scenarios use the memtier_benchmark utility to evaluate the performance of a Redis Enterprise Software deployment, including the trial version.
The memtier_benchmark utility is located in /opt/redislabs/bin/ of Redis Enterprise Software deployments.</description></item><item><title>rladmin bind</title><link>/rs/references/cli-utilities/rladmin/bind/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/bind/</guid><description>Manages the proxy policy for a specific database endpoint.
bind endpoint exclude Defines a list of nodes to exclude from the proxy policy for a specific database endpoint. When you exclude a node, the endpoint cannot bind to the node&amp;rsquo;s proxy.
Each time you run an exclude command, it overwrites the previous list of excluded nodes.
rladmin bind [ db { db:&amp;lt;id&amp;gt; | &amp;lt;name&amp;gt; } ] endpoint &amp;lt;id&amp;gt; exclude &amp;lt;proxy_id1 .</description></item><item><title>crdb-cli task cancel</title><link>/rs/references/cli-utilities/crdb-cli/task/cancel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/task/cancel/</guid><description>Cancels the Active-Active database task specified by the task ID.
crdb-cli task cancel &amp;lt;task_id&amp;gt; Parameters Parameter Value Description task-id &amp;lt;task_id&amp;gt; string An Active-Active database task ID (required) Returns Attempts to cancel an Active-Active database task.
Be aware that tasks may complete before they can be cancelled.
Example $ crdb-cli task cancel --task-id 2901c2a3-2828-4717-80c0-6f27f1dd2d7c</description></item><item><title>Configure CentOS/RHEL firewall</title><link>/rs/installing-upgrading/configuring/centos-rhel-7-firewall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/configuring/centos-rhel-7-firewall/</guid><description>CentOS/RHEL7 distributions have, by default, a restrictive firewall mechanism based on firewalld that in turn configures the standard iptables system. The default configuration assigns the network interfaces to the public zone and blocks all ports, except 22 (SSH).
Redis Enterprise Software (RS) installation on CentOS/RHEL 7 automatically creates two firewalld system services:
A service named redislabs, which includes all ports and protocols needed for communications between cluster nodes. A service named redislabs-clients, which includes the ports and protocols needed for communications external to the cluster.</description></item><item><title>Certificate rotation job settings object</title><link>/rs/references/rest-api/objects/job_scheduler/cert_rotation_job_settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/job_scheduler/cert_rotation_job_settings/</guid><description> Name Type/Value Description cron_expression string CRON expression that defines the certificate rotation schedule expiry_days_before_rotation integer, (range: 1-90) (default: 60) Number of days before a certificate expires before rotation</description></item><item><title>rladmin cluster certificate</title><link>/rs/references/cli-utilities/rladmin/cluster/certificate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/certificate/</guid><description>Sets a cluster certificate to a specified PEM file.
rladmin cluster certificate set &amp;lt;certificate name&amp;gt; certificate_file &amp;lt;certificate filepath&amp;gt; [ key_file &amp;lt;key filepath&amp;gt; ] To set a certificate for a specific service, use the corresponding certificate name. See the certificates table for the list of cluster certificates and their descriptions.
Parameters Parameter Type/Value Description certificate name &amp;lsquo;cm&amp;rsquo;
&amp;lsquo;api&amp;rsquo;
&amp;lsquo;proxy&amp;rsquo;
&amp;lsquo;syncer&amp;rsquo;
&amp;lsquo;metrics_exporter&amp;rsquo; Name of the certificate to update certificate_file filepath Path to the certificate file key_file filepath Path to the key file (optional) Returns Reports that the certificate was set to the specified file.</description></item><item><title>Check result object</title><link>/rs/references/rest-api/objects/check_result/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/check_result/</guid><description>Cluster check result
Name Type/Value Description cluster_test_result boolean Indication if any of the tests failed nodes [{ "node_uid": integer, "result": boolean, "error": string }, ...] Nodes results</description></item><item><title>Create IAM resources using CloudFormation</title><link>/rc/cloud-integrations/aws-cloud-accounts/iam-resources/cloudformation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/cloud-integrations/aws-cloud-accounts/iam-resources/cloudformation/</guid><description>The following link uses AWS CloudFormation to create a stack using the AWS console:
You can then use the Outputs tab to find the data needed to complete the creation of a Cloud Account. For the accessSecretKey (i.e. user&amp;rsquo;s access key) and consolePassword (user&amp;rsquo;s console password) you&amp;rsquo;ll have to follow the links to the AWS Secrets Manager service, and use that to find the secret values. These values, being secrets, aren&amp;rsquo;t displayed directly by CloudFormation.</description></item><item><title>Set up cluster behind a load balancer</title><link>/rs/networking/cluster-lba-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/cluster-lba-setup/</guid><description>When you want to setup a Redis Enterprise cluster in an environment that doesn&amp;rsquo;t allow DNS, you can use a load balancer (LB) to direct traffic to the cluster nodes.
DNS role for databases Normally, Redis Enterprise uses DNS to provide dynamic database endpoints. A DNS name such as redis-12345.clustername.domain gives clients access to the database resource:
If multiple proxies are in use, the DNS name resolves to multiple IP addresses so that clients can load balance.</description></item><item><title>Cluster metrics</title><link>/rs/references/rest-api/objects/statistics/cluster-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/statistics/cluster-metrics/</guid><description>Metric name Type Description available_flash float Sum of available flash in all nodes (bytes) available_memory float Sum of available memory in all nodes (bytes) avg_latency float Average latency of requests handled by all cluster endpoints (micro-sec); returned only when there is traffic bigstore_free float Sum of free space of backend flash (used by flash DB&amp;rsquo;s BigRedis) on all cluster nodes (bytes); only returned when BigRedis is enabled bigstore_iops float Rate of I/O operations against backend flash for all shards which are part of a flash-based DB (BigRedis) in the cluster (ops/sec); returned only when BigRedis is enabled bigstore_kv_ops float Rate of value read/write operations against back-end flash for all shards which are part of a flash based DB (BigRedis) in cluster (ops/sec); only returned when BigRedis is enabled bigstore_throughput float Throughput I/O operations against backend flash for all shards which are part of a flash-based DB (BigRedis) in the cluster (bytes/sec); only returned when BigRedis is enabled conns float Total number of clients connected to all cluster endpoints cpu_idle float CPU idle time portion, the value is weighted between all nodes based on number of cores in each node (0-1, multiply by 100 to get percent) cpu_system float CPU time portion spent in kernel on the cluster, the value is weighted between all nodes based on number of cores in each node (0-1, multiply by 100 to get percent) cpu_user float CPU time portion spent by users-pace processes on the cluster.</description></item><item><title>Cluster alert settings with threshold object</title><link>/rs/references/rest-api/objects/cluster/cluster_alert_settings_with_threshold/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/cluster/cluster_alert_settings_with_threshold/</guid><description> Name Type/Value Description enabled boolean (default: false) Alert enabled or disabled threshold string Threshold for alert going on/off</description></item><item><title>Cluster identity object</title><link>/rs/references/rest-api/objects/bootstrap/cluster_identity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bootstrap/cluster_identity/</guid><description> Name Type/Value Description name string Fully qualified cluster name. Limited to 64 characters and must comply with the IETF&amp;rsquo;s RFC 952 standard and section 2.1 of the RFC 1123 standard. nodes array of strings Array of IP addresses of existing cluster nodes wait_command boolean (default: true) Supports Redis wait command</description></item><item><title>CRDB cluster info object</title><link>/rs/references/rest-api/objects/crdb/cluster_info/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/crdb/cluster_info/</guid><description>Configuration details for a cluster that is part of an Active-Active database.
Name Type/Value Description credentials { "username": string, "password": string } Cluster access credentials (required) name string Cluster fully qualified name, used to uniquely identify the cluster. Typically this is the same as the hostname used in the URL, although in some configruations the URL may point to a different name/address. (required) replication_endpoint string Address to use for peer replication.</description></item><item><title>Cluster settings object</title><link>/rs/references/rest-api/objects/cluster_settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/cluster_settings/</guid><description>Cluster resources management policy
Name Type/Value Description acl_pubsub_default resetchannels
allchannels Default pub/sub ACL rule for all databases in the cluster:
•resetchannels blocks access to all channels (restrictive)
•allchannels allows access to all channels (permissive) bigstore_migrate_node_threshold integer Minimum free memory (excluding reserved memory) allowed on a node before automatic migration of shards from it to free more memory bigstore_migrate_node_threshold_p integer Minimum free memory (excluding reserved memory) allowed on a node before automatic migration of shards from it to free more memory bigstore_provision_node_threshold integer Minimum free memory (excluding reserved memory) allowed on a node before new shards can no longer be added to it bigstore_provision_node_threshold_p integer Minimum free memory (excluding reserved memory) allowed on a node before new shards can no longer be added to it data_internode_encryption boolean Enable/deactivate encryption of the data plane internode communication db_conns_auditing boolean Audit connections for new databases by default if set to true.</description></item><item><title>Clustering Redis Databases</title><link>/rc/databases/configuration/clustering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/configuration/clustering/</guid><description>For very large databases, Redis Enterprise Cloud distributes database data to different cloud instances. For example:
When data grows beyond the the RAM resources of a single server.
Multiple shards should be used when data grows to 25 GB (50 GB for Redis on Flash) to create multiple shards.
The operations performed against the database are CPU intensive enough to degrade performance.
Clustering distributes operational load, whether to instances on the same server or across multiple servers.</description></item><item><title>CM server object</title><link>/rs/references/rest-api/objects/services_configuration/cm_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/services_configuration/cm_server/</guid><description> Name Type/Value Description operating_mode &amp;lsquo;disabled&amp;rsquo;
&amp;lsquo;enabled&amp;rsquo; Enable/disable the CM server</description></item><item><title>rladmin cluster config</title><link>/rs/references/cli-utilities/rladmin/cluster/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/config/</guid><description>Updates the cluster configuration.
rladmin cluster config [ auditing db_conns audit_protocol { TCP | local } audit_address &amp;lt;audit_address&amp;gt; audit_port &amp;lt;audit_port&amp;gt; ] [ cipher_suites &amp;lt;BoringSSL cipher list&amp;gt; ] [ cm_port &amp;lt;number&amp;gt; ] [ cm_session_timeout &amp;lt;minutes&amp;gt; ] [ cnm_http_port &amp;lt;number&amp;gt; ] [ cnm_https_port &amp;lt;number&amp;gt;] [ data_cipher_list &amp;lt;openSSL cipher list&amp;gt; ] [ debuginfo_path &amp;lt;filepath&amp;gt; ] [ encrypt_pkeys { enabled | disabled } ] [ handle_redirects { enabled | disabled } ] [ http_support { enabled | disabled } ] [ ipv6 { enabled | disabled } ] [ min_control_TLS_version &amp;lt;control_tls_version&amp;gt;] [ min_data_TLS_version &amp;lt;data_tls_version&amp;gt; ] [ min_sentinel_TLS_version &amp;lt;sentinel_tls_version&amp;gt; ] [ s3_url &amp;lt;URL&amp;gt; ] [ saslauthd_ldap_conf &amp;lt;/tmp/ldap.</description></item><item><title>Database modules config requests</title><link>/rs/references/rest-api/requests/bdbs/modules/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/modules/config/</guid><description>Method Path Description POST /v1/bdbs/{uid}/modules/config Configure module Configure module POST /v1/bdbs/{string: uid}/modules/config Use the module runtime configuration command (if defined) to configure new arguments for the module.
Required permissions Permission name edit_bdb_module Request Example HTTP request POST /bdbs/1/modules/config Example JSON body { &amp;#34;modules&amp;#34;: [ { &amp;#34;module_name&amp;#34;: &amp;#34;search&amp;#34;, &amp;#34;module_args&amp;#34;: &amp;#34;MINPREFIX 3 MAXEXPANSIONS 1000&amp;#34; } ] } Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Request body Field Type Description modules list of JSON objects List of modules (module_name) and their new configuration settings (module_args) module_name string Module&amp;rsquo;s name module_args string Module command line arguments (pattern does not allow special characters &amp;amp;,&amp;lt;,&amp;gt;,”) Response Returns a status code.</description></item><item><title>Configure module requests</title><link>/rs/references/rest-api/requests/modules/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/modules/config/</guid><description>Method Path Description POST /v1/modules/config/bdb/{uid} Configure module Configure module POST /v1/modules/config/bdb/{string: uid} Use the module runtime configuration command (if defined) to configure new arguments for the module.
Required permissions Permission name edit_bdb_module Request Example HTTP request POST /modules/config/bdb/1 Example JSON body { &amp;#34;modules&amp;#34;: [ { &amp;#34;module_name&amp;#34;: &amp;#34;search&amp;#34;, &amp;#34;module_args&amp;#34;: &amp;#34;MINPREFIX 3 MAXEXPANSIONS 1000&amp;#34; } ] } Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Request body Field Type Description modules list of JSON objects List of modules (module_name) and their new configuration settings (module_args) module_name string Module&amp;rsquo;s name module_args string Module command line arguments (pattern does not allow special characters &amp;amp;,&amp;lt;,&amp;gt;,”) Response Returns a status code.</description></item><item><title>Compatibility with open source Redis configuration settings</title><link>/rs/references/compatibility/config-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/compatibility/config-settings/</guid><description>Redis Enterprise Software and Redis Enterprise Cloud only support a subset of open source Redis configuration settings. Using CONFIG GET or CONFIG SET with unsupported configuration settings returns an error.
Setting Redis
Enterprise Redis
Cloud Notes activerehashing ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active busy-reply-threshold ✅ Standard
✅ Active-Active ❌ Standard
❌ Active-Active Value must be between 0 and 60000. hash-max-listpack-entries ✅ Standard
✅ Active-Active ✅ Standard
✅ Active-Active hash-max-listpack-value ✅ Standard</description></item><item><title>Configure cluster DNS</title><link>/rs/networking/cluster-dns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/cluster-dns/</guid><description>By default, Redis Enterprise Software deployments use DNS to communicate between nodes. You can also use the Discovery Service, which uses IP addresses to connect and complies with the Redis Sentinel API supported by open source Redis.
Each node in a Redis Enterprise cluster includes a small DNS server to manage internal functions, such as high availability, automatic failover, automatic migration, and so on. Nodes should only run the DNS server included with the software.</description></item><item><title>Contribution Guide</title><link>/contribution-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/contribution-guide/</guid><description>Redis documentation is an open source project and we welcome edits of all types.
Just to get you started, here is a simple explanation of how to contribute content to the docs.
Edit in GitHub vs. open an issue If you see a problem on a page, either with content or formatting, and you think you can fix it, you can click on the Edit on GitHub link, edit the page, and submit the change.</description></item><item><title>CRDB coordinator object</title><link>/rs/references/rest-api/objects/services_configuration/crdb_coordinator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/services_configuration/crdb_coordinator/</guid><description> Name Type/Value Description operating_mode &amp;lsquo;disabled&amp;rsquo;
&amp;lsquo;enabled&amp;rsquo; Enable/disable the CRDB coordinator process</description></item><item><title>CRDB task object</title><link>/rs/references/rest-api/objects/crdb_task/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/crdb_task/</guid><description>An object that represents an Active-Active (CRDB) task.
Name Type/Value Description id string CRDB task ID (read only) crdb_guid string Globally unique Active-Active database ID (GUID) (read-only) errors [{ "cluster_name": string, "description": string, "error_code": string }, ...] Details for errors that occurred on a cluster status &amp;lsquo;queued&amp;rsquo; &amp;lsquo;started&amp;rsquo; &amp;lsquo;finished&amp;rsquo; &amp;lsquo;failed&amp;rsquo; CRDB task status (read only)</description></item><item><title>CRDB worker object</title><link>/rs/references/rest-api/objects/services_configuration/crdb_worker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/services_configuration/crdb_worker/</guid><description> Name Type/Value Description operating_mode &amp;lsquo;disabled&amp;rsquo;
&amp;lsquo;enabled&amp;rsquo; Enable/disable the CRDB worker processes</description></item><item><title>Database CRDT sources alerts requests</title><link>/rs/references/rest-api/requests/bdbs/crdt_sources-alerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/crdt_sources-alerts/</guid><description>Method Path Description GET /v1/bdbs/crdt_sources/alerts Get all CRDT sources alert states for all CRDB databases GET /v1/bdbs/crdt_sources/alerts/{uid} Get all CRDT sources alert states for a database GET /v1/bdbs/crdt_sources/alerts/{uid}/{crdt_src_id} Get all alert states for a CRDT source GET /v1/bdbs/crdt_sources/alerts/{uid}/{crdt_src_id}/{alert} Get a database alert state Get all CRDB CRDT source alert states GET /v1/bdbs/crdt_sources/alerts Get all alert states for all CRDT sources of all CRDBs.
Required permissions Permission name view_all_bdbs_alerts Request Example HTTP request GET /bdbs/crdt_sources/alerts Request headers Key Value Description Host cnm.</description></item><item><title>crdb-cli crdb create</title><link>/rs/references/cli-utilities/crdb-cli/crdb/create/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/create/</guid><description>Creates an Active-Active database.
crdb-cli crdb create --name &amp;lt;name&amp;gt; --memory-size &amp;lt;maximum_memory&amp;gt; --instance fqdn=&amp;lt;cluster_fqdn&amp;gt;,username=&amp;lt;username&amp;gt;,password=&amp;lt;password&amp;gt;[,url=&amp;lt;url&amp;gt;,replication_endpoint=&amp;lt;endpoint&amp;gt;] --instance fqdn=&amp;lt;cluster_fqdn&amp;gt;,username=&amp;lt;username&amp;gt;,password=&amp;lt;password&amp;gt;[,url=&amp;lt;url&amp;gt;,replication_endpoint=&amp;lt;endpoint&amp;gt;] [--port &amp;lt;port_number&amp;gt;] [--no-wait] [--default-db-config &amp;lt;configuration&amp;gt;] [--default-db-config-file &amp;lt;filename&amp;gt;] [--compression &amp;lt;0-6&amp;gt;] [--causal-consistency { true | false } ] [--password &amp;lt;password&amp;gt;] [--replication { true | false } ] [--encryption { true | false } ] [--sharding { false | true } ] [--shards-count &amp;lt;number_of_shards&amp;gt;] [--shard-key-regex &amp;lt;regex_rule&amp;gt;] [--oss-cluster { true | false } ] [--bigstore { true | false }] [--bigstore-ram-size &amp;lt;maximum_memory&amp;gt;] [--with-module name=&amp;lt;module_name&amp;gt;,version=&amp;lt;module_version&amp;gt;,args=&amp;lt;module_args&amp;gt;] Prerequisites Before you create an Active-Active database, you must have:</description></item><item><title>rladmin cluster create</title><link>/rs/references/cli-utilities/rladmin/cluster/create/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/create/</guid><description>Creates a new cluster. The node where you run rladmin cluster create becomes the first node of the new cluster.
cluster create name &amp;lt;cluster name&amp;gt; username &amp;lt;admin email&amp;gt; password &amp;lt;admin password&amp;gt; [ node_uid &amp;lt;node UID&amp;gt; ] [ rack_aware ] [ rack_id &amp;lt;node rack ID&amp;gt; ] [ license_file &amp;lt;file&amp;gt; ] [ ephemeral_path &amp;lt;path&amp;gt; ] [ persistent_path &amp;lt;path&amp;gt; ] [ ccs_persistent_path &amp;lt;path&amp;gt; ] [ register_dns_suffix ] [ flash_enabled ] [ flash_path &amp;lt;path&amp;gt; ] [ addr &amp;lt;IP address&amp;gt; ] [ external_addr &amp;lt;IP address&amp;gt; ] Parameters Parameter Type/Value Description addr IP address The node&amp;rsquo;s internal IP address (optional) ccs_persistent_path filepath (default: /var/opt/redislabs/persist) Path to the location of CCS snapshots (optional) ephemeral_path filepath (default: /var/opt/redislabs) Path to the ephemeral storage location (optional) external_addr IP address The node&amp;rsquo;s external IP address (optional) flash_enabled Enables flash storage (optional) flash_path filepath (default: /var/opt/redislabs/flash) Path to the flash storage location (optional) license_file filepath Path to the RLEC license file (optional) name string Cluster name node_uid integer Unique node ID (optional) password string Admin user&amp;rsquo;s password persistent_path filepath (default: /var/opt/redislabs/persist) Path to the persistent storage location (optional) rack_aware Activates or deactivates rack awareness (optional) rack_id string The rack&amp;rsquo;s unique identifier (optional) register_dns_suffix Enables database mapping to both internal and external IP addresses (optional) username email address Admin user&amp;rsquo;s email address Returns Returns ok if the new cluster was created successfully.</description></item><item><title>Creating a Support Package</title><link>/rs/installing-upgrading/creating-support-package/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/creating-support-package/</guid><description>If you encounter any issues that you are not able to resolve yourself and need to contact Redis support for assistance, you can create a support package that gathers all essential information to help us debug your issues.
Note: The process of creating the support package can take several minutes and generates load on the system. Creating a support package To create a support package:
Click Support at the top right of the admin console.</description></item><item><title>Credentials object</title><link>/rs/references/rest-api/objects/bootstrap/credentials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bootstrap/credentials/</guid><description> Name Type/Value Description password string Admin password username string Admin username (pattern does not allow special characters &amp;amp;,&amp;lt;,&amp;gt;,&amp;quot;)</description></item><item><title>Data eviction policies</title><link>/rc/databases/configuration/data-eviction-policies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/configuration/data-eviction-policies/</guid><description>The data eviction policy of a database controls what happens when new data exceeds the memory size of a database. Typically, such situations require evicting (or deleting) data previously added to the database.
To control this behavior, change the Data eviction policy setting for a database.
Available policies For each database, you can choose from these data eviction policies:
Available policies Description allkeys-lru Keeps most recently used keys; removes least recently used (LRU) keys allkeys-lfu Keeps frequently used keys; removes least frequently used (LFU) keys allkeys-random Randomly removes keys volatile-lru Removes least recently used keys with expire field set to true (Default) volatile-lfu Removes least frequently used keys with expire field set to true volatile-random Randomly removes keys with expire field set to true volatile-ttl Removes least frequently used keys with expire field set to true and the shortest remaining time-to-live (TTL) value no eviction New values aren&amp;rsquo;t saved when memory limit is reachedWhen a database uses replication, this applies to the primary database Redis Cloud supports Redis on Flash (RoF) to prevent data eviction but maintain high performance.</description></item><item><title>Data persistence</title><link>/rc/databases/configuration/data-persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/configuration/data-persistence/</guid><description>Redis Enterprise Cloud can persist data to enable recovery in the event of memory loss or other catastrophic failure. When you enable data persistence, in-memory data is copied to persistent storage attached to the underlying cloud instance.
Persistence options Data can be persisted in one of two ways:
An Append-Only File (AOF) maintains a record (sometimes called a redo log or journal) of write operations. This allows the data to be restored by using the record to reconstruct the database up to the point of failure.</description></item><item><title>CRDB database config object</title><link>/rs/references/rest-api/objects/crdb/database_config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/crdb/database_config/</guid><description>An object that represents the database configuration.
Name Type/Value Description aof_policy string Policy for Append-Only File data persistence authentication_admin_pass string Administrative databases access token authentication_redis_pass string Redis AUTH password bigstore boolean Database driver is Redis on Flash bigstore_ram_size integer Memory size of RAM size data_persistence string Database on-disk persistence max_aof_file_size integer Hint for maximum AOF file size max_aof_load_time integer Hint for maximum AOF reload time memory_size integer Database memory size limit, in bytes oss_cluster boolean Enables OSS Cluster mode oss_cluster_api_preferred_ip_type string Indicates preferred IP type in OSS cluster API: internal/external oss_sharding boolean An alternative to shard_key_regex for using the common case of the OSS shard hashing policy port integer TCP port for database access proxy_policy string The policy used for proxy binding to the endpoint rack_aware boolean Require the database to be always replicated across multiple racks replication boolean Database replication shard_key_regex [{ "</description></item><item><title>BDB dataset import sources object</title><link>/rs/references/rest-api/objects/bdb/dataset_import_sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bdb/dataset_import_sources/</guid><description>You can import data to a database from the following location types:
HTTP/S FTP SFTP Amazon S3 Google Cloud Storage Microsoft Azure Storage NAS/Local Storage The source file to import should be in the RDB format. It can also be in a compressed (gz) RDB file.
Supply an array of dataset import source objects to import data from multiple files.
Basic parameters For all import location objects, you need to specify the location type via the type field.</description></item><item><title>DB metrics</title><link>/rs/references/rest-api/objects/statistics/db-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/statistics/db-metrics/</guid><description>Metric name Type Description avg_latency float Average latency of operations on the DB (microseconds). Only returned when there is traffic. avg_other_latency float Average latency of other (non read/write) operations (microseconds). Only returned when there is traffic. avg_read_latency float Average latency of read operations (microseconds). Only returned when there is traffic. avg_write_latency float Average latency of write operations (microseconds). Only returned when there is traffic. big_del_flash float Rate of key deletes for keys on flash (BigRedis) (key access/sec).</description></item><item><title>Database connection auditing configuration object</title><link>/rs/references/rest-api/objects/db-conns-auditing-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/db-conns-auditing-config/</guid><description>Database connection auditing configuration
Name Type/Value Description audit_address string TCP/IP address where one can listen for notifications. audit_port integer Port where one can listen for notifications. audit_protocol TCP
local Protocol used to process notifications. For production systems, TCP is the only valid value. audit_reconnect_interval integer Interval (in seconds) between attempts to reconnect to the listener. Default is 1 second. audit_reconnect_max_attempts integer Maximum number of attempts to reconnect. Default is 0 (infinite).</description></item><item><title>rladmin cluster debug_info</title><link>/rs/references/cli-utilities/rladmin/cluster/debug_info/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/debug_info/</guid><description>Downloads a support package to the specified path. If you do not specify a path, it downloads the package to the default path specified in the cluster configuration file.
rladmin cluster debug_info [ node &amp;lt;ID&amp;gt; ] [ path &amp;lt;path&amp;gt; ] [ sanitized ] Parameters Parameter Type/Value Description node integer Downloads a support package for the specified node path filepath Specifies the location where the support package should download sanitized Removes sensitive data (passwords, certificates, etc.</description></item><item><title>crdb-cli crdb delete</title><link>/rs/references/cli-utilities/crdb-cli/crdb/delete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/delete/</guid><description>Deletes an Active-Active database.
crdb-cli crdb delete --crdb-guid &amp;lt;guid&amp;gt; [ --no-wait ] This command is irreversible. If the data in your database is important, back it up before you delete the database.
Parameters Parameter Value Description crdb-guid string The GUID of the database (required) no-wait Does not wait for the task to complete Returns Returns the task ID of the task that is deleting the database.
If --no-wait is specified, the command exits.</description></item><item><title>Disk sizing for heavy write scenarios</title><link>/rs/clusters/optimize/disk-sizing-heavy-write-scenarios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/disk-sizing-heavy-write-scenarios/</guid><description>In extreme write scenarios, when AOF is enabled, the AOF rewrite process may require considerably more disk space for database persistence.
To estimate the required persistent disk space in such cases, use the formula described below.
The required persistent disk space for AOF rewrite purposes in extreme write scenarios, assuming identical shard sizes:
X (1 + 3Y +Y²) where: X = each shard size Y = number of shards
Following are examples of database configurations and the persistence disk space they would require in this scenario:</description></item><item><title>Editing Guide</title><link>/editing-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/editing-guide/</guid><description>Redis documentation is an open source project and we welcome edits of all types.
Just to get you started, here is a simple explanation of how to edit the docs.
Find the source Find a page with something to edit.
Edits can be anything from a simple typo or grammar error to adding additional information.
On that page, click Edit on GitHub.
Enter your GitHub credentials.
If you don&amp;rsquo;t have an account, it is easy and free to open one.</description></item><item><title>rladmin node enslave</title><link>/rs/references/cli-utilities/rladmin/node/enslave/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/node/enslave/</guid><description>Changes the resources of a node to replicas.
node enslave Changes all of the node&amp;rsquo;s endpoints and shards to replicas.
rladmin node &amp;lt;ID&amp;gt; enslave [demote_node] [retry_timeout_seconds &amp;lt;seconds&amp;gt;] Parameters Parameter Type/Value Description node integer Changes all of the node&amp;rsquo;s endpoints and shards to replicas demote_node If the node is a primary node, changes the node to replica retry_timeout_seconds integer Retries on failure until the specified number of seconds has passed. Returns Returns OK if the roles were successfully changed.</description></item><item><title>Cluster environment optimization</title><link>/rs/clusters/optimize/optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/optimization/</guid><description>Redis Enterprise Software employs various algorithms to optimize performance. As part of this process, Redis Enterprise Software examines usage characteristics and load to adjust its run-time configuration accordingly. Depending on your specific usage characteristics and load, it might take Redis Enterprise Software some time to adjust itself to optimal performance.
To ensure optimal performance, you must run your workload several times and for a long duration until performance stabilizes.
In addition, you can optimize your cluster for two different environments:</description></item><item><title>Export database action requests</title><link>/rs/references/rest-api/requests/bdbs/actions/export/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/actions/export/</guid><description>Method Path Description POST /v1/bdbs/{uid}/actions/export Initiate database export Initiate database export POST /v1/bdbs/{int: uid}/actions/export Initiate a database export.
Permissions Permission name Roles start_bdb_export admin
cluster_member
db_member Request Example HTTP request POST /bdbs/1/actions/export Headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type URL parameters Field Type Description uid integer The unique ID of the database Body The request body should contain a JSON object with the following export parameters:</description></item><item><title>Export resets status database action requests</title><link>/rs/references/rest-api/requests/bdbs/actions/export_reset_status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/actions/export_reset_status/</guid><description>Method Path Description PUT /v1/bdbs/{uid}/actions/export_reset_status Reset database export status Reset database export status PUT /v1/bdbs/{int: uid}/actions/export_reset_status Resets the database&amp;rsquo;s export_status to idle if an export is not in progress and clears the value of the export_failure_reason field.
Permissions Permission name Roles reset_bdb_current_export_status admin
cluster_member
db_member Request Example HTTP request PUT /bdbs/1/actions/export_reset_status Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type URL parameters Field Type Description uid integer The unique ID of the database Response Returns a status code.</description></item><item><title>rladmin node external_addr</title><link>/rs/references/cli-utilities/rladmin/node/external-addr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/node/external-addr/</guid><description>Configures a node&amp;rsquo;s external IP addresses.
node external_addr add Adds an external IP address that accepts inbound user connections for the node.
rladmin node &amp;lt;ID&amp;gt; external_addr add &amp;lt;IP address&amp;gt; Parameters Parameter Type/Value Description node integer Adds an external IP address for the specified node IP address IP address External IP address of the node Returns Returns Updated successfully if the IP address was added. Otherwise, it returns an error.
Use rladmin status nodes to verify the external IP address was added.</description></item><item><title>rladmin failover</title><link>/rs/references/cli-utilities/rladmin/failover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/failover/</guid><description>Fails over one or more primary (also known as master) shards of a database and promotes their respective replicas to primary shards.
rladmin failover [db { db:&amp;lt;id&amp;gt; | &amp;lt;name&amp;gt; }] shard &amp;lt;id1 ... idN&amp;gt; [immediate] Parameters Parameter Type/Value Description db db:&amp;lt;id&amp;gt;
name Fail over shards for the specified database shard one or more primary shard IDs Primary shard or shards to fail over immediate Perform failover without verifying the replica shards are in full sync with the master shards Returns Returns Finished successfully if the failover completed.</description></item><item><title>crdb-cli crdb flush</title><link>/rs/references/cli-utilities/crdb-cli/crdb/flush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/flush/</guid><description>Clears all keys from an Active-Active database.
crdb-cli crdb flush --crdb-guid &amp;lt;guid&amp;gt; [ --no-wait ] This command is irreversible. If the data in your database is important, back it up before you flush the database.
Parameters Parameter Value Description crdb-guid string The GUID of the database (required) no-wait Does not wait for the task to complete Returns Returns the task ID of the task clearing the database.
If --no-wait is specified, the command exits.</description></item><item><title>CRDB flush requests</title><link>/rs/references/rest-api/requests/crdbs/flush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/crdbs/flush/</guid><description>Method Path Description PUT /v1/crdbs/{crdb_guid}/flush Flush an Active-Active database Flush an Active-Active database PUT /v1/crdbs/{crdb_guid}/flush Flush an Active-Active database.
Request Example HTTP request PUT /crdbs/552bbccb-99f3-4142-bd17-93d245f0bc79/flush Headers Key Value Description X-Task-ID string Specified task ID X-Result-TTL integer Time (in seconds) to keep task result URL parameters Field Type Description crdb_guid string Globally unique Active-Active database ID (GUID) Response Returns a CRDB task object.
Status codes Code Description 200 OK Action was successful.</description></item><item><title>Turn off services to free system memory</title><link>/rs/clusters/optimize/turn-off-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/turn-off-services/</guid><description>The Redis Enterprise Software cluster nodes host a range of services that support the cluster processes. In most deployments, either all of these services are required, or there are enough memory resources on the nodes for the database requirements.
In a deployment with limited memory resources, certain services can be disabled from API endpoint to free system memory or using the rladmin command. Before you turn off a service, make sure that your deployment does not depend on that service.</description></item><item><title>crdb-cli crdb get</title><link>/rs/references/cli-utilities/crdb-cli/crdb/get/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/get/</guid><description>Shows the current configuration of an Active-Active database.
crdb-cli crdb get --crdb-guid &amp;lt;guid&amp;gt; Parameters Parameter Value Description crdb-guid string The GUID of the database (required) Returns Returns the current configuration of the database.
Example $ crdb-cli crdb get --crdb-guid d84f6fe4-5bb7-49d2-a188-8900e09c6f66 CRDB-GUID: d84f6fe4-5bb7-49d2-a188-8900e09c6f66 Name: database1 Encryption: False Causal consistency: False Protocol version: 1 FeatureSet version: 5 Modules: [] Default-DB-Config: memory_size: 1073741824 port: 12000 replication: True shard_key_regex: [{&amp;#39;regex&amp;#39;: &amp;#39;.*\\{(?&amp;lt;tag&amp;gt;.*)\\}.*&amp;#39;}, {&amp;#39;regex&amp;#39;: &amp;#39;(?&amp;lt;tag&amp;gt;.*)&amp;#39;}] sharding: True shards_count: 1 tls_mode: disabled rack_aware: None data_persistence: None authentication_redis_pass: None authentication_admin_pass: None oss_sharding: None oss_cluster: None proxy_policy: None shards_placement: None oss_cluster_api_preferred_ip_type: None bigstore: None bigstore_ram_size: None aof_policy: None snapshot_policy: None max_aof_load_time: None max_aof_file_size: None Instance: Id: 1 Cluster: FQDN: cluster1.</description></item><item><title>Hardware requirements</title><link>/rs/installing-upgrading/hardware-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/hardware-requirements/</guid><description>The hardware requirements for Redis Enterprise Software are different for development and production environments.
In a development environment, you can test your application with a live database.
If you want to test your application under production conditions, use the production environment requirements.
In a production environment you must have enough resources to handle the load on the database and recover from failures.
Development environment You can build your development environment with non-production hardware, such as a laptop, desktop, or small VM or instance, and with these hardware requirements:</description></item><item><title>Hashes in an Active-Active databases</title><link>/rs/databases/active-active/develop/data-types/hashes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/data-types/hashes/</guid><description>Hashes are great for structured data that contain a map of fields and values. They are used for managing distributed user or app session state, user preferences, form data and so on. Hash fields contain string type and string types operate just like the standard Redis string types when it comes to CRDTs. Fields in hashes can be initialized as a string using HSET or HMSET or can be used to initialize counter types that are numeric integers using HINCRBY or floats using HINCRBYFLOAT.</description></item><item><title>CRDB health report requests</title><link>/rs/references/rest-api/requests/crdbs/health_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/crdbs/health_report/</guid><description>Method Path Description GET /v1/crdbs/{crdb_guid}/health_report Get a health report for an Active-Active database Get health report GET /v1/crdbs/{crdb_guid}/health_report Get a health report for an Active-Active database.
Request Example HTTP request GET /crdbs/{crdb_guid}/health_report URL parameters Field Type Description crdb_guid string Globally unique Active-Active database ID (GUID) Query parameters Field Type Description instance_id integer The request retrieves information from the specified Active-Active database instance. If this instance doesn’t exist, the request retrieves information from all instances.</description></item><item><title>CRDB health report configuration object</title><link>/rs/references/rest-api/objects/crdb/health_report/health_report_configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/crdb/health_report/health_report_configuration/</guid><description>An object that represents the database configuration to include in an Active-Active database health report.
Name Type/Value Description causal_consistency boolean Enables causal consistency across Active-Active replicas encryption boolean Intercluster encryption featureset_version integer CRDB active FeatureSet version instances [{ "id": integer, // Unique instance ID "db_uid": string, // Local database instance ID "cluster": { "name": string // Cluster FQDN "url": string // Cluster access URL } }, ...] Local database instances name string Name of database protocol_version integer CRDB active protocol version status string Current status of the configuration.</description></item><item><title>crdb-cli crdb health-report</title><link>/rs/references/cli-utilities/crdb-cli/crdb/health-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/health-report/</guid><description>Shows the health report of the API management layer of an Active-Active database.
crdb-cli crdb health-report --crdb-guid &amp;lt;guid&amp;gt; Parameters Parameter Value Description crdb-guid string The GUID of the database (required) Returns Returns the health report of the API management layer of the database.
Example $ crdb-cli crdb health-report --crdb-guid d84f6fe4-5bb7-49d2-a188-8900e09c6f66 [ { &amp;#34;active_config_version&amp;#34;:1, &amp;#34;cluster_name&amp;#34;:&amp;#34;cluster2.redis.local&amp;#34;, &amp;#34;configurations&amp;#34;:[ { &amp;#34;causal_consistency&amp;#34;:false, &amp;#34;encryption&amp;#34;:false, &amp;#34;featureset_version&amp;#34;:5, &amp;#34;instances&amp;#34;:[ { &amp;#34;cluster&amp;#34;:{ &amp;#34;name&amp;#34;:&amp;#34;cluster1.redis.local&amp;#34;, &amp;#34;url&amp;#34;:&amp;#34;https:\/\/cluster1.redis.local:9443&amp;#34; }, &amp;#34;db_uid&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;id&amp;#34;:1 }, { &amp;#34;cluster&amp;#34;:{ &amp;#34;name&amp;#34;:&amp;#34;cluster2.</description></item><item><title>rladmin help</title><link>/rs/references/cli-utilities/rladmin/help/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/help/</guid><description>Lists all options and parameters for rladmin commands.
rladmin help [command] Parameters Parameter Description command Display help for this rladmin command (optional) Returns Returns a list of available rladmin commands.
If a command is specified, returns a list of all the options and parameters for that rladmin command.
Example $ rladmin help usage: rladmin [options] [command] [command args] Options: -y Assume Yes for all required user confirmations. Commands: bind Bind an endpoint cluster Cluster management commands exit Exit admin shell failover Fail-over master to slave help Show available commands, or use help &amp;lt;command&amp;gt; for a specific command info Show information about tunable parameters migrate Migrate elements between nodes node Node management commands placement Configure shards placement policy recover Recover databases restart Restart database shards status Show status information suffix Suffix management tune Tune system parameters upgrade Upgrade entity version verify Cluster verification reports Use &amp;#34;rladmin help [command]&amp;#34; to get more information on a specific command.</description></item><item><title>High availability and replication</title><link>/rc/databases/configuration/high-availability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/databases/configuration/high-availability/</guid><description>Database replication helps ensure high availability.
When replication is enabled, your dataset is duplicated to create a replica that is synchronized with the primary dataset.
Replication allows for automatic failover and greater fault tolerance. It can prevent data loss in the event of a hardware or zone failure.
Options and plan support Redis Enterprise Cloud supports three levels of replication:
No replication means that you will have a single copy of your database.</description></item><item><title>HyperLogLog in Active-Active databases</title><link>/rs/databases/active-active/develop/data-types/hyperloglog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/data-types/hyperloglog/</guid><description>HyperLogLog is an algorithm that addresses the count-distinct problem. To do this it approximates the numbers of items in a set. Determining the exact cardinality of a set requires memory according to the cardinality of the set. Because it estimates the cardinality by probability, the HyperLogLog algorithm can run with more reasonable memory requirements.
HyperLogLog in Redis Open source Redis implements HyperLogLog (HLL) as a native data-structure. It supports adding elements (PFADD) to an HLL, counting elements (PFCOUNT) of HLLs, and merging of (PFMERGE) HLLs.</description></item><item><title>Identity object</title><link>/rs/references/rest-api/objects/bootstrap/identity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bootstrap/identity/</guid><description> Name Type/Value Description uid integer Assumed node&amp;rsquo;s UID to join cluster. Used to replace a dead node with a new one. accept_servers boolean (default: true) If true, no shards will be created on the node addr string Internal IP address of node external_addr complex object External IP addresses of node. GET /jsonschema to retrieve the object&amp;rsquo;s structure. name string Node&amp;rsquo;s name override_rack_id boolean When replacing an existing node in a rack-aware cluster, allows the new node to be located in a different rack rack_id string Rack ID, overrides cloud config</description></item><item><title>Import database action requests</title><link>/rs/references/rest-api/requests/bdbs/actions/import/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/actions/import/</guid><description>Method Path Description POST /v1/bdbs/{uid}/actions/import Initiate manual dataset import Initiate manual dataset import POST /v1/bdbs/{int: uid}/actions/import Initiate a manual import process.
Permissions Permission name Roles start_bdb_import admin
cluster_member
db_member Request Example HTTP request POST /bdbs/1/actions/import Headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Content-Length 0 Length of the request body in octets URL parameters Field Type Description uid integer The unique ID of the database Body The request may contain a subset of the BDB JSON object, which includes the following import-related attributes:</description></item><item><title>Import reset status database action requests</title><link>/rs/references/rest-api/requests/bdbs/actions/import_reset_status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/actions/import_reset_status/</guid><description>Method Path Description PUT /v1/bdbs/{uid}/actions/import_reset_status Reset database import status Reset database import status PUT /v1/bdbs/{int: uid}/actions/import_reset_status Reset the database’s import_status to idle if a backup is not in progress and clears the value of the import_failure_reason field.
Permissions Permission name Roles reset_bdb_current_import_status admin
cluster_member
db_member Request Example HTTP request PUT /bdbs/1/actions/import_reset_status Headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type URL parameters Field Type Description uid integer The unique ID of the database Response Returns a status code.</description></item><item><title>rladmin info</title><link>/rs/references/cli-utilities/rladmin/info/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/info/</guid><description>Shows the current configuration of specified databases, proxies, clusters, or nodes.
info cluster Lists the current configuration for the cluster.
rladmin info cluster Parameters None
Returns Returns the current configuration for the cluster.
Example $ rladmin info cluster Cluster configuration: repl_diskless: enabled shards_overbooking: disabled default_non_sharded_proxy_policy: single default_sharded_proxy_policy: single default_shards_placement: dense default_fork_evict_ram: enabled default_provisioned_redis_version: 6.0 redis_migrate_node_threshold: 0KB (0 bytes) redis_migrate_node_threshold_percent: 4 (%) redis_provision_node_threshold: 0KB (0 bytes) redis_provision_node_threshold_percent: 12 (%) max_simultaneous_backups: 4 slave_ha: enabled slave_ha_grace_period: 600 slave_ha_cooldown_period: 3600 slave_ha_bdb_cooldown_period: 7200 parallel_shards_upgrade: 0 show_internals: disabled expose_hostnames_for_all_suffixes: disabled login_lockout_threshold: 5 login_lockout_duration: 1800 login_lockout_counter_reset_after: 900 default_concurrent_restore_actions: 10 endpoint_rebind_propagation_grace_time: 15 data_internode_encryption: disabled redis_upgrade_policy: major db_conns_auditing: disabled watchdog profile: local-network http support: enabled upgrade mode: disabled cm_session_timeout_minutes: 15 cm_port: 8443 cnm_http_port: 8080 cnm_https_port: 9443 info db Shows the current configuration for databases.</description></item><item><title>CRDB instance info object</title><link>/rs/references/rest-api/objects/crdb/instance_info/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/crdb/instance_info/</guid><description>An object that represents Active-Active instance info.
Name Type/Value Description id integer Unique instance ID cluster CRDB cluster_info object compression integer Compression level when syncing from this source db_config CRDB database_config object Database configuration db_uid string ID of local database instance. This field is likely to be empty for instances other than the local one.</description></item><item><title>rladmin cluster join</title><link>/rs/references/cli-utilities/rladmin/cluster/join/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/join/</guid><description>Adds a node to an existing cluster.
rladmin cluster join nodes &amp;lt;node IP address&amp;gt; username &amp;lt;admin user email&amp;gt; password &amp;lt;admin password&amp;gt; [ ephemeral_path &amp;lt;path&amp;gt; ] [ persistent_path &amp;lt;path&amp;gt; ] [ ccs_persistent_path &amp;lt;path&amp;gt; ] [ rack_id &amp;lt;node rack ID&amp;gt; ] [ override_rack_id ] [ replace_node &amp;lt;node UID&amp;gt; ] [ flash_enabled ] [ flash_path &amp;lt;path&amp;gt; ] [ addr &amp;lt;IP address&amp;gt; ] [ external_addr &amp;lt;IP address&amp;gt; ] [ override_repair ] [ accept_servers { enabled | disabled } ] [ cmn_http_port &amp;lt;port&amp;gt; ] Parameters Parameter Type/Value Description accept_servers &amp;rsquo;enabled&amp;rsquo;</description></item><item><title>JWT authorize object</title><link>/rs/references/rest-api/objects/jwt_authorize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/jwt_authorize/</guid><description>An API object for user authentication or a JW token refresh request.
Name Type/Value Description password string The user’s password (required) ttl integer (range: 1-86400) (default: 300) Time to live - The amount of time in seconds the token will be valid username string The user’s username (required)</description></item><item><title>Latest database stats requests</title><link>/rs/references/rest-api/requests/bdbs/stats/last/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/stats/last/</guid><description>Method Path Description GET /v1/bdbs/stats/last Get most recent stats for all databases GET /v1/bdbs/{uid} Get most recent stats for a specific database Get latest stats for all databases GET /v1/bdbs/stats/last Get the most recent statistics for all databases.
Required permissions Permission name Roles view_all_bdb_stats admin
cluster_member
cluster_viewer
db_member
db_viewer Request Example HTTP request Without metrics filter (returns all metrics by default)
GET /bdbs/stats/last With metrics filter
GET /bdbs/stats/last?metrics=no_of_keys,used_memory Request headers Key Value Description Host cnm.</description></item><item><title>Cluster last stats requests</title><link>/rs/references/rest-api/requests/cluster/stats/last/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/stats/last/</guid><description>Method Path Description GET /v1/cluster/stats/last Get most recent cluster stats Get latest cluster stats GET /v1/cluster/stats/last Get the most recent cluster statistics.
Required permissions Permission name view_cluster_stats Request Example HTTP request GET /cluster/stats/last?interval=1sec&amp;amp;stime=2015-10-14T06:44:00Z Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Query parameters Field Type Description interval string Time interval for which we want stats: 1sec/10sec/5min/15min/1hour/12hour/1week. Default: 1sec. (optional) stime ISO_8601 Start time from which we want the stats.</description></item><item><title>Latest node stats requests</title><link>/rs/references/rest-api/requests/nodes/stats/last/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/nodes/stats/last/</guid><description>Method Path Description GET /v1/nodes/stats/last Get latest stats for all nodes GET /v1/nodes/stats/last/{uid} Get latest stats for a single node Get latest stats for all nodes GET /v1/nodes/stats/last Get latest statistics for all nodes.
Required permissions Permission name view_all_nodes_stats Request Example HTTP request GET /nodes/stats/last?interval=1sec&amp;amp;stime=2015-10-14T06:29:43Z Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Query parameters Field Type Description interval string Time interval for which we want stats: 1sec/10sec/5min/15min/1hour/12hour/1week.</description></item><item><title>Latest shards stats requests</title><link>/rs/references/rest-api/requests/shards-stats/last/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/shards-stats/last/</guid><description>Method Path Description GET /v1/shards/stats/last Get most recent stats for all shards GET /v1/shards/stats/last/{uid} Get most recent stats for a specific shard Get latest stats for all shards GET /v1/shards/stats/last Get most recent statistics for all shards.
Required permissions Permission name view_all_shard_stats Request Example HTTP request GET /shards/stats/last?interval=1sec&amp;amp;stime=015-05-27T08:27:35Z Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Query parameters Field Type Description interval string Time interval for which we want stats: 1sec/10sec/5min/15min/1hour/12hour/1week.</description></item><item><title>LDAP object</title><link>/rs/references/rest-api/objects/ldap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/ldap/</guid><description>An API object that represents the cluster&amp;rsquo;s LDAP configuration.
Name Type/Value Description bind_dn string DN used when binding with the LDAP server to run queries bind_pass string Password used when binding with the LDAP server to run queries ca_cert string PEM-encoded CA certificate(s) used to validate TLS connections to the LDAP server cache_ttl integer (default: 300) Maximum TTL (in seconds) of cached entries control_plane boolean (default: false) Use LDAP for user authentication/authorization in the control plane data_plane boolean (default: false) Use LDAP for user authentication/authorization in the data plane dn_group_attr string The name of an attribute of the LDAP user entity that contains a list of the groups that user belongs to.</description></item><item><title>Cluster LDAP requests</title><link>/rs/references/rest-api/requests/cluster/ldap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/ldap/</guid><description>Method Path Description GET /v1/cluster/ldap Get LDAP configuration PUT /v1/cluster/ldap Set/update LDAP configuration DELETE /v1/cluster/ldap Delete LDAP configuration Get LDAP configuration GET /v1/cluster/ldap Get the LDAP configuration.
Required permissions Permission name view_ldap_config Request Example HTTP request GET /cluster/ldap Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response Returns an LDAP object.
Example JSON body { &amp;#34;bind_dn&amp;#34;: &amp;#34;rl_admin&amp;#34;, &amp;#34;bind_pass&amp;#34;: &amp;#34;***&amp;#34;, &amp;#34;ca_cert&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;control_plane&amp;#34;: false, &amp;#34;data_plane&amp;#34;: false, &amp;#34;dn_group_attr&amp;#34;: &amp;#34;MemberOf&amp;#34;, &amp;#34;dn_group_query&amp;#34;: {}, &amp;#34;starttls&amp;#34;: false, &amp;#34;uris&amp;#34;: [&amp;#34;ldap://ldap.</description></item><item><title>LDAP mapping object</title><link>/rs/references/rest-api/objects/ldap_mapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/ldap_mapping/</guid><description>An API object that represents an LDAP mapping between an LDAP group and roles.
Name Type/Value Description uid integer LDAP mapping&amp;rsquo;s unique ID account_id integer SM account ID action_uid string Action UID. If it exists, progress can be tracked by the GET /actions/{uid} API (read-only) bdbs_email_alerts complex object UIDs of databases that associated email addresses will receive alerts for cluster_email_alerts boolean Activate cluster email alerts for an associated email dn string An LDAP group&amp;rsquo;s distinguished name email string Email address used for alerts (if set) email_alerts boolean (default: true) Activate email alerts for an associated email name string Role&amp;rsquo;s name role_uids array of integers List of role UIDs associated with the LDAP group</description></item><item><title>Limits object</title><link>/rs/references/rest-api/objects/bootstrap/limits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bootstrap/limits/</guid><description> Name Type/Value Description max_listeners integer (default: 100) Max allowed listeners on node max_redis_servers integer (default: 100) Max allowed Redis servers on node</description></item><item><title>Configure Swap for Linux</title><link>/rs/installing-upgrading/configuring/linux-swap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/configuring/linux-swap/</guid><description>Swap space is used by the Linux OS to help manage memory (pages) by copying pages from RAM to disk and the OS is configured by default to be fairly aggressive. For Redis Enterprise Software (RS) with the way it utilizes and manages memory, it is best to eliminate the likelihood of the OS swapping. If you would like to understand why, please read more on memory limits for best functionality and performance.</description></item><item><title>crdb-cli crdb list</title><link>/rs/references/cli-utilities/crdb-cli/crdb/list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/list/</guid><description>Shows a list of all Active-Active databases.
crdb-cli crdb list Parameters None
Returns Returns a list of all Active-Active databases that the cluster participates in. Each database is represented with a unique GUID, the name of the database, an instance ID, and the FQDN of the cluster that hosts the instance.
Example $ crdb-cli crdb list CRDB-GUID NAME REPL-ID CLUSTER-FQDN d84f6fe4-5bb7-49d2-a188-8900e09c6f66 database1 1 cluster1.redis.local d84f6fe4-5bb7-49d2-a188-8900e09c6f66 database1 2 cluster2.redis.local</description></item><item><title>crdb-cli task list</title><link>/rs/references/cli-utilities/crdb-cli/task/list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/task/list/</guid><description>Lists active and recent Active-Active database tasks.
crdb-cli task list Parameters None
Returns A table listing current and recent Active-Active tasks. Each entry includes the following:
Column Description Task ID String containing the unique ID associated with the taskExample: e1c49470-ae0b-4df8-885b-9c755dd614d0 CRDB-GUID String containing the unique ID associated with the Active-Active database affected by the taskExample: 1d7741cc-1110-4e2f-bc6c-935292783d24 Operation String describing the task actionExample: create_crdb Status String indicating the task statusExample: finished Worker name String identifying the process handling the taskExample: crdb_worker:1:0 Started TimeStamp value indicating when the task started (UTC)Example: 2022-10-12T09:33:41Z Ended TimeStamp value indicating when the task ended (UTC)Example: 2022-10-12T09:33:55Z Example $ crdb-cli task list TASK-ID CRDB-GUID OPERATION STATUS WORKER-NAME STARTED ENDED &amp;lt;task-ID&amp;gt; &amp;lt;crdb-ID&amp;gt; &amp;lt;operation&amp;gt; &amp;lt;result&amp;gt; &amp;lt;worker-ID&amp;gt; &amp;lt;started&amp;gt; &amp;lt;ended&amp;gt;</description></item><item><title>Lists in Active-Active databases</title><link>/rs/databases/active-active/develop/data-types/lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/data-types/lists/</guid><description>Redis lists are simply lists of strings, sorted by insertion order. It is possible to add elements to a Redis List that push new elements to the head (on the left) or to the tail (on the right) of the list. Redis lists can be used to easily implement queues (using LPUSH and RPOP, for example) and stacks (using LPUSH and LPOP, for example).
Lists in Active-Active databases are just the same as regular Redis Lists.</description></item><item><title>Loading object</title><link>/rs/references/rest-api/objects/shard/loading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/shard/loading/</guid><description> Name Type/Value Description progress number, (range: 0-100) Percentage of bytes already loaded status &amp;lsquo;in_progress&amp;rsquo;
&amp;lsquo;idle&amp;rsquo; Status of the load of a dump file (read-only)</description></item><item><title>Log rotation job settings object</title><link>/rs/references/rest-api/objects/job_scheduler/log_rotation_job_settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/job_scheduler/log_rotation_job_settings/</guid><description> Name Type/Value Description cron_expression string CRON expression that defines the log rotation schedule </description></item><item><title>rladmin node maintenance_mode</title><link>/rs/references/cli-utilities/rladmin/node/maintenance-mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/node/maintenance-mode/</guid><description>Configures quorum-only mode on a node.
node maintenance_mode on Migrates shards out of the node and turns the node into a quorum node to prevent shards from returning to it.
rladmin node &amp;lt;ID&amp;gt; maintenance_mode on [ keep_slave_shards ] [ demote_node ] [ max_concurrent_actions &amp;lt;integer&amp;gt; ] Parameters Parameter Type/Value Description node integer Turns the specified node into a quorum node demote_node If the node is a primary node, changes the node to replica keep_slave_shards Keeps replica shards in the node and demotes primary shards to replicas max_concurrent_actions integer Maximum number of concurrent actions during node maintenance Returns Returns OK if the node was converted successfully.</description></item><item><title>Markdown Cheatsheet</title><link>/cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/cheatsheet/</guid><description>Here you can find examples of style and formatting elements that you can use in your pages.
Note: % is used when the inner content of the shortcode is markdown, and &amp;lt; is used when the inner content is HTML. Basic content formatting Tabbed paragraphs A tabbed paragraph create scrolling code blocks like this:
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris efficitur, velit sit amet tempus commodo, orci ipsum laoreet turpis, eu ullamcorper orci enim ut dui.</description></item><item><title>Client prerequisites for mDNS</title><link>/rs/networking/mdns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/mdns/</guid><description>Note: mDNS is only supported for development and testing environments. If you choose to use the mDNS protocol when you set the cluster name, make sure that the configurations and prerequisites for resolving database endpoints are met on the client machines. If you have Replica Of databases on the cluster, the configurations and prerequisites are also required for the Redis Enterprise Software nodes.
To prepare a client or node for mDNS:</description></item><item><title>MDNS server object</title><link>/rs/references/rest-api/objects/services_configuration/mdns_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/services_configuration/mdns_server/</guid><description> Name Type/Value Description operating_mode &amp;lsquo;disabled&amp;rsquo;
&amp;lsquo;enabled&amp;rsquo; Enable/disable the multicast DNS server</description></item><item><title>rladmin migrate</title><link>/rs/references/cli-utilities/rladmin/migrate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/migrate/</guid><description>Moves Redis Enterprise shards or endpoints to a new node in the same cluster.
migrate all_master_shards Moves all primary shards of a specified database or node to a new node in the same cluster.
rladmin migrate { db { db:&amp;lt;id&amp;gt; | &amp;lt;name&amp;gt; } | node &amp;lt;origin node ID&amp;gt; } all_master_shards target_node &amp;lt;id&amp;gt; [ override_policy ] Parameters Parameter Type/Value Description db db:&amp;lt;id&amp;gt;
name Limits migration to a specific database node integer Limits migration to a specific origin node target_node integer Migration target node override_policy Overrides the rack aware policy and allows primary and replica shards on the same node Returns Returns Done if the migration completed successfully.</description></item><item><title>Migrate a database to Active-Active</title><link>/rs/databases/import-export/migrate-to-active-active/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/migrate-to-active-active/</guid><description>With Active-Active databases, applications can read and write to the same dataset from different geographical locations seamlessly and with latency less than 1 ms, without changing the way the application connects to the database. Active-Active databases also provide disaster recovery and accelerated data read-access for geographically distributed users.
If you have data in a single-region Redis Enterprise Software database that you want to migrate to an Active-Active database, you&amp;rsquo;ll need to create a new Active-Active database and migrate the data into the new database as a Replica Of the existing database.</description></item><item><title>CRDB modify request object</title><link>/rs/references/rest-api/objects/crdb/modify_request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/crdb/modify_request/</guid><description>An object to update an Active-Active database.
Name Type/Value Description add_instances array of CRDB instance_info objects List of new CRDB instances crdb CRDB object An object that represents an Active-Active database force_update boolean (Warning: This flag can cause unintended and dangerous changes) Force the configuration update and increment the configuration version even if there is no change to the configuration parameters. If you use force, you can mistakenly cause the other instances to update to the configuration version even though it was not changed.</description></item><item><title>Module object</title><link>/rs/references/rest-api/objects/module/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/module/</guid><description>Represents a Redis module.
Name Type/Value Description uid string Cluster unique ID of module architecture string Architecture used to compile the module author string Module creator capabilities array of strings List of capabilities supported by this module command_line_args string Command line arguments passed to the module config_command string Name of command to configure module arguments at runtime dependencies object dependencies Module dependencies description string Short description of the module display_name string Name of module for display purposes email string Author&amp;rsquo;s email address homepage string Module&amp;rsquo;s homepage is_bundled boolean Whether module came bundled with a version of Redis Enterprise license string Module is distributed under this license min_redis_pack_version string Minimum Redis pack version required by this module min_redis_version string Minimum Redis version required by this module module_file string Module filename module_name string Module&amp;rsquo;s name os string Operating system used to compile the module os_list array of strings List of supported operating systems semantic_version string Module&amp;rsquo;s semantic version sha256 string SHA256 of module binary version integer Module&amp;rsquo;s version</description></item><item><title>Cluster module capabilities requests</title><link>/rs/references/rest-api/requests/cluster/module-capabilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/module-capabilities/</guid><description>Method Path Description GET /v1/cluster/module-capabilities List possible Redis module capabilities List Redis module capabilities GET /v1/cluster/module-capabilities List possible Redis module capabilities.
Required permissions Permission name view_cluster_modules Request Example HTTP request GET /cluster/module-capabilities Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept */* Accepted media type Response Returns a JSON object that contains a list of capability names and descriptions.
Example JSON body { &amp;#34;all_capabilities&amp;#34;: [ {&amp;#34;name&amp;#34;: &amp;#34;types&amp;#34;, &amp;#34;desc&amp;#34;: &amp;#34;module has its own types and not only operate on existing redis types&amp;#34;}, {&amp;#34;name&amp;#34;: &amp;#34;no_multi_key&amp;#34;, &amp;#34;desc&amp;#34;: &amp;#34;module has no methods that operate on multiple keys&amp;#34;} &amp;#34;// additional capabilities.</description></item><item><title>Multi-IP and IPv6</title><link>/rs/networking/multi-ip-ipv6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/multi-ip-ipv6/</guid><description>Redis Enterprise Software (RS) supports server/instances/VMs with multiple IP addresses, as well as IPv6 addresses.
RS related traffic can be logically and physically divided into internal traffic and external traffic:
&amp;ldquo;Internal traffic&amp;rdquo; refers to internal cluster communications, such as communications between the nodes for cluster management purposes. &amp;ldquo;External traffic&amp;rdquo; refers to communications between the clients and the databases, as well as connections to the management UI in the browser. When only one IP address exists on a machine that serves as an RS node, it is used for both internal and external traffic.</description></item><item><title>Network port configurations</title><link>/rs/networking/port-configurations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/port-configurations/</guid><description>All Redis Enterprise Software deployments span multiple physical/virtual nodes. You&amp;rsquo;ll need to keep several ports open between these nodes. This document describes the various port ranges and their uses.
Note: Whenever you create a new database, you must verify that the ports assigned to the new database&amp;rsquo;s endpoints are open. The cluster will not perform this verification for you. Ports and port ranges used by Redis Enterprise Software Redis Enterprise Software&amp;rsquo;s port usage falls into three general categories:</description></item><item><title>Node object</title><link>/rs/references/rest-api/objects/node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/node/</guid><description>An API object that represents a node in the cluster.
Name Type/Value Description uid integer Cluster unique ID of node (read-only) accept_servers boolean (default: true) If true, no shards will be created on the node addr string Internal IP address of node architecture string Hardware architecture (read-only) bigredis_storage_path string Flash storage path (read-only) bigstore_driver &amp;lsquo;ibm-capi-ga1&amp;rsquo;
&amp;lsquo;ibm-capi-ga2&amp;rsquo;
&amp;lsquo;ibm-capi-ga4&amp;rsquo;
&amp;lsquo;rocksdb&amp;rsquo; Bigstore driver name or none bigstore_size integer Storage size of bigstore storage (read-only) cores integer Total number of CPU cores (read-only) ephemeral_storage_path string Ephemeral storage path (read-only) ephemeral_storage_size number Ephemeral storage size (bytes) (read-only) external_addr complex object External IP addresses of node.</description></item><item><title>Node metrics</title><link>/rs/references/rest-api/objects/statistics/node-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/statistics/node-metrics/</guid><description> Metric name Type Description available_flash float Available flash on the node (bytes) available_memory float Available RAM on the node (bytes) avg_latency float Average latency of requests handled by endpoints on the node (micro-sec); returned only when there is traffic bigstore_free float Free space of backend flash (used by flash DB&amp;rsquo;s BigRedis) (bytes); returned only when BigRedis is enabled bigstore_iops float Rate of I/O operations against backend flash for all shards which are part of a flash-based DB (BigRedis) on the node (ops/sec); returned only when BigRedis is enabled bigstore_kv_ops float Rate of value read/write operations against backend flash for all shards which are part of a flash-based DB (BigRedis) on the node (ops/sec); returned only when BigRedis is enabled bigstore_throughput float Throughput of I/O operations against backend flash for all shards which are part of a flash-based DB (BigRedis) on the node (bytes/sec); returned only when BigRedis is enabled conns float Number of clients connected to endpoints on the node cpu_idle float CPU idle time portion (0-1, multiply by 100 to get percent) cpu_system float CPU time portion spent in kernel (0-1, multiply by 100 to get percent) cpu_user float CPU time portion spent by users-pace processes (0-1, multiply by 100 to get percent) cur_aof_rewrites float Number of current AOF rewrites by shards on this node egress_bytes float Rate of outgoing network traffic to the node (bytes/sec) ephemeral_storage_avail float Disk space available to Redis Enterprise processes on configured ephemeral disk (bytes) ephemeral_storage_free float Free disk space on configured ephemeral disk (bytes) free_memory float Free memory on the node (bytes) ingress_bytes float Rate of incoming network traffic to the node (bytes/sec) persistent_storage_avail float Disk space available to Redis Enterprise processes on configured persistent disk (bytes) persistent_storage_free float Free disk space on configured persistent disk (bytes) provisional_flash float Amount of flash available for new shards on this node, taking into account overbooking, max Redis servers, reserved flash, and provision and migration thresholds (bytes) provisional_memory float Amount of RAM available for new shards on this node, taking into account overbooking, max Redis servers, reserved memory, and provision and migration thresholds (bytes) total_req float Request rate handled by endpoints on the node (ops/sec)</description></item><item><title>Node checks job settings object</title><link>/rs/references/rest-api/objects/job_scheduler/node_checks_job_settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/job_scheduler/node_checks_job_settings/</guid><description> Name Type/Value Description cron_expression string CRON expression that defines the node checks schedule </description></item><item><title>Node identity object</title><link>/rs/references/rest-api/objects/bootstrap/node_identity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bootstrap/node_identity/</guid><description> Name Type/Value Description bigstore_driver &amp;lsquo;ibm-capi-ga1&amp;rsquo;
&amp;lsquo;ibm-capi-ga2&amp;rsquo;
&amp;lsquo;ibm-capi-ga4&amp;rsquo;
&amp;lsquo;rocksdb&amp;rsquo; Bigstore driver name or none identity identity object Node identity limits limits object Node limits paths paths object Storage paths object</description></item><item><title>rladmin cluster ocsp</title><link>/rs/references/cli-utilities/rladmin/cluster/ocsp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/ocsp/</guid><description>Manages OCSP configuration and verifies the status of a server certificate maintained by a third-party certificate authority (CA).
ocsp certificate_compatible Checks if the proxy certificate contains an OCSP URI.
rladmin cluster ocsp certificate_compatible Parameters None
Returns Returns the OCSP URI if it exists. Otherwise, it returns an error.
Example $ rladmin cluster ocsp certificate_compatible Success. OCSP URI is http://responder.ocsp.url.com ocsp config Displays or updates OCSP configuration. Run the command without the set option to display the current configuration of a parameter.</description></item><item><title>OCSP object</title><link>/rs/references/rest-api/objects/ocsp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/ocsp/</guid><description>An API object that represents the cluster&amp;rsquo;s OCSP configuration.
Name Type/Value Description ocsp_functionality boolean (default: false) Enables or turns off OCSP for the cluster query_frequency integer (range: 60-86400) (default: 3600) The time interval in seconds between OCSP queries to check the certificate’s status recovery_frequency integer (range: 60-86400) (default: 60) The time interval in seconds between retries after the OCSP responder returns an invalid status for the certificate recovery_max_tries integer (range: 1-100) (default: 5) The number of retries before the validation query fails and invalidates the certificate responder_url string The OCSP server URL embedded in the proxy certificate (if available) (read-only) response_timeout integer (range: 1-60) (default: 1) The time interval in seconds to wait for a response before timing out</description></item><item><title>OCSP status object</title><link>/rs/references/rest-api/objects/ocsp_status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/ocsp_status/</guid><description>An API object that represents the cluster&amp;rsquo;s OCSP status.
Name Type/Value Description cert_status string Indicates the proxy certificate&amp;rsquo;s status: GOOD/REVOKED/UNKNOWN (read-only) responder_url string The OCSP responder URL this status came from (read-only) next_update string The expected date and time of the next certificate status update (read-only) produced_at string The date and time when the OCSP responder signed this response (read-only) revocation_time string The date and time when the certificate was revoked or placed on hold (read-only) this_update string The most recent time that the responder confirmed the current status (read-only)</description></item><item><title>Optimize shards placement database action requests</title><link>/rs/references/rest-api/requests/bdbs/actions/optimize_shards_placement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/actions/optimize_shards_placement/</guid><description>Method Path Description GET /v1/bdbs/{uid}/actions/optimize_shards_placement Get optimized shards placement for a database Get optimized shards placement GET /v1/bdbs/{int: uid}/actions/optimize_shards_placement Get optimized shards placement for the given database.
Required permissions Permission name Roles view_bdb_info admin
cluster_member
cluster_viewer
db_member
db_viewer Request Example HTTP request GET /bdbs/1/actions/optimize_shards_placement Response To rearrange the database shards, you can submit the blueprint returned in this response body as the shards_blueprint field in the PUT /bdbs/{uid} request.</description></item><item><title>User password requests</title><link>/rs/references/rest-api/requests/users/password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/users/password/</guid><description>Method Path Description PUT /v1/users/password Change an existing password POST /v1/users/password Add a new password DELETE /v1/users/password Delete a password Update password PUT /v1/users/password Reset the password list of an internal user to include a new password.
Request Example HTTP request PUT /users/password Example JSON body { &amp;#34;username&amp;#34;: &amp;#34;johnsmith&amp;#34;, &amp;#34;old_password&amp;#34;: &amp;#34;a password that exists in the current list&amp;#34;, &amp;#34;new_password&amp;#34;: &amp;#34;the new (single) password&amp;#34; } Request headers Key Value Description Host cnm.</description></item><item><title>Database passwords requests</title><link>/rs/references/rest-api/requests/bdbs/passwords/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/passwords/</guid><description>Method Path Description PUT /v1/bdbs/{uid}/passwords Update database password POST /v1/bdbs/{uid}/passwords Add database password DELETE /v1/bdbs/{uid}/passwords Delete database password Update database password PUT /v1/bdbs/{int: uid}/passwords Set a single password for the bdb&amp;rsquo;s default user (i.e., for AUTH &amp;lt;password&amp;gt; authentications).
Required permissions Permission name update_bdb Request Example HTTP request PUT /bdbs/1/passwords Example JSON body { &amp;#34;password&amp;#34;: &amp;#34;new password&amp;#34; } The above request resets the password of the bdb to ‘new password’.</description></item><item><title>Paths object</title><link>/rs/references/rest-api/objects/bootstrap/paths/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bootstrap/paths/</guid><description> Name Type/Value Description bigstore_path string Bigredis storage path ccs_persistent_path string Persistent storage path of CCS ephemeral_path string Ephemeral storage path persistent_path string Persistent storage path</description></item><item><title>PDNS server object</title><link>/rs/references/rest-api/objects/services_configuration/pdns_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/services_configuration/pdns_server/</guid><description> Name Type/Value Description operating_mode &amp;lsquo;disabled&amp;rsquo;
&amp;lsquo;enabled&amp;rsquo; Enable/disable the PDNS server</description></item><item><title>CRDB peer stats requests</title><link>/rs/references/rest-api/requests/bdbs/peer_stats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/peer_stats/</guid><description>Method Path Description GET /v1/bdbs/{bdb_uid}/peer_stats Get stats for all CRDB peer instances GET /v1/bdbs/{bdb_uid}/peer_stats/{uid} Get stats for a specific CRDB peer instance Get all CRDB peer stats GET /v1/bdbs/{bdb_uid}/peer_stats Get statistics for all peer instances of a local CRDB instance.
Permissions Permission name Roles view_bdb_stats admin
cluster_member
cluster_viewer
db_member
db_viewer Request Example HTTP request GET /bdbs/1/peer_stats?interval=5min Headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type URL parameters Field Type Description bdb_uid integer The unique ID of the local CRDB instance.</description></item><item><title>Node persistent and ephemeral storage</title><link>/rs/installing-upgrading/persistent-ephemeral-storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/persistent-ephemeral-storage/</guid><description>For each node in the cluster, you can configure both persistent storage and ephemeral storage paths.
Persistent storage is mandatory. It is used by the cluster to store information that needs to persist even if a shard or a node fails, including server logs, configurations, files. For example, if you configure persistence for a database, then the persistence information is stored in this location.
The persistent volume must be a SAN (Storage Area Network) using an EXT4 or XFS file system and be connected as an external storage volume.</description></item><item><title>rladmin placement</title><link>/rs/references/cli-utilities/rladmin/placement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/placement/</guid><description>Configures the shard placement policy for a specified database.
rladmin placement db { db:&amp;lt;id&amp;gt; | &amp;lt;name&amp;gt; } { dense | sparse } Parameters Parameter Type/Value Description db db:&amp;lt;id&amp;gt;
name Configures shard placement for the specified database dense Places new shards on the same node as long as it has resources sparse Places new shards on the maximum number of available nodes within the cluster Returns Returns the new shard placement policy if the policy was changed successfully.</description></item><item><title>Policy object</title><link>/rs/references/rest-api/objects/bootstrap/policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bootstrap/policy/</guid><description> Name Type/Value Description default_fork_evict_ram boolean (default: false) If true, the databases should evict data from RAM to ensure successful replication or persistence default_non_sharded_proxy_policy &amp;lsquo;single&amp;rsquo; &amp;lsquo;all-master-shards&amp;rsquo;
&amp;lsquo;all-nodes&amp;rsquo; Default proxy_policy for newly created non-sharded databases&amp;rsquo; endpoints default_sharded_proxy_policy &amp;lsquo;single&amp;rsquo;
&amp;lsquo;all-master-shards&amp;rsquo; &amp;lsquo;all-nodes&amp;rsquo; Default proxy_policy for newly created sharded databases&amp;rsquo; endpoints default_shards_placement &amp;lsquo;dense&amp;rsquo;
&amp;lsquo;sparse&amp;rsquo; Default shards_placement for newly created databases rack_aware boolean Cluster rack awareness shards_overbooking boolean (default: true) If true, all databases&amp;rsquo; memory_size settings are ignored during shards placement</description></item><item><title>Cluster policy requests</title><link>/rs/references/rest-api/requests/cluster/policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/policy/</guid><description>Method Path Description GET /v1/cluster/policy Get cluster policy settings PUT /v1/cluster/policy Update cluster policy settings Get cluster policy GET /v1/cluster/policy Gets the cluster&amp;rsquo;s current policy settings.
Required permissions Permission name view_cluster_info Request Example HTTP request GET /cluster/policy Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response Returns a cluster settings object.
Example JSON body { &amp;#34;db_conns_auditing&amp;#34;: false, &amp;#34;default_non_sharded_proxy_policy&amp;#34;: &amp;#34;single&amp;#34;, &amp;#34;default_provisioned_redis_version&amp;#34;: &amp;#34;6.0&amp;#34;, &amp;#34;default_sharded_proxy_policy&amp;#34;: &amp;#34;single&amp;#34;, &amp;#34;default_shards_placement&amp;#34;: &amp;#34;dense&amp;#34;, &amp;#34;redis_upgrade_policy&amp;#34;: &amp;#34;major&amp;#34;, &amp;#34;// additional fields.</description></item><item><title>Prometheus integration with Redis Cloud</title><link>/rc/cloud-integrations/prometheus-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/cloud-integrations/prometheus-integration/</guid><description>To collect and display metrics data from your databases, you can connect your Prometheus or Grafana server to your Redis Cloud subscription.
Prometheus is an open source systems monitoring and alerting toolkit that can scrape metrics from different sources. Grafana is an open source metrics dashboard and graph editor that can process Prometheus data. Redis Cloud has an Prometheus compatible endpoint available in order to pull metrics. Prometheus needs to connect to the internal server on port 8070.</description></item><item><title>Proxy object</title><link>/rs/references/rest-api/objects/proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/proxy/</guid><description>An API object that represents a proxy in the cluster.
Name Type/Value Description uid integer Unique ID of the proxy (read-only) backlog integer TCP listen queue backlog client_keepcnt integer Client TCP keepalive count client_keepidle integer Client TCP keepalive idle client_keepintvl integer Client TCP keepalive interval conns integer Number of connections duration_usage_threshold integer, (range: 10-300) Max number of threads dynamic_threads_scaling boolean Automatically adjust the number of threads ignore_bdb_cconn_limit boolean Ignore client connection limits ignore_bdb_cconn_output_buff_limits boolean Ignore buffer limit max_listeners integer Max number of listeners max_servers integer Max number of Redis servers max_threads integer, (range: 1-256) Max number of threads max_worker_client_conns integer Max client connections per thread max_worker_server_conns integer Max server connections per thread max_worker_txns integer Max in-flight transactions per thread threads integer, (range: 1-256) Number of threads threads_usage_threshold integer, (range: 50-99) Max number of threads</description></item><item><title>Enable private and public database endpoints</title><link>/rs/networking/private-public-endpoints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/private-public-endpoints/</guid><description>By default, Redis Enterprise Software databases expose a single endpoint, e.g. cluster.com (FQDN).
When you create a cluster via the UI, you can configure it to expose private and public endpoints. This is common for environments such as cloud platforms and enterprises.
When doing so, the cluster creates an additional FQDN, e.g. internal.cluster.com for private network (e.g. VPC or an internal network), while the cluster.com FQDN can be used by a public network (e.</description></item><item><title>CRDB purge requests</title><link>/rs/references/rest-api/requests/crdbs/purge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/crdbs/purge/</guid><description>Method Path Description PUT /v1/crdbs/{crdb_guid}/purge Purge data from an instance that was forcibly removed from the Active-Active database Purge data from removed instance PUT /v1/crdbs/{crdb_guid}/purge Purge the data from an instance that was removed from the Active-Active database by force.
When you force the removal of an instance from an Active-Active database, the removed instance keeps the data and configuration according to the last successful synchronization.
To delete the data and configuration from the forcefully removed instance you must use this API (Must be executed locally on the removed instance).</description></item><item><title>crdb-cli crdb purge-instance</title><link>/rs/references/cli-utilities/crdb-cli/crdb/purge-instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/purge-instance/</guid><description>Deletes data from a local instance and removes the instance from the Active-Active database.
crdb-cli crdb purge-instance --crdb-guid &amp;lt;guid&amp;gt; --instance-id &amp;lt;instance-id&amp;gt; [ --no-wait ] Once this command finishes, the other replicas must remove this instance with crdb-cli crdb remove-instance --force.
Parameters Parameter Value Description crdb-guid string The GUID of the database (required) instance-id string The ID of the local instance (required) no-wait Does not wait for the task to complete Returns Returns the task ID of the task that is purging the local instance.</description></item><item><title>rladmin cluster recover</title><link>/rs/references/cli-utilities/rladmin/cluster/recover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/recover/</guid><description>Recovers a cluster from a backup file. The default location of the configuration backup file is /var/opt/redislabs/persist/ccs/ccs-redis.rdb.
rladmin cluster recover filename &amp;lt;recovery filename&amp;gt; [ ephemeral_path &amp;lt;path&amp;gt; ] [ persistent_path &amp;lt;path&amp;gt; ] [ ccs_persistent_path &amp;lt;path&amp;gt; ] [ rack_id &amp;lt;ID&amp;gt; ] [ override_rack_id ] [ node_uid &amp;lt;number&amp;gt; ] [ flash_enabled ] [ flash_path &amp;lt;path&amp;gt; ] [ addr &amp;lt;IP address&amp;gt; ] [ external_addr &amp;lt;IP address&amp;gt; ] Parameters Parameter Type/Value Description addr IP address Sets a node&amp;rsquo;s internal IP address.</description></item><item><title>rladmin recover</title><link>/rs/references/cli-utilities/rladmin/recover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/recover/</guid><description>Recovers databases in recovery mode.
recover all Recovers all databases in recovery mode.
rladmin recover all [ only_configuration ] Parameters Parameters Type/Value Description only_configuration Recover database configuration without data Returns Returns Completed successfully if the database was recovered. Otherwise, returns an error.
recover db Recovers a specific database in recovery mode.
rladmin recover db { db:&amp;lt;id&amp;gt; | &amp;lt;name&amp;gt; } [ only_configuration ] Parameters Parameters Type/Value Description db db:&amp;lt;id&amp;gt; name Database to recover only_configuration Recover database configuration without data Returns Returns Completed successfully if the database was recovered.</description></item><item><title>rladmin node recovery_path set</title><link>/rs/references/cli-utilities/rladmin/node/recovery-path/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/node/recovery-path/</guid><description>Sets the node&amp;rsquo;s local recovery path, which specifies the directory where persistence files are stored. You can use these persistence files to recover a failed database.
rladmin node &amp;lt;ID&amp;gt; recovery_path set &amp;lt;path&amp;gt; Parameters Parameter Type/Value Description node integer Sets the recovery path for the specified node path filepath Path to the folder where persistence files are stored Returns Returns Updated successfully if the recovery path was set. Otherwise, it returns an error.</description></item><item><title>Redis OSS Cluster API Architecture</title><link>/rs/clusters/optimize/oss-cluster-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/oss-cluster-api/</guid><description>Redis OSS Cluster API reduces access times and latency with near-linear scalability. The Redis OSS Cluster API provides a simple mechanism for Redis clients to know the cluster topology.
Clients must first connect to the master node to get the cluster topology, and then they connect directly to the Redis proxy on each node that hosts a master shard.
Note: You must use a client that supports the OSS cluster API to connect to a database that has the OSS cluster API enabled.</description></item><item><title>Redis ACL object</title><link>/rs/references/rest-api/objects/redis_acl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/redis_acl/</guid><description>An API object that represents a Redis access control list (ACL)
Name Type/Value Description uid integer Object&amp;rsquo;s unique ID account_id integer SM account ID acl string Redis ACL&amp;rsquo;s string action_uid string Action UID. If it exists, progress can be tracked by the GET /actions/{uid} API (read-only) name string Redis ACL&amp;rsquo;s name</description></item><item><title>Redis cleanup job settings object</title><link>/rs/references/rest-api/objects/job_scheduler/redis_cleanup_job_settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/job_scheduler/redis_cleanup_job_settings/</guid><description> Name Type/Value Description cron_expression string CRON expression that defines the Redis cleanup schedule </description></item><item><title>Refresh JWT requests</title><link>/rs/references/rest-api/requests/users/refresh_jwt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/users/refresh_jwt/</guid><description>Method Path Description POST /v1/users/refresh_jwt Get a new authentication token Get a new authentication token POST /v1/users/refresh_jwt Generate a new JSON Web Token (JWT) for authentication.
Takes a valid token and returns the new token generated by the request.
Request Example HTTP request POST /users/refresh_jwt Request headers Key Value Description Host cnm.cluster.fqdn Domain name Authorization JWT eyJ5bGciOiKIUzI1NiIsInR5cCI6IkpXVCJ9.
eyJpYXViOjE0NjU0NzU0ODYsInVpZFI1IjEiLCJ
leHAiOjE0NjU0Nz30OTZ9.2xYXumd1rDoE0e
dFzcLElMOHsshaqQk2HUNgdsUKxMU Valid JSON Web Token (JWT) Request body Field Type Description ttl integer Time to live - The amount of time in seconds the token will be valid (optional) Response Returns a JSON object that contains the generated access token.</description></item><item><title>rladmin node remove</title><link>/rs/references/cli-utilities/rladmin/node/remove/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/node/remove/</guid><description>Removes the specified node from the cluster.
rladmin node &amp;lt;ID&amp;gt; remove Parameters Parameter Type/Value Description node integer The node to remove from the cluster Returns Returns OK if the node was removed successfully. Otherwise, it returns an error.
Use rladmin status nodes to verify that the node was removed.
Example $ rladmin status nodes CLUSTER NODES: NODE:ID ROLE ADDRESS EXTERNAL_ADDRESS HOSTNAME SHARDS CORES FREE_RAM PROVISIONAL_RAM VERSION STATUS *node:1 master 192.0.2.12 198.</description></item><item><title>crdb-cli crdb remove-instance</title><link>/rs/references/cli-utilities/crdb-cli/crdb/remove-instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/remove-instance/</guid><description>Removes a peer replica instance from the Active-Active database and deletes the instance and its data from the participating cluster.
crdb-cli crdb remove-instance --crdb-guid &amp;lt;guid&amp;gt; --instance-id &amp;lt;instance-id&amp;gt; [ --force ] [ --no-wait ] If the cluster cannot communicate with the instance that you want to remove, you can:
Use the --force option to remove the instance from the Active-Active database without purging the data from the instance.
Run crdb-cli crdb purge-instance from the removed instance to delete the Active-Active database and its data.</description></item><item><title>BDB replica sources status field</title><link>/rs/references/rest-api/objects/bdb/replica_sources_status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bdb/replica_sources_status/</guid><description>The replica_sources status field relates to the Replica Of feature, which enables the creation of a Redis database (single- or multi-shard) that synchronizes data from another Redis database (single- or multi-shard).
The status field represents the Replica Of sync status for a specific sync source.
Possible status values:
Status Description Possible next status &amp;lsquo;out-of-sync&amp;rsquo; Sync process is disconnected from source and trying to reconnect &amp;lsquo;syncing&amp;rsquo; &amp;lsquo;syncing&amp;rsquo; Sync process is in progress &amp;lsquo;in-sync&amp;rsquo; &amp;lsquo;out-of-sync&amp;rsquo; &amp;lsquo;in-sync&amp;rsquo; Sync process finished successfully, and new commands are syncing on a regular basis &amp;lsquo;syncing&amp;rsquo; &amp;lsquo;out-of-sync&amp;rsquo;</description></item><item><title>Database replica sources alerts requests</title><link>/rs/references/rest-api/requests/bdbs/replica_sources-alerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/replica_sources-alerts/</guid><description>Method Path Description GET /v1/bdbs/replica_sources/alerts Get all replica sources alert states for all BDBs GET /v1/bdbs/replica_sources/alerts/{uid} Get all replica sources alert states for a BDB GET /v1/bdbs/replica_sources/alerts/{uid}/{replica_src_id} Get all alert states for a replica source GET /v1/bdbs/replica_sources/alerts/{uid}/{replica_src_id}/{alert} Get a replica source alert state Get all DBs replica sources alert states GET /v1/bdbs/replica_sources/alerts Get all alert states for all replica sources of all BDBs.
Required permissions Permission name view_all_bdbs_alerts Request Example HTTP request GET /bdbs/replica_sources/alerts Request headers Key Value Description Host cnm.</description></item><item><title>BDB replica sync field</title><link>/rs/references/rest-api/objects/bdb/replica_sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bdb/replica_sync/</guid><description>The BDB replica_sync field relates to the Replica Of feature, which enables the creation of a Redis database (single- or multi-shard) that synchronizes data from another Redis database (single- or multi-shard).
You can use the replica_sync field to enable, disable, or pause the Replica Of sync process. The BDB crdt_sync field has a similar purpose for the Redis CRDB.
Possible BDB sync values:
Status Description Possible next status &amp;lsquo;disabled&amp;rsquo; (default value) Disables the sync process and represents that no sync is currently configured or running.</description></item><item><title>rladmin cluster reset_password</title><link>/rs/references/cli-utilities/rladmin/cluster/reset_password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/reset_password/</guid><description>Changes the password for the user associated with the specified email address.
Enter a new password when prompted. Then enter the same password when prompted a second time to confirm the password change.
rladmin cluster reset_password &amp;lt;user email&amp;gt; Parameters Parameter Type/Value Description user email email address The email address of the user that needs a password reset Returns Reports whether the password change succeeded or an error occurred.
Example $ rladmin cluster reset_password user@example.</description></item><item><title>rladmin restart</title><link>/rs/references/cli-utilities/rladmin/restart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/restart/</guid><description>Schedules a restart of the Redis Enterprise Software processes on primary and replica instances of a specific database.
rladmin restart db { db:&amp;lt;id&amp;gt; | &amp;lt;name&amp;gt; } [preserve_roles] [discard_data] [force_discard] Parameters Parameter Type/Value Description db db:&amp;lt;id&amp;gt;
name Restarts Redis Enterprise Software processes for the specified database discard_data Allows discarding data if there is no persistence or replication force_discard Forcibly discards data even if there is persistence or replication preserve_roles Performs an additional failover to maintain shard roles Returns Returns Done if the restart completed successfully.</description></item><item><title>Role object</title><link>/rs/references/rest-api/objects/role/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/role/</guid><description>An API object that represents a role.
Name Type/Value Description uid integer Role&amp;rsquo;s unique ID account_id integer SM account ID action_uid string Action UID. If it exists, progress can be tracked by the GET /actions/{uid} API (read-only) management &amp;lsquo;admin&amp;rsquo;
&amp;lsquo;db_member&amp;rsquo;
&amp;lsquo;db_viewer&amp;rsquo;
&amp;lsquo;cluster_member&amp;rsquo;
&amp;lsquo;cluster_viewer&amp;rsquo;
&amp;lsquo;none&amp;rsquo; Management role name string Role&amp;rsquo;s name</description></item><item><title>Rotate cluster certificates requests</title><link>/rs/references/rest-api/requests/cluster/certificates/rotate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/certificates/rotate/</guid><description>Method Path Description POST /v1/cluster/certificates/rotate Regenerate all internal cluster certificates Rotate cluster certificates POST /v1/cluster/certificates/rotate Regenerates all internal cluster certificates.
The certificate rotation will be performed on all nodes within the cluster. If &amp;ldquo;name&amp;rdquo; is provided, only rotate the specified certificate on all nodes within the cluster.
Request Example HTTP request POST /cluster/certificates/rotate Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response Responds with a 200 OK status code if the internal certificates successfully rotate across the entire cluster.</description></item><item><title>Rotate CCS job settings object</title><link>/rs/references/rest-api/objects/job_scheduler/rotate_ccs_job_settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/job_scheduler/rotate_ccs_job_settings/</guid><description> Name Type/Value Description cron_expression string CRON expression that defines the CCS rotation schedule file_suffix string (default: 5min) String added to the end of the rotated RDB files rotate_max_num integer, (range: 1-100) (default: 24) The maximum number of saved RDB files</description></item><item><title>rladmin cluster running_actions</title><link>/rs/references/cli-utilities/rladmin/cluster/running_actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/running_actions/</guid><description>Lists all active tasks running on the cluster.
rladmin cluster running_actions Parameters None
Returns Returns details about any active tasks running on the cluster.
Example $ rladmin cluster running_actions Got 1 tasks: 1) Task: maintenance_on (ce391d81-8d51-4ce2-8f63-729c7ac2589e) Node: 1 Status: running</description></item><item><title>saslauthd object</title><link>/rs/references/rest-api/objects/services_configuration/saslauthd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/services_configuration/saslauthd/</guid><description> Name Type/Value Description operating_mode &amp;lsquo;disabled&amp;rsquo;
&amp;lsquo;enabled&amp;rsquo; Enable/disable the saslauthd service</description></item><item><title>Cluster services configuration requests</title><link>/rs/references/rest-api/requests/cluster/services_configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/services_configuration/</guid><description>Method Path Description GET /v1/cluster/services_configuration Get cluster services settings PUT /v1/cluster/services_configuration Update cluster services settings Get cluster services configuration GET /v1/cluster/services_configuration Get cluster services settings.
Required permissions Permission name view_cluster_info Request Example HTTP request GET /cluster/services_configuration Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response Returns a services configuration object.
Example JSON body { &amp;#34;cm_server&amp;#34;: { &amp;#34;operating_mode&amp;#34;: &amp;#34;disabled&amp;#34; }, &amp;#34;mdns_server&amp;#34;: { &amp;#34;operating_mode&amp;#34;: &amp;#34;enabled&amp;#34; }, &amp;#34;// additional services.</description></item><item><title>Sets in Active-Active databases</title><link>/rs/databases/active-active/develop/data-types/sets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/data-types/sets/</guid><description>A Redis set is an unordered collection of strings. It is possible to add, remove, and test for the existence of members with Redis commands. A Redis set maintains a unique collection of elements. Sets can be great for maintaining a list of events (click streams), users (in a group conversation), products (in recommendation lists), engagements (likes, shares) and so on.
Sets in Active-Active databases behave the same and maintain additional metadata to achieve an &amp;ldquo;OR-Set&amp;rdquo; behavior to handle concurrent conflicting writes.</description></item><item><title>Shard metrics</title><link>/rs/references/rest-api/objects/statistics/shard-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/statistics/shard-metrics/</guid><description>Metric name Type Description aof_rewrite_inprog float The number of simultaneous AOF rewrites that are in progress avg_ttl float Estimated average time to live of a random key (msec) big_del_flash float Rate of key deletes for keys on flash (BigRedis) (key access/sec). Only returned when BigRedis is enabled. big_del_ram float Rate of key deletes for keys in RAM (BigRedis) (key access/sec); this includes write misses (new keys created). Only returned when BigRedis is enabled.</description></item><item><title>View Redis slow log</title><link>/rs/clusters/logging/redis-slow-log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/logging/redis-slow-log/</guid><description>On the Database &amp;gt; Slow Log page, you can view Slow Log details for Redis Enterprise Software (RS) databases.
Redis Slow Log is one of the best tools for debugging and tracing your Redis database, especially if you experience high latency and high CPU usage with Redis operations. Because Redis is based on a single threaded architecture, Redis Slow Log can be much more useful than slow log mechanisms of multi-threaded database systems such as MySQL Slow Query Log.</description></item><item><title>rladmin node snapshot</title><link>/rs/references/cli-utilities/rladmin/node/snapshot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/node/snapshot/</guid><description>Manages snapshots of the state of a node&amp;rsquo;s shards and endpoints.
node snapshot create Creates a snapshot of a node&amp;rsquo;s current state.
rladmin node &amp;lt;ID&amp;gt; snapshot create &amp;lt;name&amp;gt; Parameters Parameter Type/Value Description node integer Creates a snapshot of the specified node name string Name of the created snapshot Returns Returns Done if the snapshot was created successfully. Otherwise, returns an error.
Example $ rladmin node 1 snapshot create snap1 Creating node snapshot &amp;#39;snap1&amp;#39; for node:1 Done.</description></item><item><title>Snapshot policy object</title><link>/rs/references/rest-api/objects/bdb/snapshot_policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bdb/snapshot_policy/</guid><description> Name Type/Value Description secs integer Interval in seconds between snapshots writes integer Number of write changes required to trigger a snapshot</description></item><item><title>Change socket file locations</title><link>/rs/installing-upgrading/configuring/change-location-socket-files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/installing-upgrading/configuring/change-location-socket-files/</guid><description>There are two default locations for the socket files in Redis Enterprise Software (RS):
/tmp - In clean installations of RS version lower than 5.2.2 /var/opt/redislabs/run - In clean installations of RS version 5.2.2 and higher We made this change because some customers have maintenance procedures that delete the /tmp directory.
When you upgrade from a RS version lower than 5.2.2 to 5.2.2 and higher, the socket files are not moved to the new location by default.</description></item><item><title>Sorted sets in Active-Active databases</title><link>/rs/databases/active-active/develop/data-types/sorted-sets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/data-types/sorted-sets/</guid><description>Note: Redis Geospatial (Geo) is based on Sorted Sets, so the same Active-Active database development instructions apply to Geo. Similar to Redis Sets, Redis Sorted Sets are non-repeating collections of Strings. The difference between the two is that every member of a Sorted Set is associated with a score used to order the Sorted Set from lowest to highest. While members are unique, they may have the same score.</description></item><item><title>State machine object</title><link>/rs/references/rest-api/objects/state-machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/state-machine/</guid><description>A state machine object tracks the status of database actions.
A state machine contains the following attributes:
Name Type/Value Description action_uid string A globally unique identifier of the action object_name string Name of the object being manipulated by the state machine status pending Requested state machine has not started active State machine is currently running completed Operation complete failed Operation or state machine failed name string Name of the running (or failed) state machine state string Current state within the state machine, when known error string A descriptive error string for failed state machine, when known</description></item><item><title>rladmin cluster stats_archiver</title><link>/rs/references/cli-utilities/rladmin/cluster/stats_archiver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/cluster/stats_archiver/</guid><description>Enables or deactivates the stats archiver, which logs statistics in CSV (comma-separated values) format.
rladmin cluster stats_archiver { enabled | disabled } Parameters Parameter Description enabled Turn on the stats archiver disabled Turn off the stats archiver Returns Returns the updated status of the stats archiver.
Example $ rladmin cluster stats_archiver enabled Status: enabled</description></item><item><title>Stats archiver object</title><link>/rs/references/rest-api/objects/services_configuration/stats_archiver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/services_configuration/stats_archiver/</guid><description> Name Type/Value Description operating_mode &amp;lsquo;disabled&amp;rsquo;
&amp;lsquo;enabled&amp;rsquo; Enable/disable the stats archiver service</description></item><item><title>crdb-cli task status</title><link>/rs/references/cli-utilities/crdb-cli/task/status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/task/status/</guid><description>Shows the status of a specified Active-Active database task.
crdb-cli task status --task-id &amp;lt;task_id&amp;gt; Parameters Parameter Value Description task-id &amp;lt;task_id&amp;gt; string An Active-Active database task ID (required) verbose N/A Returns detailed information when specified no-verbose N/A Returns limited information when specified The --verbose and --no-verbose options are mutually incompatible; specify one or the other.
The 404 Not Found error indicates an invalid task ID. Use the task list command to determine available task IDs.</description></item><item><title>rladmin status</title><link>/rs/references/cli-utilities/rladmin/status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/status/</guid><description>Displays the current cluster status and topology information.
status Displays the current status of all nodes, databases, database endpoints, and shards on the cluster.
rladmin status [ extra &amp;lt;parameter&amp;gt; ] [ issues_only] Parameters Parameter Description extra &amp;lt;parameter&amp;gt; Extra options that show more information issues_only Filters out all items that have an OK status Extra parameter Description extra all Shows all extra information extra backups Shows periodic backup status extra frag Shows fragmented memory available after the restart extra nodestats Shows shards per node extra rack_id Shows rack_id if customer is not rack_aware extra redis_version Shows Redis version of all databases in the cluster extra state_machine Shows execution of state machine information extra watchdog Shows watchdog status Returns Returns tables of the status of all nodes, databases, and database endpoints on the cluster.</description></item><item><title>BDB status field</title><link>/rs/references/rest-api/objects/bdb/status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bdb/status/</guid><description>The BDB status field is a read-only field that represents the database status.
Possible status values:
Status Description Possible next status &amp;lsquo;active&amp;rsquo; Database is active and no special action is in progress &amp;lsquo;active-change-pending&amp;rsquo; &amp;lsquo;import-pending&amp;rsquo; &amp;lsquo;delete-pending&amp;rsquo; &amp;lsquo;active-change-pending&amp;rsquo; &amp;lsquo;active&amp;rsquo; &amp;lsquo;creation-failed&amp;rsquo; Initial database creation failed &amp;lsquo;delete-pending&amp;rsquo; Database deletion is in progress &amp;lsquo;import-pending&amp;rsquo; Dataset import is in progress &amp;lsquo;active&amp;rsquo; &amp;lsquo;pending&amp;rsquo; Temporary status during database creation &amp;lsquo;active&amp;rsquo;
&amp;lsquo;creation-failed&amp;rsquo; &amp;lsquo;recovery&amp;rsquo; Not currently relevant (intended for future use)</description></item><item><title>Node status requests</title><link>/rs/references/rest-api/requests/nodes/status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/nodes/status/</guid><description>Method Path Description GET /v1/nodes/status Get the status of all nodes GET /v1/nodes/{uid}/status Get a node&amp;rsquo;s status Get all node statuses GET /v1/nodes/status Gets the status of all nodes. Includes each node&amp;rsquo;s hostname and role in the cluster:
Primary nodes return &amp;quot;role&amp;quot;: &amp;quot;master&amp;quot;
Replica nodes return &amp;quot;role&amp;quot;: &amp;quot;slave&amp;quot;
Required permissions Permission name view_node_info Request Example HTTP request GET /nodes/status Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response For each node in the cluster, returns a JSON object that contains the node&amp;rsquo;s hostname and role.</description></item><item><title>OCSP status requests</title><link>/rs/references/rest-api/requests/ocsp/status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/ocsp/status/</guid><description>Method Path Description GET /v1/ocsp/status Get OCSP status Get OCSP status GET /v1/ocsp/status Gets the latest cached status of the proxy certificate’s OCSP response.
Required permissions Permission name view_ocsp_status Request Example HTTP request GET /ocsp/status Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response Returns an OCSP status object.
Example JSON body { &amp;#34;responder_url&amp;#34;: &amp;#34;http://responder.ocsp.url.com&amp;#34;, &amp;#34;cert_status&amp;#34;: &amp;#34;REVOKED&amp;#34;, &amp;#34;produced_at&amp;#34;: &amp;#34;Wed, 22 Dec 2021 12:50:11 GMT&amp;#34;, &amp;#34;this_update&amp;#34;: &amp;#34;Wed, 22 Dec 2021 12:50:11 GMT&amp;#34;, &amp;#34;next_update&amp;#34;: &amp;#34;Wed, 22 Dec 2021 14:50:00 GMT&amp;#34;, &amp;#34;revocation_time&amp;#34;: &amp;#34;Wed, 22 Dec 2021 12:50:04 GMT&amp;#34; } Error codes When errors occur, the server returns a JSON object with error_code and message fields that provide additional information.</description></item><item><title>Streams in Active-Active databases</title><link>/rs/databases/active-active/develop/data-types/streams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/data-types/streams/</guid><description>A Redis Stream is a data structure that acts like an append-only log. Each stream entry consists of:
A unique, monotonically increasing ID A payload consisting of a series key-value pairs You add entries to a stream with the XADD command. You access stream entries using the XRANGE, XREADGROUP, and XREAD commands (however, see the caveat about XREAD below).
Streams and Active-Active Active-Active databases allow you to write to the same logical stream from more than one region.</description></item><item><title>Strings and bitfields in Active-Active databases</title><link>/rs/databases/active-active/develop/data-types/strings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/active-active/develop/data-types/strings/</guid><description>Active-Active databases support both strings and bitfields.
Note: Active-Active bitfield support was added in RS version 6.0.20. Changes to both of these data structures will be replicated across Active-Active member databases.
Replication semantics Except in the case of string counters (see below), both strings and bitfields are replicated using a &amp;ldquo;last write wins&amp;rdquo; approach. The reason for this is that strings and bitfields are effectively binary objects. So, unlike with lists, sets, and hashes, the conflict resolution semantics of a given operation on a string or bitfield are undefined.</description></item><item><title>rladmin suffix</title><link>/rs/references/cli-utilities/rladmin/suffix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/suffix/</guid><description>Manages the DNS suffixes in the cluster.
suffix add Adds a DNS suffix to the cluster.
rladmin suffix add name &amp;lt;name&amp;gt; [default] [internal] [mdns] [use_aaaa_ns] [slaves &amp;lt;ip&amp;gt;..] Parameters Parameter Type/Value Description name string DNS suffix to add to the cluster default Sets the given suffix as the default. If a default already exists, this overwrites it. internal Forces the given suffix to use private IPs mdns Activates multicast DNS support for the given suffix slaves list of IPv4 addresses The given suffix will notify the frontend DNS servers when a change in the frontend DNS has occurred use_aaaa_ns Activates IPv6 address support Returns Returns Added suffixes successfully if the suffix was added.</description></item><item><title>Suffix object</title><link>/rs/references/rest-api/objects/suffix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/suffix/</guid><description>An API object that represents a DNS suffix in the cluster.
Name Type/Value Description default boolean Suffix is the default suffix for the cluster (read-only) internal boolean Does the suffix point to internal IP addresses (read-only) mdns boolean Support for multicast DNS (read-only) name string Unique suffix name that represents its zone (read-only) slaves array of strings Frontend DNS servers to be updated by this suffix use_aaaa_ns boolean Suffix uses AAAA NS entries (read-only)</description></item><item><title>Sync object</title><link>/rs/references/rest-api/objects/shard/sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/shard/sync/</guid><description> Name Type/Value Description progress integer Number of bytes remaining in current sync status &amp;lsquo;in_progress&amp;rsquo;
&amp;lsquo;idle&amp;rsquo;
&amp;lsquo;link_down&amp;rsquo; Indication of the shard&amp;rsquo;s current sync status</description></item><item><title>Database syncer source stats requests</title><link>/rs/references/rest-api/requests/bdbs/sync_source_stats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/sync_source_stats/</guid><description>Method Path Description GET /v1/bdbs/{bdb_uid}/sync_source_stats Get stats for all syncer sources GET /v1/bdbs/{bdb_uid}/sync_source_stats/{uid} Get stats for a specific syncer instance Get all syncer source stats GET /v1/bdbs/{bdb_uid}/sync_source_stats Get stats for all syncer sources of a local database.
Permissions Permission name Roles view_bdb_stats admin
cluster_member
cluster_viewer
db_member
db_viewer Request Example HTTP request GET /bdbs/1/sync_source_stats?interval=5min Headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type URL parameters Field Type Description bdb_uid integer The unique ID of the local database.</description></item><item><title>Syncer sources object</title><link>/rs/references/rest-api/objects/bdb/syncer_sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/bdb/syncer_sources/</guid><description> Name Type/Value Description uid integer Unique ID of this source client_cert string Client certificate to use if encryption is enabled client_key string Client key to use if encryption is enabled compression integer, (range: 0-6) Compression level for the replication link encryption boolean Encryption enabled/disabled lag integer Lag in milliseconds between source and destination (while synced) last_error string Last error encountered when syncing from the source last_update string Time when we last received an update from the source rdb_size integer The source&amp;rsquo;s RDB size to be transferred during the syncing phase rdb_transferred integer Number of bytes transferred from the source&amp;rsquo;s RDB during the syncing phase replication_tls_sni string Replication TLS server name indication server_cert string Server certificate to use if encryption is enabled status string Sync status of this source uri string Source Redis URI</description></item><item><title>Terminology in Redis Enterprise Software</title><link>/rs/references/terminology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/terminology/</guid><description>Here are explanations of some of the terms used in Redis Enterprise Software.
Node A node is a physical machine, virtual machine, container or cloud instance on which the RS installation package was installed and the setup process was run in order to make the machine part of the cluster.
Each node is a container for running multiple open source Redis instances, referred to as &amp;ldquo;shards&amp;rdquo;.
The recommended configuration for a production cluster is an uneven number of nodes, with a minimum of three.</description></item><item><title>Create IAM resources using Terraform</title><link>/rc/cloud-integrations/aws-cloud-accounts/iam-resources/terraform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/cloud-integrations/aws-cloud-accounts/iam-resources/terraform/</guid><description>You can use HashiCorp Terraform to create identity and access management (IAM) resources to support AWS cloud account access to Redis Enterprise Cloud subscriptions.
The following example uses the terraform-aws-Redislabs-Cloud-Account-IAM-Resources module, located in Amazon S3:
Create a main.tf as shown below (update the profile, region, and pgp_key values as appropriate).
Note that a pgp_key is required. For details, see the Terraform docs.
View terraformIAMTemplate.json &amp;lt;div class=&amp;quot;highlight&amp;quot;&amp;gt;&amp;lt;pre tabindex=&amp;quot;0&amp;quot; style=&amp;quot;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-js&amp;quot; data-lang=&amp;quot;js&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span style=&amp;quot;color:#75af00&amp;quot;&amp;gt;provider&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;aws&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#75af00&amp;quot;&amp;gt;profile&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;=&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;tobyhf-admin&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#75af00&amp;quot;&amp;gt;region&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;=&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;us-east-1&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;}&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span style=&amp;quot;color:#75af00&amp;quot;&amp;gt;module&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;Redislabs-Cloud-Account-Resources&amp;amp;#34;&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#111&amp;quot;&amp;gt;{&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;display:flex;&amp;quot;&amp;gt;&amp;lt;span&amp;gt; &amp;lt;span style=&amp;quot;color:#75af00&amp;quot;&amp;gt;source&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#f92672&amp;quot;&amp;gt;=&amp;lt;/span&amp;gt; &amp;lt;span style=&amp;quot;color:#d88200&amp;quot;&amp;gt;&amp;amp;#34;https://iam-resource-automation-do-not-delete.</description></item><item><title>OCSP test requests</title><link>/rs/references/rest-api/requests/ocsp/test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/ocsp/test/</guid><description>Method Path Description POST /v1/ocsp/test Test OCSP Test OCSP POST /v1/ocsp/test Queries the OCSP server for the proxy certificate’s latest status and returns the response as JSON. It caches the response if the OCSP feature is enabled.
Required permissions Permission name test_ocsp_status Request Example HTTP request POST /ocsp/test Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Response Returns an OCSP status object.
Example JSON body { &amp;#34;responder_url&amp;#34;: &amp;#34;http://responder.</description></item><item><title>rladmin tune</title><link>/rs/references/cli-utilities/rladmin/tune/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/tune/</guid><description>Configures parameters for databases, proxies, nodes, and clusters.
tune cluster Configures cluster parameters.
rladmin tune cluster [ repl_diskless { enabled | disabled } ] [ redis_provision_node_threshold &amp;lt;size&amp;gt; ] [ redis_migrate_node_threshold &amp;lt;size&amp;gt; ] [ redis_provision_node_threshold_percent &amp;lt;percent&amp;gt; ] [ redis_migrate_node_threshold_percent &amp;lt;percent&amp;gt; ] [ max_simultaneous_backups &amp;lt;size&amp;gt; ] [ watchdog_profile { cloud | local-network } ] [ slave_ha { enabled | disabled } ] [ slave_ha_grace_period &amp;lt;seconds&amp;gt; ] [ slave_ha_cooldown_period &amp;lt;seconds&amp;gt; ] [ slave_ha_bdb_cooldown_period &amp;lt;seconds&amp;gt; ] [ max_saved_events_per_type &amp;lt;value&amp;gt; ] [ parallel_shards_upgrade &amp;lt;value&amp;gt; ] [ default_concurrent_restore_actions &amp;lt;value&amp;gt; ] [ show_internals { enabled | disabled } ] [ expose_hostnames_for_all_suffixes { enabled | disabled } ] [ redis_upgrade_policy { latest | major } ] [ default_redis_version &amp;lt;value&amp;gt; ] [ data_internode_encryption { enabled | disabled } ] [ db_conns_auditing { enabled | disabled } ] [ acl_pubsub_default { resetchannels | allchannels } ] Redis cluster watchdog supports two preconfigured profiles:</description></item><item><title>crdb-cli crdb update</title><link>/rs/references/cli-utilities/crdb-cli/crdb/update/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/crdb-cli/crdb/update/</guid><description>Updates the configuration of an Active-Active database.
crdb-cli crdb update --crdb-guid &amp;lt;guid&amp;gt; [--no-wait] [--force] [--default-db-config &amp;lt;configuration&amp;gt; ] [--default-db-config-file &amp;lt;filename&amp;gt;] [--compression &amp;lt;0-6&amp;gt;] [--causal-consistency { true | false } ] [--credentials id=&amp;lt;id&amp;gt;,username=&amp;lt;username&amp;gt;,password=&amp;lt;password&amp;gt; ] [--encryption { true | false } ] [--oss-cluster { true | false } ] [--featureset-version { true | false } ] [--memory-size &amp;lt;maximum_memory&amp;gt;] [--bigstore-ram-size &amp;lt;maximum_memory&amp;gt;] [--update-module name=&amp;lt;name&amp;gt;,featureset_version=&amp;lt;version&amp;gt;] If you want to change the configuration of the local instance only, use rladmin instead.</description></item><item><title>Update cluster certificate requests</title><link>/rs/references/rest-api/requests/cluster/update-cert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/cluster/update-cert/</guid><description>Method Path Description PUT /v1/cluster/update_cert Update a cluster certificate Update cluster certificate PUT /v1/cluster/update_cert Replaces an existing certificate on all nodes within the cluster with a new certificate. The new certificate must pass validation before it can replace the old certificate.
See the certificates table for the list of cluster certificates and their descriptions.
Request Example HTTP request PUT /cluster/update_cert Example JSON body { &amp;#34;name&amp;#34;: &amp;#34;certificate1&amp;#34;, &amp;#34;key&amp;#34;: &amp;#34;-----BEGIN RSA PRIVATE KEY-----\n[key_content]\n-----END RSA PRIVATE KEY-----&amp;#34;, &amp;#34;certificate&amp;#34;: &amp;#34;-----BEGIN CERTIFICATE-----\n[cert_content]\n-----END CERTIFICATE-----&amp;#34;, } Replace [key_content] with the content of the private key and [cert_content] with the content of the certificate.</description></item><item><title>CRDB updates requests</title><link>/rs/references/rest-api/requests/crdbs/updates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/crdbs/updates/</guid><description>Method Path Description POST /v1/crdbs/{crdb_guid}/updates Modify Active-Active confgurarion Modify Active-Active configuration POST /v1/crdbs/{crdb_guid}/updates Modify Active-Active configuration.
Warning - This is a very powerful API request and can cause damage if used incorrectly. In order to add or remove instances, you must use this API. For simple configuration updates, it is recommended to use PATCH on /crdbs/{crdb_guid} instead.
Updating default_db_config affects both existing and new instances that may be added.</description></item><item><title>rladmin upgrade</title><link>/rs/references/cli-utilities/rladmin/upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/upgrade/</guid><description>Upgrades the version of a module or Redis Enterprise Software for a database.
upgrade db Schedules a restart of the primary and replica processes of a database and then upgrades the database to the latest version of Redis Enterprise Software.
For more information, see Upgrade an existing Redis Software Deployment.
rladmin upgrade db { db:&amp;lt;id&amp;gt; | &amp;lt;name&amp;gt; } [ preserve_roles ] [ keep_redis_version ] [ discard_data ] [ force_discard ] [ parallel_shards_upgrade ] [ keep_crdt_protocol_version ] [ redis_version &amp;lt;version&amp;gt; ] [ force ] [ { latest_with_modules | and module module_name &amp;lt;module name&amp;gt; version &amp;lt;version&amp;gt; module_args &amp;lt;arguments string&amp;gt; } ] As of v6.</description></item><item><title>Database upgrade modules requests</title><link>/rs/references/rest-api/requests/bdbs/modules/upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/modules/upgrade/</guid><description>Method Path Description POST /v1/bdbs/{uid}/modules/upgrade Upgrade module Upgrade module POST /v1/bdbs/{string: uid}/modules/upgrade Upgrades module version on a specific BDB.
Required permissions Permission name edit_bdb_module Request Example HTTP request POST /bdbs/1/modules/upgrade Example JSON body { &amp;#34;modules&amp;#34;: [ {&amp;#34;module_name&amp;#34;: &amp;#34;ReJson&amp;#34;, &amp;#34;current_semantic_version&amp;#34;: &amp;#34;2.2.1&amp;#34;, &amp;#34;new_module&amp;#34;: &amp;#34;aa3648d79bd4082d414587c42ea0b234&amp;#34;} ], &amp;#34;// Optional fields to fine-tune restart and failover behavior:&amp;#34;, &amp;#34;preserve_roles&amp;#34;: true, &amp;#34;may_discard_data&amp;#34;: false } Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Request body Field Type Description modules list List of dicts representing the modules that will be upgraded.</description></item><item><title>Database upgrade requests</title><link>/rs/references/rest-api/requests/bdbs/upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bdbs/upgrade/</guid><description>Method Path Description POST /v1/bdbs/{uid}/upgrade Upgrade database Upgrade database POST /v1/bdbs/{int: uid}/upgrade Upgrade a database.
Required permissions Permission name update_bdb_with_action Request Example HTTP request POST /bdbs/1/upgrade Example JSON body { &amp;#34;swap_roles&amp;#34;: true, &amp;#34;may_discard_data&amp;#34;: false } Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Request body Field Type Description force_restart boolean Restart shards even if no version change (default: false) keep_redis_version boolean Keep current Redis version (default: false) keep_crdt_protocol_version boolean Keep current crdt protocol version (default: false) may_discard_data boolean Discard data in a non-replicated, non-persistent bdb (default: false) force_discard boolean Discard data even if the bdb is replicated and/or persistent (default: false) preserve_roles boolean Preserve shards&amp;rsquo; master/replica roles (requires an extra failover) (default: false) parallel_shards_upgrade integer Max number of shards to upgrade in parallel (default: all) modules list of modules List of dicts representing the modules that will be upgraded.</description></item><item><title>Upgrade module requests</title><link>/rs/references/rest-api/requests/modules/upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/modules/upgrade/</guid><description>Method Path Description POST /v1/modules/upgrade/bdb/{uid} Upgrade module Upgrade module POST /v1/modules/upgrade/bdb/{string: uid} Upgrades the module version on a specific database.
Required permissions Permission name edit_bdb_module Request Example HTTP request POST /modules/upgrade/bdb/1 Example JSON body { &amp;#34;modules&amp;#34;: [ {&amp;#34;module_name&amp;#34;: &amp;#34;ReJson&amp;#34;, &amp;#34;current_semantic_version&amp;#34;: &amp;#34;2.2.1&amp;#34;, &amp;#34;new_module&amp;#34;: &amp;#34;aa3648d79bd4082d414587c42ea0b234&amp;#34;} ], &amp;#34;// Optional fields to fine-tune restart and failover behavior:&amp;#34;, &amp;#34;preserve_roles&amp;#34;: true, &amp;#34;may_discard_data&amp;#34;: false } Request headers Key Value Description Host cnm.cluster.fqdn Domain name Accept application/json Accepted media type Request body Field Type Description modules list List of dicts representing the modules that will be upgraded.</description></item><item><title>User object</title><link>/rs/references/rest-api/objects/user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/objects/user/</guid><description>An API object that represents a Redis Enterprise user.
Name Type/Value Description uid integer User&amp;rsquo;s unique ID account_id integer SM account ID action_uid string Action UID. If it exists, progress can be tracked by the GET /actions/{uid} API request (read-only) auth_method &amp;rsquo;external&amp;rsquo;
&amp;lsquo;regular&amp;rsquo; User&amp;rsquo;s authentication method bdbs_email_alerts complex object UIDs of databases that user will receive alerts for cluster_email_alerts boolean Activate cluster email alerts for a user email string User&amp;rsquo;s email (pattern matching only ASCII characters) email_alerts boolean (default: true) Activate email alerts for a user name string User&amp;rsquo;s name (pattern does not allow non-ASCII and special characters &amp;amp;,&amp;lt;,&amp;gt;,&amp;quot;) password string User&amp;rsquo;s password.</description></item><item><title>Manage user account and profile</title><link>/rc/accounts/user-profile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/accounts/user-profile/</guid><description>When you sign in to the Redis Cloud admin console, you use a profile associated with one or more Redis Cloud accounts.
This account has a profile with settings that you can manage using the Profile control located near the top, right corner of the admin console:
When you open the Profile control, you can:
Review and manage your user account profile.
Sign out from the admin console.
Switch between Redis Cloud subscriptions administered by your user account.</description></item><item><title>Bootstrap validation requests</title><link>/rs/references/rest-api/requests/bootstrap/validate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/bootstrap/validate/</guid><description>Method Path Description POST /v1/bootstrap/validate/{action} Perform bootstrap validation Bootstrap validation POST /v1/bootstrap/validate/{action} Perform bootstrap validation.
Unlike actual bootstrapping, this request blocks and immediately returns with a response.
Request Example HTTP request POST /bootstrap/validate/join_cluster Request body The request must contain a bootstrap configuration object, similar to the one used for actual bootstrapping.
Response If an error occurs, the call returns a bootstrap_status JSON object that contains the following fields:
Field Description state Current bootstrap state.</description></item><item><title>rladmin verify</title><link>/rs/references/cli-utilities/rladmin/verify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/cli-utilities/rladmin/verify/</guid><description>Prints verification reports for the cluster.
verify balance Prints a balance report that displays all of the unbalanced endpoints or nodes in the cluster.
rladmin verify balance [ node &amp;lt;ID&amp;gt; ] The proxy policy determines which nodes or endpoints to report as unbalanced.
A node is unbalanced if:
all-nodes proxy policy and the node has no endpoint An endpoint is unbalanced in the following cases:
single proxy policy and one of the following is true: Shard placement is sparse and none of the master shards are on the node Shard placement is dense and some master shards are on a different node from the endpoint all-master-shards proxy policy and one of the following is true: None of the master shards are on the node Some master shards are on a different node from the endpoint Parameters Parameter Type/Value Description node integer Specify a node ID to return a balance table for that node only (optional) Returns Returns a table of unbalanced endpoints and nodes in the cluster.</description></item><item><title>Use the WAIT command for strong consistency</title><link>/rs/clusters/optimize/wait/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/wait/</guid><description>Redis Enterprise Software comes with the ability to replicate data to another replica for high availability and persist in-memory data on disk permanently for durability. With the WAIT command, you can control the consistency and durability guarantees for the replicated and persisted database.
Any updates that are issued to the database are typically performed with the following flow shown below;
Application issues a write, Proxy communicates with the correct master &amp;ldquo;shard&amp;rdquo; in the system that contains the given key, The acknowledgment is sent to proxy once the write operation completes The proxy sends the acknowledgment back to the application.</description></item></channel></rss>