<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configure database settings on Redis Documentation Center</title><link>/rs/databases/configure/</link><description>Recent content in Configure database settings on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/rs/databases/configure/index.xml" rel="self" type="application/rss+xml"/><item><title>Enable OSS Cluster API</title><link>/rs/databases/configure/oss-cluster-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/oss-cluster-api/</guid><description>Redis OSS Cluster API reduces access times and latency with near-linear scalability. The Redis OSS Cluster API provides a simple mechanism for Redis clients to know the cluster topology.
Clients must first connect to the master node to get the cluster topology, and then they connect directly to the Redis proxy on each node that hosts a master shard.
Note: You must use a client that supports the OSS cluster API to connect to a database that has the OSS cluster API enabled.</description></item><item><title>Configure database persistence</title><link>/rs/databases/configure/database-persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/database-persistence/</guid><description>All data is stored and managed exclusively in either RAM or RAM + flash Memory (Redis on Flash) and therefore, is at risk of being lost upon a process or server failure. As Redis Enterprise Software is not just a caching solution, but also a full-fledged database, persistence to disk is critical. Therefore, Redis Enterprise Software supports persisting data to disk on a per-database basis and in multiple ways.
Persistence can be configured either during database creation or by editing an existing database&amp;rsquo;s configuration.</description></item><item><title>Configure proxy policy</title><link>/rs/databases/configure/proxy-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/proxy-policy/</guid><description>Redis Enterprise Software (RS) provides high-performance data access through a proxy process that manages and optimizes access to shards within the RS cluster. Each node contains a single proxy process. Each proxy can be active and take incoming traffic or it can be passive and wait for failovers.
Proxy policies A database can have one of these proxy policies:
Proxy Policy Description Single There is only a single proxy that is bound to the database.</description></item><item><title>Configure high availability for replica shards</title><link>/rs/databases/configure/replica-ha/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/replica-ha/</guid><description>&lt;p>When you enable &lt;a href="../../../rs/databases/durability-ha/replication/">database replication&lt;/a>,
Redis Enterprise Software copies your data to a replica node to make your data highly available.
If the replica node fails or if the primary (master) node fails and the replica is promoted to primary,
the remaining primary node is a single point of failure.&lt;/p></description></item><item><title>Configure shard placement</title><link>/rs/databases/configure/shard-placement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/configure/shard-placement/</guid><description>In Redis Enterprise Software , the location of master and replica shards on the cluster nodes can impact the database and node performance. Master shards and their corresponding replica shards are always placed on separate nodes for data resiliency. The shard placement policy helps to maintain optimal performance and resiliency.
In addition to the shard placement policy, considerations that determine shard placement are:
Separation of master and replica shards Available persistence and Redis on Flash (RoF) storage Rack awareness Memory available to host the database when fully populated The shard placement policies are:</description></item></channel></rss>