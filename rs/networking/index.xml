<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Manage networks on Redis Documentation Center</title><link>/rs/networking/</link><description>Recent content in Manage networks on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/rs/networking/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS Route53 DNS management</title><link>/rs/networking/configuring-aws-route53-dns-redis-enterprise/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/configuring-aws-route53-dns-redis-enterprise/</guid><description>Redis Enterprise Software requires DNS to be properly configured to achieve high availability and fail-over regardless of where it is installed.
Here, you learn how to configure AWS Route53 DNS resolution.
Prerequisites You need to have a domain name registered. Then, either you need to have Amazon&amp;rsquo;s Route53 as the primary/master nameserver (NS) for this domain or for a delegated zone under this domain. Finally, you need to have the zone (either the whole domain or a sub-zone) defined in AWS Route53.</description></item><item><title>Set up cluster behind a load balancer</title><link>/rs/networking/cluster-lba-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/cluster-lba-setup/</guid><description>When you want to setup a Redis Enterprise cluster in an environment that doesn&amp;rsquo;t allow DNS, you can use a load balancer (LB) to direct traffic to the cluster nodes.
DNS role for databases Normally, Redis Enterprise uses DNS to provide dynamic database endpoints. A DNS name such as redis-12345.clustername.domain gives clients access to the database resource:
If multiple proxies are in use, the DNS name resolves to multiple IP addresses so that clients can load balance.</description></item><item><title>Configure cluster DNS</title><link>/rs/networking/cluster-dns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/cluster-dns/</guid><description>By default, Redis Enterprise Software deployments use DNS to communicate between nodes. You can also use the Discovery Service, which uses IP addresses to connect and complies with the Redis Sentinel API supported by open source Redis.
Each node in a Redis Enterprise cluster includes a small DNS server to manage internal functions, such as high availability, automatic failover, automatic migration, and so on. Nodes should only run the DNS server included with the software.</description></item><item><title>Client prerequisites for mDNS</title><link>/rs/networking/mdns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/mdns/</guid><description>Note: mDNS is only supported for development and testing environments. If you choose to use the mDNS protocol when you set the cluster name, make sure that the configurations and prerequisites for resolving database endpoints are met on the client machines. If you have Replica Of databases on the cluster, the configurations and prerequisites are also required for the Redis Enterprise Software nodes.
To prepare a client or node for mDNS:</description></item><item><title>Multi-IP and IPv6</title><link>/rs/networking/multi-ip-ipv6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/multi-ip-ipv6/</guid><description>Redis Enterprise Software (RS) supports server/instances/VMs with multiple IP addresses, as well as IPv6 addresses.
RS related traffic can be logically and physically divided into internal traffic and external traffic:
&amp;ldquo;Internal traffic&amp;rdquo; refers to internal cluster communications, such as communications between the nodes for cluster management purposes. &amp;ldquo;External traffic&amp;rdquo; refers to communications between the clients and the databases, as well as connections to the management UI in the browser. When only one IP address exists on a machine that serves as an RS node, it is used for both internal and external traffic.</description></item><item><title>Network port configurations</title><link>/rs/networking/port-configurations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/port-configurations/</guid><description>All Redis Enterprise Software deployments span multiple physical/virtual nodes. You&amp;rsquo;ll need to keep several ports open between these nodes. This document describes the various port ranges and their uses.
Note: Whenever you create a new database, you must verify that the ports assigned to the new database&amp;rsquo;s endpoints are open. The cluster will not perform this verification for you. Ports and port ranges used by Redis Enterprise Software Redis Enterprise Software&amp;rsquo;s port usage falls into three general categories:</description></item><item><title>Enable private and public database endpoints</title><link>/rs/networking/private-public-endpoints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/networking/private-public-endpoints/</guid><description>By default, Redis Enterprise Software databases expose a single endpoint, e.g. cluster.com (FQDN).
When you create a cluster via the UI, you can configure it to expose private and public endpoints. This is common for environments such as cloud platforms and enterprises.
When doing so, the cluster creates an additional FQDN, e.g. internal.cluster.com for private network (e.g. VPC or an internal network), while the cluster.com FQDN can be used by a public network (e.</description></item></channel></rss>