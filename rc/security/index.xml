<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Redis Documentation Center</title><link>/rc/security/</link><description>Recent content in Security on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/rc/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis Cloud shared responsibility model</title><link>/rc/security/shared-responsibility-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/shared-responsibility-model/</guid><description>The security of all Redis Enterprise Cloud deployments is a shared responsibility. Redis, the public cloud providers (Amazon Web Services [AWS], Google Cloud Platform [GCP], and Microsoft Azure), and our customers all help ensure the security of these deployments.
Redis responsibility Redis Enterprise Cloud&amp;rsquo;s offerings are managed by Redis and deployed on AWS, Azure, and Google Cloud infrastructure.
Redis is responsible for the software that runs Redis Enterprise Cloud. This includes the patching and maintenance of the operating systems that Redis is deployed on as well as the patching and maintenance of Redis Enterprise Cloud.</description></item><item><title>Access management</title><link>/rc/security/access-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/access-management/</guid><description>The Access management screen helps you manage:
The team of users allowed to access your subscription and its databases The API keys that authenticate application access to your account Single sign-on (SSO) with SAML Here, you learn how to manage your team&amp;rsquo;s users and to control their level of access.
For help managing API keys, see Manage API keys.
Manage team access The Team tab lets you manage the people allowed to access your account.</description></item><item><title>Configure CIDR allow list</title><link>/rc/security/cidr-whitelist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/cidr-whitelist/</guid><description>The CIDR allow list lets you restrict traffic to your Redis Cloud database. When you configure an allow list, only the IP addresses defined in the list can connect to the database. Traffic from all other IP addresses is blocked.
Database allow list You can configure your database&amp;rsquo;s CIDR allow list to restrict client connections to a specific range of IP addresses.
Define CIDR allow list To define the CIDR allow list for a database:</description></item><item><title>Encryption at rest</title><link>/rc/security/encryption-at-rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/encryption-at-rest/</guid><description>Redis Cloud databases write their data to disk whenever persistence is enabled.
Redis Cloud deployments are always encrypted at rest.
Encryption at rest on AWS Persistent data is written to encrypted EBS volumes.
When Redis on Flash is enabled, the flash memory data is written to encrypted NVMe SSD volumes.
Disk encryption on GCP All data written to disk on GCP-based Redis Cloud deployments is encrypted by default. When deploying a Redis Cloud database on GCP, you don&amp;rsquo;t need to take any actions to enable this encryption.</description></item><item><title>Multi-factor authentication</title><link>/rc/security/multi-factor-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/multi-factor-authentication/</guid><description>To reduce the chances of unauthorized access, Redis Enterprise Cloud allows users to enable multi-factor authentication (MFA).
When MFA is enabled, users must enter their username, password, and an authentication code when signing in. MFA requires a mobile device that can receive these authentication codes over text messaging. In addition, you may use an authenticator app such as Google Authenticator as one of your factors.
To further increase the security of the account, the account owner can require MFA enforcement for all users.</description></item><item><title>Enable Private Service Connect</title><link>/rc/security/private-service-connect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/private-service-connect/</guid><description>Private Service Connect (PSC) creates a private endpoint that allows secure connections to Redis Cloud databases without exposing your application&amp;rsquo;s virtual private cloud (VPC).
This feature is only available for Flexible and Annual subscriptions hosted on Google Cloud Platform (GCP).
Considerations You can use Private Service Connect as an alternative to VPC peering, or you can enable both for your subscription.
Compared to VPC peering, Private Service Connect:
Only exposes the private endpoint instead of the entire application VPC network.</description></item><item><title>Enable VPC peering</title><link>/rc/security/vpc-peering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rc/security/vpc-peering/</guid><description>VPC peering uses private IP addresses to allow network connections between two virtual private clouds (VPCs).
You can connect your VPC in the Redis Cloud subscription to the VPC of your application. This lets your application connect securely to your Redis Cloud database using VPC peering to optimize the performance of your application.
Note: VPC peering is available only with Flexible or Annual subscriptions. It is not supported for Fixed or Free subscriptions.</description></item></channel></rss>