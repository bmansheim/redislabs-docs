<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Connect to a database on Redis Documentation Center</title><link>/rs/databases/connect/</link><description>Recent content in Connect to a database on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/rs/databases/connect/index.xml" rel="self" type="application/rss+xml"/><item><title>Supported connection clients</title><link>/rs/databases/connect/supported-clients-browsers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/connect/supported-clients-browsers/</guid><description>You can connect to Redis Enterprise Software databases programmatically using client libraries.
Redis client libraries To connect an application to a Redis database hosted by Redis Enterprise Software, use a client library appropriate for your programming language.
You can also use the redis-cli utility to connect to a database from the command line.
For examples of each approach, see Get started with Redis Enterprise Software.
Note: You cannot use client libraries to configure Redis Enterprise Software.</description></item><item><title>Test client connection</title><link>/rs/databases/connect/test-client-connectivity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/connect/test-client-connectivity/</guid><description>In various scenarios, such as after creating a new cluster or upgrading the cluster, it is highly advisable to verify client connectivity to the database.
To test client connectivity:
Create a Redis database and get the database endpoint, which contains the cluster name (FQDN). Try to connect to the database endpoint from your client of choice, and execute commands against the database. If the database does not respond, try to connect to the database endpoint by using the IP address rather than the FQDN; if you succeed, it means that the DNS is not properly configured.</description></item></channel></rss>