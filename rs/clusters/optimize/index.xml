<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Optimize clusters on Redis Documentation Center</title><link>/rs/clusters/optimize/</link><description>Recent content in Optimize clusters on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/rs/clusters/optimize/index.xml" rel="self" type="application/rss+xml"/><item><title>Benchmarking Redis Enterprise</title><link>/rs/clusters/optimize/memtier-benchmark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/memtier-benchmark/</guid><description>Use the memtier_benchmark tool to perform a performance benchmark of Redis Enterprise Software.
Prerequisites:
Redis Enterprise Software installed A cluster configured A database created For help with the prerequisites,see Get started with Redis Enterprise Software.
It is recommended to run memtier_benchmark on a separate node that is not part of the cluster being tested. If you run it on a node of the cluster, be mindful that it affects the performance of both the cluster and memtier_benchmark.</description></item><item><title>Disk sizing for heavy write scenarios</title><link>/rs/clusters/optimize/disk-sizing-heavy-write-scenarios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/disk-sizing-heavy-write-scenarios/</guid><description>In extreme write scenarios, when AOF is enabled, the AOF rewrite process may require considerably more disk space for database persistence.
To estimate the required persistent disk space in such cases, use the formula described below.
The required persistent disk space for AOF rewrite purposes in extreme write scenarios, assuming identical shard sizes:
X (1 + 3Y +Y²) where: X = each shard size Y = number of shards
Following are examples of database configurations and the persistence disk space they would require in this scenario:</description></item><item><title>Cluster environment optimization</title><link>/rs/clusters/optimize/optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/optimization/</guid><description>Redis Enterprise Software employs various algorithms to optimize performance. As part of this process, Redis Enterprise Software examines usage characteristics and load to adjust its run-time configuration accordingly. Depending on your specific usage characteristics and load, it might take Redis Enterprise Software some time to adjust itself to optimal performance.
To ensure optimal performance, you must run your workload several times and for a long duration until performance stabilizes.
In addition, you can optimize your cluster for two different environments:</description></item><item><title>Turn off services to free system memory</title><link>/rs/clusters/optimize/turn-off-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/turn-off-services/</guid><description>The Redis Enterprise Software cluster nodes host a range of services that support the cluster processes. In most deployments, either all of these services are required, or there are enough memory resources on the nodes for the database requirements.
In a deployment with limited memory resources, certain services can be disabled from API endpoint to free system memory or using the rladmin command. Before you turn off a service, make sure that your deployment does not depend on that service.</description></item><item><title>Redis OSS Cluster API Architecture</title><link>/rs/clusters/optimize/oss-cluster-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/oss-cluster-api/</guid><description>Redis OSS Cluster API reduces access times and latency with near-linear scalability. The Redis OSS Cluster API provides a simple mechanism for Redis clients to know the cluster topology.
Clients must first connect to the master node to get the cluster topology, and then they connect directly to the Redis proxy on each node that hosts a master shard.
Note: You must use a client that supports the OSS cluster API to connect to a database that has the OSS cluster API enabled.</description></item><item><title>Use the WAIT command for strong consistency</title><link>/rs/clusters/optimize/wait/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/clusters/optimize/wait/</guid><description>Redis Enterprise Software comes with the ability to replicate data to another replica for high availability and persist in-memory data on disk permanently for durability. With the WAIT command, you can control the consistency and durability guarantees for the replicated and persisted database.
Any updates that are issued to the database are typically performed with the following flow shown below;
Application issues a write, Proxy communicates with the correct master &amp;ldquo;shard&amp;rdquo; in the system that contains the given key, The acknowledgment is sent to proxy once the write operation completes The proxy sends the acknowledgment back to the application.</description></item></channel></rss>