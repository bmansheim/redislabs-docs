<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CRDBs requests on Redis Documentation Center</title><link>/rs/references/rest-api/requests/crdbs/</link><description>Recent content in CRDBs requests on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/rs/references/rest-api/requests/crdbs/index.xml" rel="self" type="application/rss+xml"/><item><title>CRDB flush requests</title><link>/rs/references/rest-api/requests/crdbs/flush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/crdbs/flush/</guid><description>Method Path Description PUT /v1/crdbs/{crdb_guid}/flush Flush an Active-Active database Flush an Active-Active database PUT /v1/crdbs/{crdb_guid}/flush Flush an Active-Active database.
Request Example HTTP request PUT /crdbs/552bbccb-99f3-4142-bd17-93d245f0bc79/flush Headers Key Value Description X-Task-ID string Specified task ID X-Result-TTL integer Time (in seconds) to keep task result URL parameters Field Type Description crdb_guid string Globally unique Active-Active database ID (GUID) Response Returns a CRDB task object.
Status codes Code Description 200 OK Action was successful.</description></item><item><title>CRDB health report requests</title><link>/rs/references/rest-api/requests/crdbs/health_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/crdbs/health_report/</guid><description>Method Path Description GET /v1/crdbs/{crdb_guid}/health_report Get a health report for an Active-Active database Get health report GET /v1/crdbs/{crdb_guid}/health_report Get a health report for an Active-Active database.
Request Example HTTP request GET /crdbs/{crdb_guid}/health_report URL parameters Field Type Description crdb_guid string Globally unique Active-Active database ID (GUID) Query parameters Field Type Description instance_id integer The request retrieves information from the specified Active-Active database instance. If this instance doesnâ€™t exist, the request retrieves information from all instances.</description></item><item><title>CRDB purge requests</title><link>/rs/references/rest-api/requests/crdbs/purge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/crdbs/purge/</guid><description>Method Path Description PUT /v1/crdbs/{crdb_guid}/purge Purge data from an instance that was forcibly removed from the Active-Active database Purge data from removed instance PUT /v1/crdbs/{crdb_guid}/purge Purge the data from an instance that was removed from the Active-Active database by force.
When you force the removal of an instance from an Active-Active database, the removed instance keeps the data and configuration according to the last successful synchronization.
To delete the data and configuration from the forcefully removed instance you must use this API (Must be executed locally on the removed instance).</description></item><item><title>CRDB updates requests</title><link>/rs/references/rest-api/requests/crdbs/updates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/references/rest-api/requests/crdbs/updates/</guid><description>Method Path Description POST /v1/crdbs/{crdb_guid}/updates Modify Active-Active confgurarion Modify Active-Active configuration POST /v1/crdbs/{crdb_guid}/updates Modify Active-Active configuration.
Warning - This is a very powerful API request and can cause damage if used incorrectly. In order to add or remove instances, you must use this API. For simple configuration updates, it is recommended to use PATCH on /crdbs/{crdb_guid} instead.
Updating default_db_config affects both existing and new instances that may be added.</description></item></channel></rss>