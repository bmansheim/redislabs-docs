<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deploy Redis Enterprise for Kubernetes with OpenShift on Redis Documentation Center</title><link>/kubernetes/deployment/openshift/</link><description>Recent content in Deploy Redis Enterprise for Kubernetes with OpenShift on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/kubernetes/deployment/openshift/index.xml" rel="self" type="application/rss+xml"/><item><title>Deployment with OpenShift CLI for Redis Enterprise for Kubernetes</title><link>/kubernetes/deployment/openshift/openshift-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/deployment/openshift/openshift-cli/</guid><description>These are the steps required to set up a Redis Enterprise Software cluster with OpenShift.
Prerequisites OpenShift cluster installed, with at least three nodes (each meeting the minimum requirements for a development installation) Note: If you are running an OpenShift 3 version, use the bundle.yaml file located in the openshift_3_x folder in the redis-enterprise-k8s-docs repo. This folder also contains the custom resource definitions (CRDs) compatible with OpenShift 3.x. kubectl tool installed at version 1.</description></item><item><title>Deploy Redis Enterprise with OpenShift OperatorHub</title><link>/kubernetes/deployment/openshift/openshift-operatorhub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/kubernetes/deployment/openshift/openshift-operatorhub/</guid><description>Redis Enterprise for Kubernetes can be deployed and administered entirely from the OpenShift command-line interface (CLI). For those who prefer a user interface (UI), OpenShift also provides the OperatorHub, a web console interface where you can install operators and create custom resources.
For details on the OperatorHub, see the OpenShift documentation.
Prepare the cluster The Redis Enterprise pods must run in OpenShift with privileges set in a Security Context Constraint. This grants the pod various rights, such as the ability to change system limits or run as a particular user.</description></item></channel></rss>