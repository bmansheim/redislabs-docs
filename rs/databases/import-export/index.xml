<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Import and export data on Redis Documentation Center</title><link>/rs/databases/import-export/</link><description>Recent content in Import and export data on Redis Documentation Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/rs/databases/import-export/index.xml" rel="self" type="application/rss+xml"/><item><title>Import data into a database</title><link>/rs/databases/import-export/import-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/import-data/</guid><description>You can import, export, or backup files of a specific Redis Enterprise Software database to restore data. You can either import from a single file or from multiple files, such as when you want to import from a backup of a clustered database.
Warning - Importing data erases all existing content in the database. Import data into a database To import data into a database:
Sign in to the admin console and then select Databases from the main menu.</description></item><item><title>Export data from a database</title><link>/rs/databases/import-export/export-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/export-data/</guid><description>You can export the data from a specific database at any time. The following destinations are supported:
FTP server SFTP server Amazon AWS S3 Local mount point Azure Blob Storage Google Cloud Storage If you export a database configured for database clustering, export files are created for each shard.
Storage space requirements Before exporting data, verify that you have enough space available in the storage destination and on the local storage associated with the node hosting the database.</description></item><item><title>Flush database data</title><link>/rs/databases/import-export/flush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/flush/</guid><description>To delete the data in a database without deleting the database configuration, you can flush the data from the database.
You can use the admin console to flush data from Active-Active databases.
Warning - The flush command deletes ALL in-memory and persistence data in the database. We recommend that you back up your database before you flush the data. Flush data from a database From the command line, you can flush a database with the redis-cli command or with your favorite Redis client.</description></item><item><title>Schedule periodic backups</title><link>/rs/databases/import-export/schedule-backups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/schedule-backups/</guid><description>Periodic backups provide a way to restore data with minimal data loss. With Redis Enterprise Software, you can schedule periodic backups to occur once a day (every 24 hours), twice a day (every twelve hours), every four hours, or every hour.
As of v6.2.8, you can specify the start time for twenty-four or twelve hour backups.
To make an on-demand backup, export your data.
You can schedule backups to a variety of locations, including:</description></item><item><title>Migrate a database to Active-Active</title><link>/rs/databases/import-export/migrate-to-active-active/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/rs/databases/import-export/migrate-to-active-active/</guid><description>With Active-Active databases, applications can read and write to the same dataset from different geographical locations seamlessly and with latency less than 1 ms, without changing the way the application connects to the database. Active-Active databases also provide disaster recovery and accelerated data read-access for geographically distributed users.
If you have data in a single-region Redis Enterprise Software database that you want to migrate to an Active-Active database, you&amp;rsquo;ll need to create a new Active-Active database and migrate the data into the new database as a Replica Of the existing database.</description></item></channel></rss>